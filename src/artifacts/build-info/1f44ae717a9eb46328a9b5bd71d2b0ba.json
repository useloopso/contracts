{
	"id": "1f44ae717a9eb46328a9b5bd71d2b0ba",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"forge-std/=lib/forge-std/src/",
				"@openzeppelin/=lib/openzeppelin-contracts/",
				"@lukso/=lib/lukso-foundry/src/",
				"@openzeppelin-contracts-upgradeable/=lib/lukso-foundry/lib/openzeppelin-contracts-upgradeable/contracts/"
			]
		},
		"sources": {
			"src/Loopso.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"./interfaces/ILoopso.sol\";\nimport \"./interfaces/ITokenFactory.sol\";\nimport \"./interfaces/ILSP7Bridged.sol\";\n\ncontract Loopso is AccessControl, ILoopso {\n    bytes32 public constant RELAYER_ROLE = keccak256(\"RELAYER_ROLE\");\n\n    // TODO: uint256 public BRIDGE_FEE\n\n    mapping(bytes32 => TokenAttestation) public attestedTokens; // from token ID to TokenAttestation on dest chain\n    mapping(bytes32  => TokenTransfer) public tokenTransfers; // from transfer ID to transfer on source chain\n\n    ITokenFactory public tokenFactory;\n\n    constructor() {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _setRoleAdmin(RELAYER_ROLE, DEFAULT_ADMIN_ROLE);\n    }\n\n    modifier onlyAdmin() {\n        _checkRole(DEFAULT_ADMIN_ROLE);\n        _;\n    }\n\n    modifier onlyRelayer() {\n        _checkRole(RELAYER_ROLE);\n        _;\n    }\n\n    function attestToken(TokenAttestation memory attestation) external onlyAdmin {\n        address _newTokenAddress;\n\n        if (attestation.tokenType == TokenType.Fungible) {\n            _newTokenAddress = tokenFactory.createNewLSP7(attestation.name, attestation.symbol);\n        } else {\n            _newTokenAddress = tokenFactory.createNewLSP8(attestation.name, attestation.symbol);\n        }\n\n        attestation.wrappedTokenAddress = _newTokenAddress;\n        bytes32 attestationID = keccak256(abi.encodePacked(attestation.tokenAddress, attestation.tokenChain));\n        attestedTokens[attestationID] = attestation;\n        emit TokenAttested(attestationID);\n    }\n\n    function bridgeTokens(\n        address _token,\n        uint256 _amount,\n        uint256 _dstChain,\n        address _dstAddress\n    ) external {\n        // 0. TODO - calculate fee paid to bridge & add fee to _amount\n        // 1. transfer _amount tokens to the bridge from msg.sender\n        bool success = IERC20(_token).transferFrom(msg.sender, address(this), _amount);\n        require(success, \"Transfer failed. Make sure bridge is approved to spend tokens.\");\n        // 2. create tokenTransfer struct\n        TokenTransfer memory _transfer = TokenTransfer(\n            TokenTransferBase(\n                block.timestamp,\n                block.chainid,\n                msg.sender,\n                _dstChain,\n                _dstAddress,\n                _token\n            ),\n            _amount\n        );\n        bytes32 _transferID = keccak256(abi.encodePacked(block.timestamp, block.chainid, msg.sender,_dstChain,_dstAddress,_token,_amount));\n        // 3. save tokenTransfer struct\n        tokenTransfers[_transferID] = _transfer;\n        // 4. emit event\n        emit TokensBridged(_transferID);\n    }\n\n    function bridgeNonFungibleTokens(address _token, uint256 _tokenID, uint256 _dstChain, address _dstAddress) external {\n        // TODO\n    }\n\n    function bridgeTokensBack(uint256 _amount, address _to, bytes32 _tokenID) external {\n        // 1. get attested token\n        TokenAttestation memory attestedToken = attestedTokens[_tokenID];\n        require(attestedToken.tokenAddress != address(0), \"Invalid _tokenID\");\n        // 2. burn amount of tokens\n        ILSP7Bridged(attestedToken.wrappedTokenAddress).burn(msg.sender, _amount, new bytes(0));\n        // 3. emit proper event\n        emit TokensBridgedBack(_amount, _to, _tokenID);\n    }\n\n    function bridgeNonFungibleTokensBack() external {\n        // TODO\n    }\n\n    function releaseWrappedTokens(uint256 _amount, address _to, bytes32 _tokenID) external onlyRelayer {\n        // 1. get the attested token\n        TokenAttestation memory attestedToken = attestedTokens[_tokenID];\n        require(attestedToken.tokenAddress != address(0), \"Invalid _tokenID\");\n        // 2. mint amount of tokens to the _to address\n        ILSP7Bridged(attestedToken.wrappedTokenAddress).mint(_to, _amount, false, new bytes(0));\n        // 3. emit event\n        emit WrappedTokensReleased(_amount, _to, _tokenID);\n    }\n\n    function releaseWrappedNonFungibleTokens() external {\n        // TODO\n    }\n\n    function releaseTokens(uint256 _amount, address _to, address _token) external onlyRelayer {\n        bool success = IERC20(_token).transfer(_to, _amount);\n        require(success, \"Failed to payout tokens\");\n    }\n\n    function releaseNonFungibleTokens() external {\n        // TODO\n    }\n\n    function setTokenFactory(ITokenFactory _tokenFactory) external onlyAdmin {\n        require(address(_tokenFactory) != address(0), \"Can't set LSP Factory to the zero address\");\n        tokenFactory = _tokenFactory;\n    }\n}\n"
			},
			"src/interfaces/ILSP7Bridged.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface ILSP7Bridged {\n    function mint(address to, uint256 amount, bool force, bytes memory data) external;\n    function burn(address from, uint256 amount, bytes memory data) external;\n}\n"
			},
			"src/interfaces/ITokenFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface ITokenFactory {\n    event NewLSP7(address indexed tokenAddress);\n    event NewLSP8(address indexed tokenAddress);\n\n    event MasterLSP7Set(address indexed masterLSP7);\n    event MasterLSP8Set(address indexed masterLSP8);\n\n    function createNewLSP7(string memory _name, string memory _symbol) external returns (address);\n\n    function createNewLSP8(string memory _name, string memory _symbol) external returns (address);\n}"
			},
			"src/interfaces/ILoopso.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface ILoopso {\n    enum TokenType {\n        Fungible,\n        NonFungible\n    }\n\n    struct TokenAttestation {\n        address tokenAddress;\n        uint256 tokenChain;\n        TokenType tokenType;\n        uint8 decimals;\n        string symbol;\n        string name;\n        address wrappedTokenAddress;\n    }\n\n    struct TokenTransferBase {\n        uint256 timestamp;\n        uint256 srcChain;\n        address srcAddress;\n        uint256 dstChain;\n        address dstAddress;\n        address tokenAddress;\n    }\n\n    struct TokenTransfer {\n        TokenTransferBase tokenTransfer;\n        uint256 amount;\n    }\n\n    struct TokenTransferNonFungible {\n        TokenTransferBase tokenTransfer;\n        uint256 tokenID;\n    }\n\n    /** @dev Emitted by attestToken. Means a new token is supported by the bridge. */\n    event TokenAttested(bytes32 indexed tokenID);\n\n    /** @dev Emitted by bridgeTokens. transferID is used by the relayer as it helps locate the transfer details. */\n    event TokensBridged(bytes32 indexed transferID);\n\n    /** @dev Emitted by bridgeTokensBack. Relayer should use indexed params to release the tokens on the other chain. */\n    event TokensBridgedBack(uint256 indexed amount, address indexed to, bytes32 indexed tokenID);\n\n    /** @dev Emitted by releaseTokens. This means briding back wrapped tokens to the source chain was successful. */\n    event TokensReleased(uint256 indexed amount, address indexed to, address indexed token);\n\n    /** @dev Emitted by releaseWrappedTokens. This briding tokens was succesful. */\n    event WrappedTokensReleased(uint256 indexed amount, address indexed to, bytes32 indexed tokenID);\n\n    /**\n    @dev Called by bridge admin on the destination chain to attest a token.\n    Only attested tokens can be bridged.\n    @param attestation Contains details that are used to identify a token from chain A on chain B.\n     */\n    function attestToken(TokenAttestation memory attestation) external;\n\n    /**\n    @dev Called by users to bridge tokens from source chain to destination chain.\n    @param _token The address of the token to bridge.\n    @param _amount The amount of tokens to bridge.\n    @param _dstChain Chain ID where we are bridging to.\n    @param _dstAddress Address the wrapped tokens will be released to on the destination chain. \n     */\n    function bridgeTokens(\n        address _token,\n        uint256 _amount,\n        uint256 _dstChain,\n        address _dstAddress\n    ) external;\n\n    /**\n    @dev Burns _amount of locked tokens on the destination chain, emits an event that relayer picks up.\n    @param _amount Amount of tokens to bridge back.\n    @param _to Address the original tokens will be released to.\n    @param _tokenID ID of the TokenAttestation struct we use to identify a chain A token on chain B.\n     */\n    function bridgeTokensBack(uint256 _amount, address _to, bytes32 _tokenID) external;\n\n    /**\n    @dev Called by the relayer after it picks up a TokensBridgedBackEvent.\n    It releases the bridged back tokens to the user.\n    @param _amount The amount of tokens to release.\n    @param _to The address to release the tokens to.\n    @param _token The address of the token to release.\n     */\n    function releaseTokens(uint256 _amount, address _to, address _token) external;\n\n    /**\n    @dev Called by the relayer after it picks up a bridge event from the source chain.\n    It mints wrapped tokens equivalent to the tokens locked up on the source chain.\n    @param _amount Amount of wrapped tokens to mint.\n    @param _to The address the wrapped tokens will be minted to.\n    @param _tokenID The ID we use to identify a chain A token on chain B.\n     */\n    function releaseWrappedTokens(uint256 _amount, address _to, bytes32 _tokenID) external;\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@lukso/=lib/lukso-foundry/src/\",\":@openzeppelin-contracts-upgradeable/=lib/lukso-foundry/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@lukso/=lib/lukso-foundry/src/\",\":@openzeppelin-contracts-upgradeable/=lib/lukso-foundry/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@lukso/=lib/lukso-foundry/src/\",\":@openzeppelin-contracts-upgradeable/=lib/lukso-foundry/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@lukso/=lib/lukso-foundry/src/\",\":@openzeppelin-contracts-upgradeable/=lib/lukso-foundry/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@lukso/=lib/lukso-foundry/src/\",\":@openzeppelin-contracts-upgradeable/=lib/lukso-foundry/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@lukso/=lib/lukso-foundry/src/\",\":@openzeppelin-contracts-upgradeable/=lib/lukso-foundry/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@lukso/=lib/lukso-foundry/src/\",\":@openzeppelin-contracts-upgradeable/=lib/lukso-foundry/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Loopso.sol": {
				"Loopso": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "tokenID",
									"type": "bytes32"
								}
							],
							"name": "TokenAttested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "transferID",
									"type": "bytes32"
								}
							],
							"name": "TokensBridged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "tokenID",
									"type": "bytes32"
								}
							],
							"name": "TokensBridgedBack",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "TokensReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "tokenID",
									"type": "bytes32"
								}
							],
							"name": "WrappedTokensReleased",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RELAYER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenChain",
											"type": "uint256"
										},
										{
											"internalType": "enum ILoopso.TokenType",
											"name": "tokenType",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "wrappedTokenAddress",
											"type": "address"
										}
									],
									"internalType": "struct ILoopso.TokenAttestation",
									"name": "attestation",
									"type": "tuple"
								}
							],
							"name": "attestToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "attestedTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenChain",
									"type": "uint256"
								},
								{
									"internalType": "enum ILoopso.TokenType",
									"name": "tokenType",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "wrappedTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_dstChain",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_dstAddress",
									"type": "address"
								}
							],
							"name": "bridgeNonFungibleTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bridgeNonFungibleTokensBack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_dstChain",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_dstAddress",
									"type": "address"
								}
							],
							"name": "bridgeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_tokenID",
									"type": "bytes32"
								}
							],
							"name": "bridgeTokensBack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releaseNonFungibleTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "releaseTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releaseWrappedNonFungibleTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_tokenID",
									"type": "bytes32"
								}
							],
							"name": "releaseWrappedTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ITokenFactory",
									"name": "_tokenFactory",
									"type": "address"
								}
							],
							"name": "setTokenFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenFactory",
							"outputs": [
								{
									"internalType": "contract ITokenFactory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "tokenTransfers",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "srcChain",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "srcAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "dstChain",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "dstAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenAddress",
											"type": "address"
										}
									],
									"internalType": "struct ILoopso.TokenTransferBase",
									"name": "tokenTransfer",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"TokenAttested(bytes32)": {
								"details": "Emitted by attestToken. Means a new token is supported by the bridge. "
							},
							"TokensBridged(bytes32)": {
								"details": "Emitted by bridgeTokens. transferID is used by the relayer as it helps locate the transfer details. "
							},
							"TokensBridgedBack(uint256,address,bytes32)": {
								"details": "Emitted by bridgeTokensBack. Relayer should use indexed params to release the tokens on the other chain. "
							},
							"TokensReleased(uint256,address,address)": {
								"details": "Emitted by releaseTokens. This means briding back wrapped tokens to the source chain was successful. "
							},
							"WrappedTokensReleased(uint256,address,bytes32)": {
								"details": "Emitted by releaseWrappedTokens. This briding tokens was succesful. "
							}
						},
						"kind": "dev",
						"methods": {
							"attestToken((address,uint256,uint8,uint8,string,string,address))": {
								"details": "Called by bridge admin on the destination chain to attest a token. Only attested tokens can be bridged.",
								"params": {
									"attestation": "Contains details that are used to identify a token from chain A on chain B."
								}
							},
							"bridgeTokens(address,uint256,uint256,address)": {
								"details": "Called by users to bridge tokens from source chain to destination chain.",
								"params": {
									"_amount": "The amount of tokens to bridge.",
									"_dstAddress": "Address the wrapped tokens will be released to on the destination chain. ",
									"_dstChain": "Chain ID where we are bridging to.",
									"_token": "The address of the token to bridge."
								}
							},
							"bridgeTokensBack(uint256,address,bytes32)": {
								"details": "Burns _amount of locked tokens on the destination chain, emits an event that relayer picks up.",
								"params": {
									"_amount": "Amount of tokens to bridge back.",
									"_to": "Address the original tokens will be released to.",
									"_tokenID": "ID of the TokenAttestation struct we use to identify a chain A token on chain B."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"releaseTokens(uint256,address,address)": {
								"details": "Called by the relayer after it picks up a TokensBridgedBackEvent. It releases the bridged back tokens to the user.",
								"params": {
									"_amount": "The amount of tokens to release.",
									"_to": "The address to release the tokens to.",
									"_token": "The address of the token to release."
								}
							},
							"releaseWrappedTokens(uint256,address,bytes32)": {
								"details": "Called by the relayer after it picks up a bridge event from the source chain. It mints wrapped tokens equivalent to the tokens locked up on the source chain.",
								"params": {
									"_amount": "Amount of wrapped tokens to mint.",
									"_to": "The address the wrapped tokens will be minted to.",
									"_tokenID": "The ID we use to identify a chain A token on chain B."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Loopso.sol\":350:4722  contract Loopso is AccessControl, ILoopso {... */\n  mstore(0x40, 0x80)\n    /* \"src/Loopso.sol\":775:905  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/Loopso.sol\":799:841  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"src/Loopso.sol\":830:840  msg.sender */\n  caller\n    /* \"src/Loopso.sol\":799:809  _grantRole */\n  tag_5\n    /* \"src/Loopso.sol\":799:841  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_4:\n  pop\n    /* \"src/Loopso.sol\":851:898  _setRoleAdmin(RELAYER_ROLE, DEFAULT_ADMIN_ROLE) */\n  tag_6\n    /* \"src/Loopso.sol\":437:462  keccak256(\"RELAYER_ROLE\") */\n  0xe2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc4\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"src/Loopso.sol\":851:864  _setRoleAdmin */\n  tag_7\n    /* \"src/Loopso.sol\":851:898  _setRoleAdmin(RELAYER_ROLE, DEFAULT_ADMIN_ROLE) */\n  jump\t// in\ntag_6:\n    /* \"src/Loopso.sol\":350:4722  contract Loopso is AccessControl, ILoopso {... */\n  jump(tag_8)\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_5:\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n  sload\n  0xff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_12\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup4\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  dup7\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  or\n  swap1\n  sstore\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_13\n    /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap1\n    /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\ntag_13:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6424:6435  return true */\n  jump(tag_15)\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_12:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_15:\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5698:5945  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\ntag_7:\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5781:5806  bytes32 previousAdminRole */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n  0x01\n  add\n  dup1\n  sload\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5837:5871  _roles[role].adminRole = adminRole */\n  swap1\n  dup5\n  swap1\n  sstore\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5886:5938  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  swap1\n  mload\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n  swap1\n  swap2\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5837:5871  _roles[role].adminRole = adminRole */\n  dup4\n  swap2\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n  dup4\n  swap2\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n  dup7\n  swap2\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5886:5938  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n  swap2\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5781:5806  bytes32 previousAdminRole */\n  swap1\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5886:5938  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  log4\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5771:5945  {... */\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5698:5945  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"src/Loopso.sol\":350:4722  contract Loopso is AccessControl, ILoopso {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/Loopso.sol\":350:4722  contract Loopso is AccessControl, ILoopso {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x62a00971\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x9a67e7f9\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x9a67e7f9\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe77772fe\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xeac213ce\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xf86da945\n      eq\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x62a00971\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x63a4e95f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7f7b0109\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x926d7d7f\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x31ba1648\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x31ba1648\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x33b15aad\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x39578521\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4c597f8a\n      eq\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1385c670\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f73a9f8\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Loopso.sol\":624:680  mapping(bytes32  => TokenTransfer) public tokenTransfers */\n    tag_4:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      0x02\n      0x20\n      dup2\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n      dup4\n      mload\n      0xc0\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      swap2\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      dup3\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      0x04\n      dup3\n      add\n      sload\n      dup4\n      and\n      0x80\n      dup3\n      add\n      mstore\n      0x05\n      dup3\n      add\n      sload\n      swap1\n      swap3\n      and\n      0xa0\n      dup4\n      add\n      mstore\n      0x06\n      add\n      sload\n      dup3\n      jump\n    tag_33:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":945:958   */\n      dup4\n      mload\n        /* \"#utility.yul\":927:959   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1015:1019   */\n      0x20\n        /* \"#utility.yul\":1003:1020   */\n      dup1\n      dup6\n      add\n        /* \"#utility.yul\":997:1021   */\n      mload\n        /* \"#utility.yul\":975:995   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":968:1022   */\n      mstore\n        /* \"#utility.yul\":1057:1074   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":1051:1075   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1151:1172   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1129:1149   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":1122:1173   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1229:1233   */\n      0x60\n        /* \"#utility.yul\":1217:1234   */\n      dup1\n      dup6\n      add\n        /* \"#utility.yul\":1211:1235   */\n      mload\n        /* \"#utility.yul\":1189:1209   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1182:1236   */\n      mstore\n        /* \"#utility.yul\":1296:1300   */\n      0x80\n        /* \"#utility.yul\":1284:1301   */\n      dup1\n      dup6\n      add\n        /* \"#utility.yul\":1278:1302   */\n      mload\n        /* \"#utility.yul\":1274:1307   */\n      dup4\n      and\n        /* \"#utility.yul\":1252:1272   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1245:1308   */\n      mstore\n        /* \"#utility.yul\":1102:1105   */\n      0xa0\n        /* \"#utility.yul\":1356:1373   */\n      swap4\n      dup5\n      add\n        /* \"#utility.yul\":1350:1374   */\n      mload\n        /* \"#utility.yul\":1346:1379   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1324:1344   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":1317:1380   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1411:1414   */\n      0xc0\n        /* \"#utility.yul\":1396:1415   */\n      dup3\n      add\n        /* \"#utility.yul\":1389:1424   */\n      mstore\n        /* \"#utility.yul\":914:917   */\n      0xe0\n        /* \"#utility.yul\":899:918   */\n      add\n        /* \"src/Loopso.sol\":624:680  mapping(bytes32  => TokenTransfer) public tokenTransfers */\n      tag_31\n        /* \"#utility.yul\":682:1430   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_5:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_40:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":1581:1606   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1569:1571   */\n      0x20\n        /* \"#utility.yul\":1554:1572   */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      tag_31\n        /* \"#utility.yul\":1435:1612   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"src/Loopso.sol\":4502:4720  function setTokenFactory(ITokenFactory _tokenFactory) external onlyAdmin {... */\n    tag_7:\n      tag_44\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"src/Loopso.sol\":1077:1744  function attestToken(TokenAttestation memory attestation) external onlyAdmin {... */\n    tag_8:\n      tag_44\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"src/Loopso.sol\":1750:2859  function bridgeTokens(... */\n    tag_9:\n      tag_44\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_10:\n      tag_44\n      tag_61\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"src/Loopso.sol\":2865:3004  function bridgeNonFungibleTokens(address _token, uint256 _tokenID, uint256 _dstChain, address _dstAddress) external {... */\n    tag_11:\n      tag_44\n      tag_64\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_64:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\n        /* \"src/Loopso.sol\":4210:4422  function releaseTokens(uint256 _amount, address _to, address _token) external onlyRelayer {... */\n    tag_13:\n      tag_44\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n        /* \"src/Loopso.sol\":3010:3507  function bridgeTokensBack(uint256 _amount, address _to, bytes32 _tokenID) external {... */\n    tag_14:\n      tag_44\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n        /* \"src/Loopso.sol\":509:567  mapping(bytes32 => TokenAttestation) public attestedTokens */\n    tag_15:\n      tag_76\n      tag_77\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_31\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_16:\n      tag_27\n      tag_82\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"src/Loopso.sol\":398:462  bytes32 public constant RELAYER_ROLE = keccak256(\"RELAYER_ROLE\") */\n    tag_17:\n      tag_39\n        /* \"src/Loopso.sol\":437:462  keccak256(\"RELAYER_ROLE\") */\n      0xe2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc4\n        /* \"src/Loopso.sol\":398:462  bytes32 public constant RELAYER_ROLE = keccak256(\"RELAYER_ROLE\") */\n      dup2\n      jump\n        /* \"src/Loopso.sol\":3590:4123  function releaseWrappedTokens(uint256 _amount, address _to, bytes32 _tokenID) external onlyRelayer {... */\n    tag_18:\n      tag_44\n      tag_89\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_19:\n      tag_39\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_20:\n      tag_44\n      tag_95\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n        /* \"src/Loopso.sol\":735:768  ITokenFactory public tokenFactory */\n    tag_21:\n      sload(0x03)\n      tag_97\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_97:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8128:8160   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":8110:8161   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8098:8100   */\n      0x20\n        /* \"#utility.yul\":8083:8101   */\n      add\n        /* \"src/Loopso.sol\":735:768  ITokenFactory public tokenFactory */\n      tag_31\n        /* \"#utility.yul\":7942:8167   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_30:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_107\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n    tag_107:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_47:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_112\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_113\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_112:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_64\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_116\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n        /* \"src/Loopso.sol\":4502:4720  function setTokenFactory(ITokenFactory _tokenFactory) external onlyAdmin {... */\n    tag_51:\n        /* \"src/Loopso.sol\":942:972  _checkRole(DEFAULT_ADMIN_ROLE) */\n      tag_118\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"src/Loopso.sol\":942:952  _checkRole */\n      tag_113\n        /* \"src/Loopso.sol\":942:972  _checkRole(DEFAULT_ADMIN_ROLE) */\n      jump\t// in\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Loopso.sol\":4593:4629  address(_tokenFactory) != address(0) */\n      dup2\n      and\n        /* \"src/Loopso.sol\":4585:4675  require(address(_tokenFactory) != address(0), \"Can't set LSP Factory to the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8374:8376   */\n      0x20\n        /* \"src/Loopso.sol\":4585:4675  require(address(_tokenFactory) != address(0), \"Can't set LSP Factory to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8356:8377   */\n      mstore\n        /* \"#utility.yul\":8413:8415   */\n      0x29\n        /* \"#utility.yul\":8393:8411   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8386:8416   */\n      mstore\n        /* \"#utility.yul\":8452:8486   */\n      0x43616e277420736574204c535020466163746f727920746f20746865207a6572\n        /* \"#utility.yul\":8432:8450   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8425:8487   */\n      mstore\n      shl(0xb8, 0x6f2061646472657373)\n        /* \"#utility.yul\":8503:8521   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8496:8535   */\n      mstore\n        /* \"#utility.yul\":8552:8571   */\n      0x84\n      add\n        /* \"src/Loopso.sol\":4585:4675  require(address(_tokenFactory) != address(0), \"Can't set LSP Factory to the zero address\") */\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"src/Loopso.sol\":4685:4697  tokenFactory */\n      0x03\n        /* \"src/Loopso.sol\":4685:4713  tokenFactory = _tokenFactory */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/Loopso.sol\":4502:4720  function setTokenFactory(ITokenFactory _tokenFactory) external onlyAdmin {... */\n      jump\t// out\n        /* \"src/Loopso.sol\":1077:1744  function attestToken(TokenAttestation memory attestation) external onlyAdmin {... */\n    tag_55:\n        /* \"src/Loopso.sol\":942:972  _checkRole(DEFAULT_ADMIN_ROLE) */\n      tag_124\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"src/Loopso.sol\":942:952  _checkRole */\n      tag_113\n        /* \"src/Loopso.sol\":942:972  _checkRole(DEFAULT_ADMIN_ROLE) */\n      jump\t// in\n    tag_124:\n        /* \"src/Loopso.sol\":1164:1188  address _newTokenAddress */\n      0x00\n      dup1\n        /* \"src/Loopso.sol\":1203:1214  attestation */\n      dup3\n        /* \"src/Loopso.sol\":1203:1224  attestation.tokenType */\n      0x40\n      add\n      mload\n        /* \"src/Loopso.sol\":1203:1246  attestation.tokenType == TokenType.Fungible */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_130\n      jumpi\n      tag_130\n      tag_128\n      jump\t// in\n    tag_130:\n      sub\n        /* \"src/Loopso.sol\":1199:1470  if (attestation.tokenType == TokenType.Fungible) {... */\n      tag_131\n      jumpi\n        /* \"src/Loopso.sol\":1281:1293  tokenFactory */\n      sload(0x03)\n        /* \"src/Loopso.sol\":1308:1324  attestation.name */\n      0xa0\n      dup4\n      add\n      mload\n        /* \"src/Loopso.sol\":1326:1344  attestation.symbol */\n      0x80\n      dup5\n      add\n      mload\n        /* \"src/Loopso.sol\":1281:1345  tokenFactory.createNewLSP7(attestation.name, attestation.symbol) */\n      mload(0x40)\n      shl(0xe0, 0x8fe59807)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Loopso.sol\":1281:1293  tokenFactory */\n      swap1\n      swap4\n      and\n      swap3\n        /* \"src/Loopso.sol\":1281:1307  tokenFactory.createNewLSP7 */\n      0x8fe59807\n      swap3\n        /* \"src/Loopso.sol\":1281:1345  tokenFactory.createNewLSP7(attestation.name, attestation.symbol) */\n      tag_132\n      swap3\n        /* \"src/Loopso.sol\":1308:1324  attestation.name */\n      swap1\n      swap2\n        /* \"src/Loopso.sol\":1281:1345  tokenFactory.createNewLSP7(attestation.name, attestation.symbol) */\n      0x04\n      add\n      tag_133\n      jump\t// in\n    tag_132:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"src/Loopso.sol\":1262:1345  _newTokenAddress = tokenFactory.createNewLSP7(attestation.name, attestation.symbol) */\n      swap1\n      pop\n        /* \"src/Loopso.sol\":1199:1470  if (attestation.tokenType == TokenType.Fungible) {... */\n      jump(tag_138)\n    tag_131:\n        /* \"src/Loopso.sol\":1395:1407  tokenFactory */\n      sload(0x03)\n        /* \"src/Loopso.sol\":1422:1438  attestation.name */\n      0xa0\n      dup4\n      add\n      mload\n        /* \"src/Loopso.sol\":1440:1458  attestation.symbol */\n      0x80\n      dup5\n      add\n      mload\n        /* \"src/Loopso.sol\":1395:1459  tokenFactory.createNewLSP8(attestation.name, attestation.symbol) */\n      mload(0x40)\n      shl(0xe0, 0xc2c2b31f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Loopso.sol\":1395:1407  tokenFactory */\n      swap1\n      swap4\n      and\n      swap3\n        /* \"src/Loopso.sol\":1395:1421  tokenFactory.createNewLSP8 */\n      0xc2c2b31f\n      swap3\n        /* \"src/Loopso.sol\":1395:1459  tokenFactory.createNewLSP8(attestation.name, attestation.symbol) */\n      tag_139\n      swap3\n        /* \"src/Loopso.sol\":1422:1438  attestation.name */\n      swap1\n      swap2\n        /* \"src/Loopso.sol\":1395:1459  tokenFactory.createNewLSP8(attestation.name, attestation.symbol) */\n      0x04\n      add\n      tag_133\n      jump\t// in\n    tag_139:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_142:\n        /* \"src/Loopso.sol\":1376:1459  _newTokenAddress = tokenFactory.createNewLSP8(attestation.name, attestation.symbol) */\n      swap1\n      pop\n        /* \"src/Loopso.sol\":1199:1470  if (attestation.tokenType == TokenType.Fungible) {... */\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Loopso.sol\":1480:1530  attestation.wrappedTokenAddress = _newTokenAddress */\n      dup2\n      and\n        /* \"src/Loopso.sol\":1480:1511  attestation.wrappedTokenAddress */\n      0xc0\n      dup4\n      add\n        /* \"src/Loopso.sol\":1480:1530  attestation.wrappedTokenAddress = _newTokenAddress */\n      mstore\n        /* \"src/Loopso.sol\":1591:1615  attestation.tokenAddress */\n      dup2\n      mload\n        /* \"src/Loopso.sol\":1617:1639  attestation.tokenChain */\n      0x20\n      dup1\n      dup5\n      add\n      mload\n        /* \"src/Loopso.sol\":1574:1640  abi.encodePacked(attestation.tokenAddress, attestation.tokenChain) */\n      mload(0x40)\n        /* \"src/Loopso.sol\":1540:1561  bytes32 attestationID */\n      0x00\n      swap4\n        /* \"src/Loopso.sol\":1574:1640  abi.encodePacked(attestation.tokenAddress, attestation.tokenChain) */\n      tag_143\n      swap4\n        /* \"src/Loopso.sol\":1591:1615  attestation.tokenAddress */\n      swap1\n      swap3\n        /* \"src/Loopso.sol\":1617:1639  attestation.tokenChain */\n      swap2\n        /* \"src/Loopso.sol\":1574:1640  abi.encodePacked(attestation.tokenAddress, attestation.tokenChain) */\n      add\n        /* \"#utility.yul\":9403:9405   */\n      0x60\n        /* \"#utility.yul\":9399:9414   */\n      swap3\n      swap1\n      swap3\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":9395:9448   */\n      and\n        /* \"#utility.yul\":9383:9449   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9474:9476   */\n      0x14\n        /* \"#utility.yul\":9465:9477   */\n      dup3\n      add\n        /* \"#utility.yul\":9458:9486   */\n      mstore\n        /* \"#utility.yul\":9511:9513   */\n      0x34\n        /* \"#utility.yul\":9502:9514   */\n      add\n      swap1\n        /* \"#utility.yul\":9226:9520   */\n      jump\n        /* \"src/Loopso.sol\":1574:1640  abi.encodePacked(attestation.tokenAddress, attestation.tokenChain) */\n    tag_143:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      not(0x1f)\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n        /* \"src/Loopso.sol\":1564:1641  keccak256(abi.encodePacked(attestation.tokenAddress, attestation.tokenChain)) */\n      dup2\n      mload\n        /* \"src/Loopso.sol\":1574:1640  abi.encodePacked(attestation.tokenAddress, attestation.tokenChain) */\n      0x20\n        /* \"src/Loopso.sol\":1564:1641  keccak256(abi.encodePacked(attestation.tokenAddress, attestation.tokenChain)) */\n      swap3\n      dup4\n      add\n      keccak256\n        /* \"src/Loopso.sol\":1651:1680  attestedTokens[attestationID] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/Loopso.sol\":1651:1665  attestedTokens */\n      0x01\n        /* \"src/Loopso.sol\":1651:1680  attestedTokens[attestationID] */\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      swap1\n      keccak256\n        /* \"src/Loopso.sol\":1651:1694  attestedTokens[attestationID] = attestation */\n      dup8\n      mload\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup2\n      sstore\n      swap4\n      dup8\n      add\n      mload\n      dup5\n      dup3\n      add\n      sstore\n      swap2\n      dup7\n      add\n      mload\n      0x02\n      dup5\n      add\n      dup1\n      sload\n        /* \"src/Loopso.sol\":1564:1641  keccak256(abi.encodePacked(attestation.tokenAddress, attestation.tokenChain)) */\n      swap3\n      swap6\n      pop\n        /* \"src/Loopso.sol\":1651:1694  attestedTokens[attestationID] = attestation */\n      dup8\n      swap5\n        /* \"src/Loopso.sol\":1651:1680  attestedTokens[attestationID] */\n      swap4\n        /* \"src/Loopso.sol\":1651:1694  attestedTokens[attestationID] = attestation */\n      swap2\n      swap3\n      swap1\n      swap2\n      not(0xff)\n      swap1\n      swap2\n      and\n      swap1\n      dup4\n      dup2\n      dup2\n      gt\n      iszero\n      tag_146\n      jumpi\n      tag_146\n      tag_128\n      jump\t// in\n    tag_146:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      0xff\n      swap1\n      swap3\n      and\n      0x0100\n      mul\n      not(0xff00)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      0x03\n      dup3\n      add\n      swap1\n      tag_147\n      swap1\n      dup3\n      tag_148\n      jump\t// in\n    tag_147:\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      0x04\n      dup3\n      add\n      swap1\n      tag_149\n      swap1\n      dup3\n      tag_148\n      jump\t// in\n    tag_149:\n      pop\n      0xc0\n      swap2\n      swap1\n      swap2\n      add\n      mload\n      0x05\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/Loopso.sol\":1709:1737  TokenAttested(attestationID) */\n      mload(0x40)\n        /* \"src/Loopso.sol\":1723:1736  attestationID */\n      dup2\n      swap1\n        /* \"src/Loopso.sol\":1709:1737  TokenAttested(attestationID) */\n      0xa755bee123b19cfd95f30d3bed835ac8dab8a08f893508aa86140d1b66c77e13\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"src/Loopso.sol\":1154:1744  {... */\n      pop\n      pop\n        /* \"src/Loopso.sol\":1077:1744  function attestToken(TokenAttestation memory attestation) external onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"src/Loopso.sol\":1750:2859  function bridgeTokens(... */\n    tag_59:\n        /* \"src/Loopso.sol\":2056:2119  IERC20(_token).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"src/Loopso.sol\":2084:2094  msg.sender */\n      caller\n        /* \"src/Loopso.sol\":2056:2119  IERC20(_token).transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12320:12354   */\n      mstore\n        /* \"src/Loopso.sol\":2104:2108  this */\n      address\n        /* \"#utility.yul\":12370:12388   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12363:12406   */\n      mstore\n        /* \"#utility.yul\":12422:12440   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":12415:12449   */\n      dup5\n      swap1\n      mstore\n        /* \"src/Loopso.sol\":2041:2053  bool success */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Loopso.sol\":2056:2083  IERC20(_token).transferFrom */\n      dup7\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":12255:12273   */\n      0x64\n      add\n        /* \"src/Loopso.sol\":2056:2119  IERC20(_token).transferFrom(msg.sender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"src/Loopso.sol\":2041:2119  bool success = IERC20(_token).transferFrom(msg.sender, address(this), _amount) */\n      swap1\n      pop\n        /* \"src/Loopso.sol\":2137:2144  success */\n      dup1\n        /* \"src/Loopso.sol\":2129:2211  require(success, \"Transfer failed. Make sure bridge is approved to spend tokens.\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12944:12946   */\n      0x20\n        /* \"src/Loopso.sol\":2129:2211  require(success, \"Transfer failed. Make sure bridge is approved to spend tokens.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12926:12947   */\n      mstore\n        /* \"#utility.yul\":12983:12985   */\n      0x3e\n        /* \"#utility.yul\":12963:12981   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12956:12986   */\n      mstore\n        /* \"#utility.yul\":13022:13056   */\n      0x5472616e73666572206661696c65642e204d616b652073757265206272696467\n        /* \"#utility.yul\":13002:13020   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12995:13057   */\n      mstore\n        /* \"#utility.yul\":13093:13125   */\n      0x6520697320617070726f76656420746f207370656e6420746f6b656e732e0000\n        /* \"#utility.yul\":13073:13091   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13066:13126   */\n      mstore\n        /* \"#utility.yul\":13143:13162   */\n      0x84\n      add\n        /* \"src/Loopso.sol\":2129:2211  require(success, \"Transfer failed. Make sure bridge is approved to spend tokens.\") */\n      tag_121\n        /* \"#utility.yul\":12742:13168   */\n      jump\n        /* \"src/Loopso.sol\":2129:2211  require(success, \"Transfer failed. Make sure bridge is approved to spend tokens.\") */\n    tag_157:\n        /* \"src/Loopso.sol\":2296:2557  TokenTransfer(... */\n      0x40\n      dup1\n      mload\n        /* \"src/Loopso.sol\":2323:2526  TokenTransferBase(... */\n      0x0100\n      dup2\n      add\n      dup3\n      mstore\n        /* \"src/Loopso.sol\":2358:2373  block.timestamp */\n      timestamp\n        /* \"src/Loopso.sol\":2296:2557  TokenTransfer(... */\n      dup2\n      dup4\n      add\n        /* \"src/Loopso.sol\":2323:2526  TokenTransferBase(... */\n      dup2\n      dup2\n      mstore\n        /* \"src/Loopso.sol\":2391:2404  block.chainid */\n      chainid\n        /* \"src/Loopso.sol\":2323:2526  TokenTransferBase(... */\n      0x60\n      dup1\n      dup6\n      add\n      dup3\n      swap1\n      mstore\n        /* \"src/Loopso.sol\":2422:2432  msg.sender */\n      caller\n        /* \"src/Loopso.sol\":2323:2526  TokenTransferBase(... */\n      0x80\n      dup7\n      add\n      dup2\n      swap1\n      mstore\n      0xa0\n      dup7\n      add\n      dup11\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      0xc0\n      dup9\n      add\n      mstore\n      dup13\n      and\n      0xe0\n      dup8\n      add\n      mstore\n        /* \"src/Loopso.sol\":2296:2557  TokenTransfer(... */\n      swap3\n      dup6\n      mstore\n        /* \"src/Loopso.sol\":2323:2526  TokenTransferBase(... */\n      0x20\n        /* \"src/Loopso.sol\":2296:2557  TokenTransfer(... */\n      dup1\n      dup7\n      add\n      dup12\n      swap1\n      mstore\n        /* \"src/Loopso.sol\":2599:2696  abi.encodePacked(block.timestamp, block.chainid, msg.sender,_dstChain,_dstAddress,_token,_amount) */\n      dup7\n      mload\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":13470:13489   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":13505:13517   */\n      swap5\n      dup4\n      add\n        /* \"#utility.yul\":13498:13526   */\n      mstore\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":13610:13625   */\n      swap1\n      dup5\n      shl\n        /* \"#utility.yul\":13606:13630   */\n      dup2\n      and\n        /* \"#utility.yul\":13592:13604   */\n      dup3\n      dup6\n      add\n        /* \"#utility.yul\":13585:13631   */\n      mstore\n        /* \"#utility.yul\":13647:13659   */\n      0x74\n      dup3\n      add\n        /* \"#utility.yul\":13640:13668   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":13703:13718   */\n      dup6\n      dup5\n      shl\n        /* \"#utility.yul\":13699:13723   */\n      dup2\n      and\n        /* \"#utility.yul\":13684:13697   */\n      0x94\n      dup4\n      add\n        /* \"#utility.yul\":13677:13724   */\n      mstore\n        /* \"#utility.yul\":13759:13774   */\n      swap3\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":13755:13779   */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":13740:13753   */\n      0xa8\n      dup4\n      add\n        /* \"#utility.yul\":13733:13780   */\n      mstore\n        /* \"#utility.yul\":13796:13809   */\n      0xbc\n      dup3\n      add\n        /* \"#utility.yul\":13789:13818   */\n      dup7\n      swap1\n      mstore\n        /* \"src/Loopso.sol\":2296:2557  TokenTransfer(... */\n      swap1\n      0x00\n      swap1\n        /* \"#utility.yul\":13834:13847   */\n      0xdc\n      add\n        /* \"src/Loopso.sol\":2599:2696  abi.encodePacked(block.timestamp, block.chainid, msg.sender,_dstChain,_dstAddress,_token,_amount) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      not(0x1f)\n      add\n      dup2\n      mstore\n      dup3\n      dup3\n      mstore\n        /* \"src/Loopso.sol\":2589:2697  keccak256(abi.encodePacked(block.timestamp, block.chainid, msg.sender,_dstChain,_dstAddress,_token,_amount)) */\n      dup1\n      mload\n        /* \"src/Loopso.sol\":2599:2696  abi.encodePacked(block.timestamp, block.chainid, msg.sender,_dstChain,_dstAddress,_token,_amount) */\n      0x20\n        /* \"src/Loopso.sol\":2589:2697  keccak256(abi.encodePacked(block.timestamp, block.chainid, msg.sender,_dstChain,_dstAddress,_token,_amount)) */\n      swap2\n      dup3\n      add\n      keccak256\n        /* \"src/Loopso.sol\":2747:2774  tokenTransfers[_transferID] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/Loopso.sol\":2747:2761  tokenTransfers */\n      0x02\n        /* \"src/Loopso.sol\":2747:2774  tokenTransfers[_transferID] */\n      dup1\n      dup5\n      mstore\n      dup5\n      dup3\n      keccak256\n        /* \"src/Loopso.sol\":2747:2786  tokenTransfers[_transferID] = _transfer */\n      dup9\n      mload\n      dup1\n      mload\n      dup3\n      sstore\n      dup1\n      dup7\n      add\n      mload\n      0x01\n      dup4\n      add\n      sstore\n      swap6\n      dup7\n      add\n      mload\n      swap2\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      swap2\n      sstore\n      0x60\n      dup8\n      add\n      mload\n      0x03\n      dup4\n      add\n      sstore\n      0x80\n      dup8\n      add\n      mload\n      0x04\n      dup4\n      add\n      dup1\n      sload\n      dup4\n      and\n      swap2\n      dup6\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0xa0\n      swap1\n      swap7\n      add\n      mload\n      0x05\n      dup3\n      add\n      dup1\n      sload\n      swap1\n      swap8\n      and\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap5\n      sstore\n      swap2\n      dup7\n      add\n      mload\n      0x06\n      swap1\n      swap4\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"src/Loopso.sol\":2589:2697  keccak256(abi.encodePacked(block.timestamp, block.chainid, msg.sender,_dstChain,_dstAddress,_token,_amount)) */\n      swap1\n      swap3\n      pop\n      dup3\n      swap2\n        /* \"src/Loopso.sol\":2826:2852  TokensBridged(_transferID) */\n      0x911623f001224d5d44bba15e09f9764c38794e74d052085b3e24c04e05b7aed7\n      swap2\n        /* \"src/Loopso.sol\":2747:2774  tokenTransfers[_transferID] */\n      swap1\n        /* \"src/Loopso.sol\":2826:2852  TokensBridged(_transferID) */\n      log2\n        /* \"src/Loopso.sol\":1892:2859  {... */\n      pop\n      pop\n      pop\n        /* \"src/Loopso.sol\":1750:2859  function bridgeTokens(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_165\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_165:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_166\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_167\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_166:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Loopso.sol\":4210:4422  function releaseTokens(uint256 _amount, address _to, address _token) external onlyRelayer {... */\n    tag_71:\n        /* \"src/Loopso.sol\":1029:1053  _checkRole(RELAYER_ROLE) */\n      tag_171\n        /* \"src/Loopso.sol\":437:462  keccak256(\"RELAYER_ROLE\") */\n      0xe2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc4\n        /* \"src/Loopso.sol\":1029:1039  _checkRole */\n      tag_113\n        /* \"src/Loopso.sol\":1029:1053  _checkRole(RELAYER_ROLE) */\n      jump\t// in\n    tag_171:\n        /* \"src/Loopso.sol\":4325:4362  IERC20(_token).transfer(_to, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14050:14082   */\n      dup4\n      dup2\n      and\n        /* \"src/Loopso.sol\":4325:4362  IERC20(_token).transfer(_to, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":14032:14083   */\n      mstore\n        /* \"#utility.yul\":14099:14117   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14092:14126   */\n      dup6\n      swap1\n      mstore\n        /* \"src/Loopso.sol\":4310:4322  bool success */\n      0x00\n      swap2\n        /* \"src/Loopso.sol\":4325:4348  IERC20(_token).transfer */\n      swap1\n      dup4\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":14005:14023   */\n      0x44\n      add\n        /* \"src/Loopso.sol\":4325:4362  IERC20(_token).transfer(_to, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_177:\n        /* \"src/Loopso.sol\":4310:4362  bool success = IERC20(_token).transfer(_to, _amount) */\n      swap1\n      pop\n        /* \"src/Loopso.sol\":4380:4387  success */\n      dup1\n        /* \"src/Loopso.sol\":4372:4415  require(success, \"Failed to payout tokens\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14339:14341   */\n      0x20\n        /* \"src/Loopso.sol\":4372:4415  require(success, \"Failed to payout tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14321:14342   */\n      mstore\n        /* \"#utility.yul\":14378:14380   */\n      0x17\n        /* \"#utility.yul\":14358:14376   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14351:14381   */\n      mstore\n        /* \"#utility.yul\":14417:14442   */\n      0x4661696c656420746f207061796f757420746f6b656e73000000000000000000\n        /* \"#utility.yul\":14397:14415   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14390:14443   */\n      mstore\n        /* \"#utility.yul\":14460:14478   */\n      0x64\n      add\n        /* \"src/Loopso.sol\":4372:4415  require(success, \"Failed to payout tokens\") */\n      tag_121\n        /* \"#utility.yul\":14137:14484   */\n      jump\n        /* \"src/Loopso.sol\":3010:3507  function bridgeTokensBack(uint256 _amount, address _to, bytes32 _tokenID) external {... */\n    tag_75:\n        /* \"src/Loopso.sol\":3136:3173  TokenAttestation memory attestedToken */\n      0x00\n        /* \"src/Loopso.sol\":3176:3200  attestedTokens[_tokenID] */\n      dup2\n      dup2\n      mstore\n        /* \"src/Loopso.sol\":3176:3190  attestedTokens */\n      0x01\n        /* \"src/Loopso.sol\":3176:3200  attestedTokens[_tokenID] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"src/Loopso.sol\":3136:3200  TokenAttestation memory attestedToken = attestedTokens[_tokenID] */\n      dup2\n      mload\n      0xe0\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      dup2\n      dup6\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      swap3\n      swap4\n        /* \"src/Loopso.sol\":3176:3200  attestedTokens[_tokenID] */\n      swap1\n      swap3\n        /* \"src/Loopso.sol\":3136:3200  TokenAttestation memory attestedToken = attestedTokens[_tokenID] */\n      swap2\n      dup5\n      add\n      swap2\n      0xff\n      and\n      swap1\n      dup2\n      gt\n      iszero\n      tag_183\n      jumpi\n      tag_183\n      tag_128\n      jump\t// in\n    tag_183:\n      0x01\n      dup2\n      gt\n      iszero\n      tag_185\n      jumpi\n      tag_185\n      tag_128\n      jump\t// in\n    tag_185:\n      dup2\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      0x20\n      dup3\n      add\n      mstore\n      0x03\n      dup3\n      add\n      dup1\n      sload\n      0x40\n      swap1\n      swap3\n      add\n      swap2\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_188\n      swap1\n      tag_187\n      jump\t// in\n    tag_188:\n      dup1\n      iszero\n      tag_189\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_190\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_189)\n    tag_190:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_191:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_191\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      dup1\n      sload\n      tag_192\n      swap1\n      tag_187\n      jump\t// in\n    tag_192:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_193\n      swap1\n      tag_187\n      jump\t// in\n    tag_193:\n      dup1\n      iszero\n      tag_194\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_195\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_194)\n    tag_195:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_196:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_196\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_194:\n      pop\n      pop\n      pop\n      swap2\n      dup4\n      mstore\n      pop\n      pop\n      0x05\n      swap2\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"src/Loopso.sol\":3218:3244  attestedToken.tokenAddress */\n      dup2\n      mload\n        /* \"src/Loopso.sol\":3136:3200  TokenAttestation memory attestedToken = attestedTokens[_tokenID] */\n      swap2\n      swap3\n      pop\n        /* \"src/Loopso.sol\":3218:3258  attestedToken.tokenAddress != address(0) */\n      and\n        /* \"src/Loopso.sol\":3210:3279  require(attestedToken.tokenAddress != address(0), \"Invalid _tokenID\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14691:14693   */\n      0x20\n        /* \"src/Loopso.sol\":3210:3279  require(attestedToken.tokenAddress != address(0), \"Invalid _tokenID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14673:14694   */\n      mstore\n        /* \"#utility.yul\":14730:14732   */\n      0x10\n        /* \"#utility.yul\":14710:14728   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14703:14733   */\n      mstore\n      shl(0x82, 0x125b9d985b1a590817dd1bdad95b9251)\n        /* \"#utility.yul\":14749:14767   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14742:14788   */\n      mstore\n        /* \"#utility.yul\":14805:14823   */\n      0x64\n      add\n        /* \"src/Loopso.sol\":3210:3279  require(attestedToken.tokenAddress != address(0), \"Invalid _tokenID\") */\n      tag_121\n        /* \"#utility.yul\":14489:14829   */\n      jump\n        /* \"src/Loopso.sol\":3210:3279  require(attestedToken.tokenAddress != address(0), \"Invalid _tokenID\") */\n    tag_197:\n        /* \"src/Loopso.sol\":3338:3371  attestedToken.wrappedTokenAddress */\n      0xc0\n      dup2\n      add\n      mload\n        /* \"src/Loopso.sol\":3399:3411  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"src/Loopso.sol\":3409:3410  0 */\n      0x00\n        /* \"src/Loopso.sol\":3399:3411  new bytes(0) */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      dup3\n      swap1\n      mstore\n      shl(0xe0, 0x44d17187)\n        /* \"src/Loopso.sol\":3325:3412  ILSP7Bridged(attestedToken.wrappedTokenAddress).burn(msg.sender, _amount, new bytes(0)) */\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Loopso.sol\":3325:3377  ILSP7Bridged(attestedToken.wrappedTokenAddress).burn */\n      swap1\n      swap2\n      and\n      swap1\n      0x44d17187\n      swap1\n        /* \"src/Loopso.sol\":3325:3412  ILSP7Bridged(attestedToken.wrappedTokenAddress).burn(msg.sender, _amount, new bytes(0)) */\n      tag_204\n      swap1\n        /* \"src/Loopso.sol\":3378:3388  msg.sender */\n      caller\n      swap1\n        /* \"src/Loopso.sol\":3390:3397  _amount */\n      dup9\n      swap1\n        /* \"src/Loopso.sol\":3325:3412  ILSP7Bridged(attestedToken.wrappedTokenAddress).burn(msg.sender, _amount, new bytes(0)) */\n      0x24\n      dup2\n      add\n      tag_205\n      jump\t// in\n    tag_204:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_208:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Loopso.sol\":3491:3499  _tokenID */\n      dup2\n        /* \"src/Loopso.sol\":3486:3489  _to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Loopso.sol\":3459:3500  TokensBridgedBack(_amount, _to, _tokenID) */\n      and\n        /* \"src/Loopso.sol\":3477:3484  _amount */\n      dup6\n        /* \"src/Loopso.sol\":3459:3500  TokensBridgedBack(_amount, _to, _tokenID) */\n      0x80c5d77a092b389b97d2b4a5bc721315e540c267567756df827f2edab66facba\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/Loopso.sol\":3093:3507  {... */\n      pop\n        /* \"src/Loopso.sol\":3010:3507  function bridgeTokensBack(uint256 _amount, address _to, bytes32 _tokenID) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Loopso.sol\":509:567  mapping(bytes32 => TokenAttestation) public attestedTokens */\n    tag_78:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      dup2\n      add\n      sload\n      0x02\n      dup3\n      add\n      sload\n      0x03\n      dup4\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap6\n      and\n      swap5\n      swap3\n      swap4\n      0xff\n      dup1\n      dup5\n      and\n      swap5\n      0x0100\n      swap1\n      swap5\n      div\n      and\n      swap3\n      swap1\n      swap2\n      swap1\n      tag_209\n      swap1\n      tag_187\n      jump\t// in\n    tag_209:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_210\n      swap1\n      tag_187\n      jump\t// in\n    tag_210:\n      dup1\n      iszero\n      tag_211\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_212\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_211)\n    tag_212:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_213:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_213\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_211:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x04\n      add\n      dup1\n      sload\n      tag_214\n      swap1\n      tag_187\n      jump\t// in\n    tag_214:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_215\n      swap1\n      tag_187\n      jump\t// in\n    tag_215:\n      dup1\n      iszero\n      tag_216\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_217\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_216)\n    tag_217:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_218:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_218\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_216:\n      pop\n      pop\n      pop\n      0x05\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup8\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_83:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"src/Loopso.sol\":3590:4123  function releaseWrappedTokens(uint256 _amount, address _to, bytes32 _tokenID) external onlyRelayer {... */\n    tag_90:\n        /* \"src/Loopso.sol\":1029:1053  _checkRole(RELAYER_ROLE) */\n      tag_221\n        /* \"src/Loopso.sol\":437:462  keccak256(\"RELAYER_ROLE\") */\n      0xe2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc4\n        /* \"src/Loopso.sol\":1029:1039  _checkRole */\n      tag_113\n        /* \"src/Loopso.sol\":1029:1053  _checkRole(RELAYER_ROLE) */\n      jump\t// in\n    tag_221:\n        /* \"src/Loopso.sol\":3736:3773  TokenAttestation memory attestedToken */\n      0x00\n        /* \"src/Loopso.sol\":3776:3800  attestedTokens[_tokenID] */\n      dup2\n      dup2\n      mstore\n        /* \"src/Loopso.sol\":3776:3790  attestedTokens */\n      0x01\n        /* \"src/Loopso.sol\":3776:3800  attestedTokens[_tokenID] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"src/Loopso.sol\":3736:3800  TokenAttestation memory attestedToken = attestedTokens[_tokenID] */\n      dup2\n      mload\n      0xe0\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      dup2\n      dup6\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      swap3\n      swap4\n        /* \"src/Loopso.sol\":3776:3800  attestedTokens[_tokenID] */\n      swap1\n      swap3\n        /* \"src/Loopso.sol\":3736:3800  TokenAttestation memory attestedToken = attestedTokens[_tokenID] */\n      swap2\n      dup5\n      add\n      swap2\n      0xff\n      and\n      swap1\n      dup2\n      gt\n      iszero\n      tag_224\n      jumpi\n      tag_224\n      tag_128\n      jump\t// in\n    tag_224:\n      0x01\n      dup2\n      gt\n      iszero\n      tag_226\n      jumpi\n      tag_226\n      tag_128\n      jump\t// in\n    tag_226:\n      dup2\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      0x20\n      dup3\n      add\n      mstore\n      0x03\n      dup3\n      add\n      dup1\n      sload\n      0x40\n      swap1\n      swap3\n      add\n      swap2\n      tag_227\n      swap1\n      tag_187\n      jump\t// in\n    tag_227:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_228\n      swap1\n      tag_187\n      jump\t// in\n    tag_228:\n      dup1\n      iszero\n      tag_229\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_230\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_229)\n    tag_230:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_231:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_231\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      dup1\n      sload\n      tag_232\n      swap1\n      tag_187\n      jump\t// in\n    tag_232:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_233\n      swap1\n      tag_187\n      jump\t// in\n    tag_233:\n      dup1\n      iszero\n      tag_234\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_235\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_234)\n    tag_235:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_236:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_236\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_234:\n      pop\n      pop\n      pop\n      swap2\n      dup4\n      mstore\n      pop\n      pop\n      0x05\n      swap2\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"src/Loopso.sol\":3818:3844  attestedToken.tokenAddress */\n      dup2\n      mload\n        /* \"src/Loopso.sol\":3736:3800  TokenAttestation memory attestedToken = attestedTokens[_tokenID] */\n      swap2\n      swap3\n      pop\n        /* \"src/Loopso.sol\":3818:3858  attestedToken.tokenAddress != address(0) */\n      and\n        /* \"src/Loopso.sol\":3810:3879  require(attestedToken.tokenAddress != address(0), \"Invalid _tokenID\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14691:14693   */\n      0x20\n        /* \"src/Loopso.sol\":3810:3879  require(attestedToken.tokenAddress != address(0), \"Invalid _tokenID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14673:14694   */\n      mstore\n        /* \"#utility.yul\":14730:14732   */\n      0x10\n        /* \"#utility.yul\":14710:14728   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14703:14733   */\n      mstore\n      shl(0x82, 0x125b9d985b1a590817dd1bdad95b9251)\n        /* \"#utility.yul\":14749:14767   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14742:14788   */\n      mstore\n        /* \"#utility.yul\":14805:14823   */\n      0x64\n      add\n        /* \"src/Loopso.sol\":3810:3879  require(attestedToken.tokenAddress != address(0), \"Invalid _tokenID\") */\n      tag_121\n        /* \"#utility.yul\":14489:14829   */\n      jump\n        /* \"src/Loopso.sol\":3810:3879  require(attestedToken.tokenAddress != address(0), \"Invalid _tokenID\") */\n    tag_237:\n        /* \"src/Loopso.sol\":3957:3990  attestedToken.wrappedTokenAddress */\n      0xc0\n      dup2\n      add\n      mload\n        /* \"src/Loopso.sol\":4018:4030  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"src/Loopso.sol\":4011:4016  false */\n      0x00\n        /* \"src/Loopso.sol\":4018:4030  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap3\n      dup4\n      swap1\n      mstore\n      shl(0xe5, 0x03ac06c9)\n        /* \"src/Loopso.sol\":3944:4031  ILSP7Bridged(attestedToken.wrappedTokenAddress).mint(_to, _amount, false, new bytes(0)) */\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Loopso.sol\":3944:3996  ILSP7Bridged(attestedToken.wrappedTokenAddress).mint */\n      swap1\n      swap3\n      and\n      swap2\n      0x7580d920\n      swap2\n        /* \"src/Loopso.sol\":3944:4031  ILSP7Bridged(attestedToken.wrappedTokenAddress).mint(_to, _amount, false, new bytes(0)) */\n      tag_242\n      swap2\n        /* \"src/Loopso.sol\":3997:4000  _to */\n      dup8\n      swap2\n        /* \"src/Loopso.sol\":4002:4009  _amount */\n      dup10\n      swap2\n        /* \"src/Loopso.sol\":3944:4031  ILSP7Bridged(attestedToken.wrappedTokenAddress).mint(_to, _amount, false, new bytes(0)) */\n      0x24\n      dup2\n      add\n      tag_243\n      jump\t// in\n    tag_242:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_244\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_244:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_246\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_246:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Loopso.sol\":4107:4115  _tokenID */\n      dup2\n        /* \"src/Loopso.sol\":4102:4105  _to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/Loopso.sol\":4071:4116  WrappedTokensReleased(_amount, _to, _tokenID) */\n      and\n        /* \"src/Loopso.sol\":4093:4100  _amount */\n      dup6\n        /* \"src/Loopso.sol\":4071:4116  WrappedTokensReleased(_amount, _to, _tokenID) */\n      0x7aebc2282a0784072e43f12d40afc658f82fda3d0e830865d50dd7b0196df7f1\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/Loopso.sol\":3689:4123  {... */\n      pop\n        /* \"src/Loopso.sol\":3590:4123  function releaseWrappedTokens(uint256 _amount, address _to, bytes32 _tokenID) external onlyRelayer {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_96:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_249\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_113\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_249:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_64\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_167\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_113:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_258\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_256:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_116:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_260\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_83\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_260:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_261\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_262\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n    tag_262:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6424:6435  return true */\n      jump(tag_107)\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_261:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6466:6478  return false */\n      jump(tag_107)\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_167:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_266\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_83\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_266:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup7\n      swap2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6898:6903  false */\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6976:6987  return true */\n      jump(tag_107)\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_258:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_271\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_83\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_271:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_272\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14050:14082   */\n      dup3\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14032:14083   */\n      mstore\n        /* \"#utility.yul\":14099:14117   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":14092:14126   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":14005:14023   */\n      0x44\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      tag_121\n        /* \"#utility.yul\":13858:14132   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_272:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_29:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_287:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_288:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:677   */\n    tag_35:\n        /* \"#utility.yul\":556:562   */\n      0x00\n        /* \"#utility.yul\":609:611   */\n      0x20\n        /* \"#utility.yul\":597:606   */\n      dup3\n        /* \"#utility.yul\":588:595   */\n      dup5\n        /* \"#utility.yul\":584:607   */\n      sub\n        /* \"#utility.yul\":580:612   */\n      slt\n        /* \"#utility.yul\":577:629   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":625:626   */\n      0x00\n        /* \"#utility.yul\":622:623   */\n      dup1\n        /* \"#utility.yul\":615:627   */\n      revert\n        /* \"#utility.yul\":577:629   */\n    tag_291:\n      pop\n        /* \"#utility.yul\":648:671   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":497:677   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1617:1748   */\n    tag_275:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1692:1723   */\n      dup2\n      and\n        /* \"#utility.yul\":1682:1724   */\n      dup2\n      eq\n        /* \"#utility.yul\":1672:1742   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":1738:1739   */\n      0x00\n        /* \"#utility.yul\":1735:1736   */\n      dup1\n        /* \"#utility.yul\":1728:1740   */\n      revert\n        /* \"#utility.yul\":1753:1887   */\n    tag_276:\n        /* \"#utility.yul\":1821:1841   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1850:1881   */\n      tag_297\n        /* \"#utility.yul\":1821:1841   */\n      dup2\n        /* \"#utility.yul\":1850:1881   */\n      tag_275\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":1753:1887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1892:2207   */\n    tag_46:\n        /* \"#utility.yul\":1960:1966   */\n      0x00\n        /* \"#utility.yul\":1968:1974   */\n      dup1\n        /* \"#utility.yul\":2021:2023   */\n      0x40\n        /* \"#utility.yul\":2009:2018   */\n      dup4\n        /* \"#utility.yul\":2000:2007   */\n      dup6\n        /* \"#utility.yul\":1996:2019   */\n      sub\n        /* \"#utility.yul\":1992:2024   */\n      slt\n        /* \"#utility.yul\":1989:2041   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":2037:2038   */\n      0x00\n        /* \"#utility.yul\":2034:2035   */\n      dup1\n        /* \"#utility.yul\":2027:2039   */\n      revert\n        /* \"#utility.yul\":1989:2041   */\n    tag_299:\n        /* \"#utility.yul\":2073:2082   */\n      dup3\n        /* \"#utility.yul\":2060:2083   */\n      calldataload\n        /* \"#utility.yul\":2050:2083   */\n      swap2\n      pop\n        /* \"#utility.yul\":2133:2135   */\n      0x20\n        /* \"#utility.yul\":2122:2131   */\n      dup4\n        /* \"#utility.yul\":2118:2136   */\n      add\n        /* \"#utility.yul\":2105:2137   */\n      calldataload\n        /* \"#utility.yul\":2146:2177   */\n      tag_300\n        /* \"#utility.yul\":2171:2176   */\n      dup2\n        /* \"#utility.yul\":2146:2177   */\n      tag_275\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":2196:2201   */\n      dup1\n        /* \"#utility.yul\":2186:2201   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1892:2207   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2212:2481   */\n    tag_50:\n        /* \"#utility.yul\":2293:2299   */\n      0x00\n        /* \"#utility.yul\":2346:2348   */\n      0x20\n        /* \"#utility.yul\":2334:2343   */\n      dup3\n        /* \"#utility.yul\":2325:2332   */\n      dup5\n        /* \"#utility.yul\":2321:2344   */\n      sub\n        /* \"#utility.yul\":2317:2349   */\n      slt\n        /* \"#utility.yul\":2314:2366   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":2362:2363   */\n      0x00\n        /* \"#utility.yul\":2359:2360   */\n      dup1\n        /* \"#utility.yul\":2352:2364   */\n      revert\n        /* \"#utility.yul\":2314:2366   */\n    tag_302:\n        /* \"#utility.yul\":2401:2410   */\n      dup2\n        /* \"#utility.yul\":2388:2411   */\n      calldataload\n        /* \"#utility.yul\":2420:2451   */\n      tag_288\n        /* \"#utility.yul\":2445:2450   */\n      dup2\n        /* \"#utility.yul\":2420:2451   */\n      tag_275\n      jump\t// in\n        /* \"#utility.yul\":2486:2613   */\n    tag_202:\n        /* \"#utility.yul\":2547:2557   */\n      0x4e487b71\n        /* \"#utility.yul\":2542:2545   */\n      0xe0\n        /* \"#utility.yul\":2538:2558   */\n      shl\n        /* \"#utility.yul\":2535:2536   */\n      0x00\n        /* \"#utility.yul\":2528:2559   */\n      mstore\n        /* \"#utility.yul\":2578:2582   */\n      0x41\n        /* \"#utility.yul\":2575:2576   */\n      0x04\n        /* \"#utility.yul\":2568:2583   */\n      mstore\n        /* \"#utility.yul\":2602:2606   */\n      0x24\n        /* \"#utility.yul\":2599:2600   */\n      0x00\n        /* \"#utility.yul\":2592:2607   */\n      revert\n        /* \"#utility.yul\":2618:2866   */\n    tag_277:\n        /* \"#utility.yul\":2685:2687   */\n      0x40\n        /* \"#utility.yul\":2679:2688   */\n      mload\n        /* \"#utility.yul\":2727:2731   */\n      0xe0\n        /* \"#utility.yul\":2715:2732   */\n      dup2\n      add\n        /* \"#utility.yul\":2762:2780   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2747:2781   */\n      dup2\n      gt\n        /* \"#utility.yul\":2783:2805   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2744:2806   */\n      or\n        /* \"#utility.yul\":2741:2829   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":2809:2827   */\n      tag_307\n      tag_202\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2845:2847   */\n      0x40\n        /* \"#utility.yul\":2838:2860   */\n      mstore\n        /* \"#utility.yul\":2618:2866   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2871:3021   */\n    tag_278:\n        /* \"#utility.yul\":2946:2966   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":2995:2996   */\n      0x02\n        /* \"#utility.yul\":2985:2997   */\n      dup2\n      lt\n        /* \"#utility.yul\":2975:3015   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":3011:3012   */\n      0x00\n        /* \"#utility.yul\":3008:3009   */\n      dup1\n        /* \"#utility.yul\":3001:3013   */\n      revert\n        /* \"#utility.yul\":3026:3182   */\n    tag_279:\n        /* \"#utility.yul\":3092:3112   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3152:3156   */\n      0xff\n        /* \"#utility.yul\":3141:3157   */\n      dup2\n      and\n        /* \"#utility.yul\":3131:3158   */\n      dup2\n      eq\n        /* \"#utility.yul\":3121:3176   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":3172:3173   */\n      0x00\n        /* \"#utility.yul\":3169:3170   */\n      dup1\n        /* \"#utility.yul\":3162:3174   */\n      revert\n        /* \"#utility.yul\":3187:3906   */\n    tag_280:\n        /* \"#utility.yul\":3230:3235   */\n      0x00\n        /* \"#utility.yul\":3283:3286   */\n      dup3\n        /* \"#utility.yul\":3276:3280   */\n      0x1f\n        /* \"#utility.yul\":3268:3274   */\n      dup4\n        /* \"#utility.yul\":3264:3281   */\n      add\n        /* \"#utility.yul\":3260:3287   */\n      slt\n        /* \"#utility.yul\":3250:3305   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":3301:3302   */\n      0x00\n        /* \"#utility.yul\":3298:3299   */\n      dup1\n        /* \"#utility.yul\":3291:3303   */\n      revert\n        /* \"#utility.yul\":3250:3305   */\n    tag_313:\n        /* \"#utility.yul\":3337:3343   */\n      dup2\n        /* \"#utility.yul\":3324:3344   */\n      calldataload\n        /* \"#utility.yul\":3363:3381   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3400:3402   */\n      dup1\n        /* \"#utility.yul\":3396:3398   */\n      dup3\n        /* \"#utility.yul\":3393:3403   */\n      gt\n        /* \"#utility.yul\":3390:3426   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":3406:3424   */\n      tag_315\n      tag_202\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":3481:3483   */\n      0x40\n        /* \"#utility.yul\":3475:3484   */\n      mload\n        /* \"#utility.yul\":3449:3451   */\n      0x1f\n        /* \"#utility.yul\":3535:3548   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3531:3553   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3555:3557   */\n      0x3f\n        /* \"#utility.yul\":3527:3558   */\n      add\n        /* \"#utility.yul\":3523:3563   */\n      and\n        /* \"#utility.yul\":3511:3564   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3579:3597   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":3599:3621   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":3576:3622   */\n      or\n        /* \"#utility.yul\":3573:3645   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":3625:3643   */\n      tag_317\n      tag_202\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3665:3675   */\n      dup2\n        /* \"#utility.yul\":3661:3663   */\n      0x40\n        /* \"#utility.yul\":3654:3676   */\n      mstore\n        /* \"#utility.yul\":3700:3702   */\n      dup4\n        /* \"#utility.yul\":3692:3698   */\n      dup2\n        /* \"#utility.yul\":3685:3703   */\n      mstore\n        /* \"#utility.yul\":3746:3749   */\n      dup7\n        /* \"#utility.yul\":3739:3743   */\n      0x20\n        /* \"#utility.yul\":3734:3736   */\n      dup6\n        /* \"#utility.yul\":3726:3732   */\n      dup9\n        /* \"#utility.yul\":3722:3737   */\n      add\n        /* \"#utility.yul\":3718:3744   */\n      add\n        /* \"#utility.yul\":3715:3750   */\n      gt\n        /* \"#utility.yul\":3712:3767   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":3763:3764   */\n      0x00\n        /* \"#utility.yul\":3760:3761   */\n      dup1\n        /* \"#utility.yul\":3753:3765   */\n      revert\n        /* \"#utility.yul\":3712:3767   */\n    tag_318:\n        /* \"#utility.yul\":3827:3829   */\n      dup4\n        /* \"#utility.yul\":3820:3824   */\n      0x20\n        /* \"#utility.yul\":3812:3818   */\n      dup8\n        /* \"#utility.yul\":3808:3825   */\n      add\n        /* \"#utility.yul\":3801:3805   */\n      0x20\n        /* \"#utility.yul\":3793:3799   */\n      dup4\n        /* \"#utility.yul\":3789:3806   */\n      add\n        /* \"#utility.yul\":3776:3830   */\n      calldatacopy\n        /* \"#utility.yul\":3874:3875   */\n      0x00\n        /* \"#utility.yul\":3867:3871   */\n      0x20\n        /* \"#utility.yul\":3862:3864   */\n      dup6\n        /* \"#utility.yul\":3854:3860   */\n      dup4\n        /* \"#utility.yul\":3850:3865   */\n      add\n        /* \"#utility.yul\":3846:3872   */\n      add\n        /* \"#utility.yul\":3839:3876   */\n      mstore\n        /* \"#utility.yul\":3894:3900   */\n      dup1\n        /* \"#utility.yul\":3885:3900   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3187:3906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3911:5022   */\n    tag_54:\n        /* \"#utility.yul\":4004:4010   */\n      0x00\n        /* \"#utility.yul\":4057:4059   */\n      0x20\n        /* \"#utility.yul\":4045:4054   */\n      dup3\n        /* \"#utility.yul\":4036:4043   */\n      dup5\n        /* \"#utility.yul\":4032:4055   */\n      sub\n        /* \"#utility.yul\":4028:4060   */\n      slt\n        /* \"#utility.yul\":4025:4077   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":4073:4074   */\n      0x00\n        /* \"#utility.yul\":4070:4071   */\n      dup1\n        /* \"#utility.yul\":4063:4075   */\n      revert\n        /* \"#utility.yul\":4025:4077   */\n    tag_320:\n        /* \"#utility.yul\":4113:4122   */\n      dup2\n        /* \"#utility.yul\":4100:4123   */\n      calldataload\n        /* \"#utility.yul\":4142:4160   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4183:4185   */\n      dup1\n        /* \"#utility.yul\":4175:4181   */\n      dup3\n        /* \"#utility.yul\":4172:4186   */\n      gt\n        /* \"#utility.yul\":4169:4203   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":4199:4200   */\n      0x00\n        /* \"#utility.yul\":4196:4197   */\n      dup1\n        /* \"#utility.yul\":4189:4201   */\n      revert\n        /* \"#utility.yul\":4169:4203   */\n    tag_321:\n        /* \"#utility.yul\":4222:4244   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":4278:4282   */\n      0xe0\n        /* \"#utility.yul\":4260:4276   */\n      dup3\n      dup7\n      sub\n        /* \"#utility.yul\":4256:4283   */\n      slt\n        /* \"#utility.yul\":4253:4300   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":4296:4297   */\n      0x00\n        /* \"#utility.yul\":4293:4294   */\n      dup1\n        /* \"#utility.yul\":4286:4298   */\n      revert\n        /* \"#utility.yul\":4253:4300   */\n    tag_322:\n        /* \"#utility.yul\":4322:4339   */\n      tag_323\n      tag_277\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":4362:4384   */\n      tag_324\n        /* \"#utility.yul\":4381:4383   */\n      dup4\n        /* \"#utility.yul\":4362:4384   */\n      tag_276\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":4355:4360   */\n      dup2\n        /* \"#utility.yul\":4348:4385   */\n      mstore\n        /* \"#utility.yul\":4438:4440   */\n      0x20\n        /* \"#utility.yul\":4434:4436   */\n      dup4\n        /* \"#utility.yul\":4430:4441   */\n      add\n        /* \"#utility.yul\":4417:4442   */\n      calldataload\n        /* \"#utility.yul\":4412:4414   */\n      0x20\n        /* \"#utility.yul\":4405:4410   */\n      dup3\n        /* \"#utility.yul\":4401:4415   */\n      add\n        /* \"#utility.yul\":4394:4443   */\n      mstore\n        /* \"#utility.yul\":4475:4513   */\n      tag_325\n        /* \"#utility.yul\":4509:4511   */\n      0x40\n        /* \"#utility.yul\":4505:4507   */\n      dup5\n        /* \"#utility.yul\":4501:4512   */\n      add\n        /* \"#utility.yul\":4475:4513   */\n      tag_278\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":4470:4472   */\n      0x40\n        /* \"#utility.yul\":4463:4468   */\n      dup3\n        /* \"#utility.yul\":4459:4473   */\n      add\n        /* \"#utility.yul\":4452:4514   */\n      mstore\n        /* \"#utility.yul\":4546:4575   */\n      tag_326\n        /* \"#utility.yul\":4571:4573   */\n      0x60\n        /* \"#utility.yul\":4567:4569   */\n      dup5\n        /* \"#utility.yul\":4563:4574   */\n      add\n        /* \"#utility.yul\":4546:4575   */\n      tag_279\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":4541:4543   */\n      0x60\n        /* \"#utility.yul\":4534:4539   */\n      dup3\n        /* \"#utility.yul\":4530:4544   */\n      add\n        /* \"#utility.yul\":4523:4576   */\n      mstore\n        /* \"#utility.yul\":4622:4625   */\n      0x80\n        /* \"#utility.yul\":4618:4620   */\n      dup4\n        /* \"#utility.yul\":4614:4626   */\n      add\n        /* \"#utility.yul\":4601:4627   */\n      calldataload\n        /* \"#utility.yul\":4652:4654   */\n      dup3\n        /* \"#utility.yul\":4642:4650   */\n      dup2\n        /* \"#utility.yul\":4639:4655   */\n      gt\n        /* \"#utility.yul\":4636:4672   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":4668:4669   */\n      0x00\n        /* \"#utility.yul\":4665:4666   */\n      dup1\n        /* \"#utility.yul\":4658:4670   */\n      revert\n        /* \"#utility.yul\":4636:4672   */\n    tag_327:\n        /* \"#utility.yul\":4705:4750   */\n      tag_328\n        /* \"#utility.yul\":4742:4749   */\n      dup8\n        /* \"#utility.yul\":4731:4739   */\n      dup3\n        /* \"#utility.yul\":4727:4729   */\n      dup7\n        /* \"#utility.yul\":4723:4740   */\n      add\n        /* \"#utility.yul\":4705:4750   */\n      tag_280\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":4699:4702   */\n      0x80\n        /* \"#utility.yul\":4692:4697   */\n      dup4\n        /* \"#utility.yul\":4688:4703   */\n      add\n        /* \"#utility.yul\":4681:4751   */\n      mstore\n      pop\n        /* \"#utility.yul\":4797:4800   */\n      0xa0\n        /* \"#utility.yul\":4793:4795   */\n      dup4\n        /* \"#utility.yul\":4789:4801   */\n      add\n        /* \"#utility.yul\":4776:4802   */\n      calldataload\n        /* \"#utility.yul\":4827:4829   */\n      dup3\n        /* \"#utility.yul\":4817:4825   */\n      dup2\n        /* \"#utility.yul\":4814:4830   */\n      gt\n        /* \"#utility.yul\":4811:4847   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":4843:4844   */\n      0x00\n        /* \"#utility.yul\":4840:4841   */\n      dup1\n        /* \"#utility.yul\":4833:4845   */\n      revert\n        /* \"#utility.yul\":4811:4847   */\n    tag_329:\n        /* \"#utility.yul\":4880:4925   */\n      tag_330\n        /* \"#utility.yul\":4917:4924   */\n      dup8\n        /* \"#utility.yul\":4906:4914   */\n      dup3\n        /* \"#utility.yul\":4902:4904   */\n      dup7\n        /* \"#utility.yul\":4898:4915   */\n      add\n        /* \"#utility.yul\":4880:4925   */\n      tag_280\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":4874:4877   */\n      0xa0\n        /* \"#utility.yul\":4867:4872   */\n      dup4\n        /* \"#utility.yul\":4863:4878   */\n      add\n        /* \"#utility.yul\":4856:4926   */\n      mstore\n      pop\n        /* \"#utility.yul\":4959:4991   */\n      tag_331\n        /* \"#utility.yul\":4986:4989   */\n      0xc0\n        /* \"#utility.yul\":4982:4984   */\n      dup5\n        /* \"#utility.yul\":4978:4990   */\n      add\n        /* \"#utility.yul\":4959:4991   */\n      tag_276\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":4953:4956   */\n      0xc0\n        /* \"#utility.yul\":4942:4957   */\n      dup3\n      add\n        /* \"#utility.yul\":4935:4992   */\n      mstore\n        /* \"#utility.yul\":4946:4951   */\n      swap6\n        /* \"#utility.yul\":3911:5022   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5027:5552   */\n    tag_58:\n        /* \"#utility.yul\":5113:5119   */\n      0x00\n        /* \"#utility.yul\":5121:5127   */\n      dup1\n        /* \"#utility.yul\":5129:5135   */\n      0x00\n        /* \"#utility.yul\":5137:5143   */\n      dup1\n        /* \"#utility.yul\":5190:5193   */\n      0x80\n        /* \"#utility.yul\":5178:5187   */\n      dup6\n        /* \"#utility.yul\":5169:5176   */\n      dup8\n        /* \"#utility.yul\":5165:5188   */\n      sub\n        /* \"#utility.yul\":5161:5194   */\n      slt\n        /* \"#utility.yul\":5158:5211   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":5207:5208   */\n      0x00\n        /* \"#utility.yul\":5204:5205   */\n      dup1\n        /* \"#utility.yul\":5197:5209   */\n      revert\n        /* \"#utility.yul\":5158:5211   */\n    tag_333:\n        /* \"#utility.yul\":5246:5255   */\n      dup5\n        /* \"#utility.yul\":5233:5256   */\n      calldataload\n        /* \"#utility.yul\":5265:5296   */\n      tag_334\n        /* \"#utility.yul\":5290:5295   */\n      dup2\n        /* \"#utility.yul\":5265:5296   */\n      tag_275\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":5315:5320   */\n      swap4\n      pop\n        /* \"#utility.yul\":5367:5369   */\n      0x20\n        /* \"#utility.yul\":5352:5370   */\n      dup6\n      add\n        /* \"#utility.yul\":5339:5371   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":5418:5420   */\n      0x40\n        /* \"#utility.yul\":5403:5421   */\n      dup6\n      add\n        /* \"#utility.yul\":5390:5422   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":5474:5476   */\n      0x60\n        /* \"#utility.yul\":5459:5477   */\n      dup6\n      add\n        /* \"#utility.yul\":5446:5478   */\n      calldataload\n        /* \"#utility.yul\":5487:5520   */\n      tag_335\n        /* \"#utility.yul\":5446:5478   */\n      dup2\n        /* \"#utility.yul\":5487:5520   */\n      tag_275\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":5027:5552   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5557:6013   */\n    tag_70:\n        /* \"#utility.yul\":5634:5640   */\n      0x00\n        /* \"#utility.yul\":5642:5648   */\n      dup1\n        /* \"#utility.yul\":5650:5656   */\n      0x00\n        /* \"#utility.yul\":5703:5705   */\n      0x60\n        /* \"#utility.yul\":5691:5700   */\n      dup5\n        /* \"#utility.yul\":5682:5689   */\n      dup7\n        /* \"#utility.yul\":5678:5701   */\n      sub\n        /* \"#utility.yul\":5674:5706   */\n      slt\n        /* \"#utility.yul\":5671:5723   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":5719:5720   */\n      0x00\n        /* \"#utility.yul\":5716:5717   */\n      dup1\n        /* \"#utility.yul\":5709:5721   */\n      revert\n        /* \"#utility.yul\":5671:5723   */\n    tag_337:\n        /* \"#utility.yul\":5755:5764   */\n      dup4\n        /* \"#utility.yul\":5742:5765   */\n      calldataload\n        /* \"#utility.yul\":5732:5765   */\n      swap3\n      pop\n        /* \"#utility.yul\":5815:5817   */\n      0x20\n        /* \"#utility.yul\":5804:5813   */\n      dup5\n        /* \"#utility.yul\":5800:5818   */\n      add\n        /* \"#utility.yul\":5787:5819   */\n      calldataload\n        /* \"#utility.yul\":5828:5859   */\n      tag_338\n        /* \"#utility.yul\":5853:5858   */\n      dup2\n        /* \"#utility.yul\":5828:5859   */\n      tag_275\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":5878:5883   */\n      swap2\n      pop\n        /* \"#utility.yul\":5935:5937   */\n      0x40\n        /* \"#utility.yul\":5920:5938   */\n      dup5\n      add\n        /* \"#utility.yul\":5907:5939   */\n      calldataload\n        /* \"#utility.yul\":5948:5981   */\n      tag_339\n        /* \"#utility.yul\":5907:5939   */\n      dup2\n        /* \"#utility.yul\":5948:5981   */\n      tag_275\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6000:6007   */\n      dup1\n        /* \"#utility.yul\":5990:6007   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5557:6013   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6018:6401   */\n    tag_74:\n        /* \"#utility.yul\":6095:6101   */\n      0x00\n        /* \"#utility.yul\":6103:6109   */\n      dup1\n        /* \"#utility.yul\":6111:6117   */\n      0x00\n        /* \"#utility.yul\":6164:6166   */\n      0x60\n        /* \"#utility.yul\":6152:6161   */\n      dup5\n        /* \"#utility.yul\":6143:6150   */\n      dup7\n        /* \"#utility.yul\":6139:6162   */\n      sub\n        /* \"#utility.yul\":6135:6167   */\n      slt\n        /* \"#utility.yul\":6132:6184   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":6180:6181   */\n      0x00\n        /* \"#utility.yul\":6177:6178   */\n      dup1\n        /* \"#utility.yul\":6170:6182   */\n      revert\n        /* \"#utility.yul\":6132:6184   */\n    tag_341:\n        /* \"#utility.yul\":6216:6225   */\n      dup4\n        /* \"#utility.yul\":6203:6226   */\n      calldataload\n        /* \"#utility.yul\":6193:6226   */\n      swap3\n      pop\n        /* \"#utility.yul\":6276:6278   */\n      0x20\n        /* \"#utility.yul\":6265:6274   */\n      dup5\n        /* \"#utility.yul\":6261:6279   */\n      add\n        /* \"#utility.yul\":6248:6280   */\n      calldataload\n        /* \"#utility.yul\":6289:6320   */\n      tag_342\n        /* \"#utility.yul\":6314:6319   */\n      dup2\n        /* \"#utility.yul\":6289:6320   */\n      tag_275\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":6018:6401   */\n      swap3\n      swap6\n        /* \"#utility.yul\":6339:6344   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6391:6393   */\n      0x40\n        /* \"#utility.yul\":6376:6394   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6363:6395   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":6018:6401   */\n      jump\t// out\n        /* \"#utility.yul\":6406:6533   */\n    tag_128:\n        /* \"#utility.yul\":6467:6477   */\n      0x4e487b71\n        /* \"#utility.yul\":6462:6465   */\n      0xe0\n        /* \"#utility.yul\":6458:6478   */\n      shl\n        /* \"#utility.yul\":6455:6456   */\n      0x00\n        /* \"#utility.yul\":6448:6479   */\n      mstore\n        /* \"#utility.yul\":6498:6502   */\n      0x21\n        /* \"#utility.yul\":6495:6496   */\n      0x04\n        /* \"#utility.yul\":6488:6503   */\n      mstore\n        /* \"#utility.yul\":6522:6526   */\n      0x24\n        /* \"#utility.yul\":6519:6520   */\n      0x00\n        /* \"#utility.yul\":6512:6527   */\n      revert\n        /* \"#utility.yul\":6538:6961   */\n    tag_281:\n        /* \"#utility.yul\":6580:6583   */\n      0x00\n        /* \"#utility.yul\":6618:6623   */\n      dup2\n        /* \"#utility.yul\":6612:6624   */\n      mload\n        /* \"#utility.yul\":6645:6651   */\n      dup1\n        /* \"#utility.yul\":6640:6643   */\n      dup5\n        /* \"#utility.yul\":6633:6652   */\n      mstore\n        /* \"#utility.yul\":6670:6671   */\n      0x00\n        /* \"#utility.yul\":6680:6842   */\n    tag_345:\n        /* \"#utility.yul\":6694:6700   */\n      dup2\n        /* \"#utility.yul\":6691:6692   */\n      dup2\n        /* \"#utility.yul\":6688:6701   */\n      lt\n        /* \"#utility.yul\":6680:6842   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":6756:6760   */\n      0x20\n        /* \"#utility.yul\":6812:6825   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":6808:6830   */\n      dup2\n      add\n        /* \"#utility.yul\":6802:6831   */\n      mload\n        /* \"#utility.yul\":6784:6795   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":6780:6800   */\n      dup3\n      add\n        /* \"#utility.yul\":6773:6832   */\n      mstore\n        /* \"#utility.yul\":6709:6721   */\n      add\n        /* \"#utility.yul\":6680:6842   */\n      jump(tag_345)\n    tag_347:\n        /* \"#utility.yul\":6684:6687   */\n      pop\n        /* \"#utility.yul\":6887:6888   */\n      0x00\n        /* \"#utility.yul\":6880:6884   */\n      0x20\n        /* \"#utility.yul\":6871:6877   */\n      dup3\n        /* \"#utility.yul\":6866:6869   */\n      dup7\n        /* \"#utility.yul\":6862:6878   */\n      add\n        /* \"#utility.yul\":6858:6885   */\n      add\n        /* \"#utility.yul\":6851:6889   */\n      mstore\n        /* \"#utility.yul\":6950:6954   */\n      0x20\n        /* \"#utility.yul\":6943:6945   */\n      0x1f\n        /* \"#utility.yul\":6939:6946   */\n      not\n        /* \"#utility.yul\":6934:6936   */\n      0x1f\n        /* \"#utility.yul\":6926:6932   */\n      dup4\n        /* \"#utility.yul\":6922:6937   */\n      add\n        /* \"#utility.yul\":6918:6947   */\n      and\n        /* \"#utility.yul\":6913:6916   */\n      dup6\n        /* \"#utility.yul\":6909:6948   */\n      add\n        /* \"#utility.yul\":6905:6955   */\n      add\n        /* \"#utility.yul\":6898:6955   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6538:6961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6966:7937   */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7349:7364   */\n      dup9\n      dup2\n      and\n        /* \"#utility.yul\":7331:7365   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7396:7398   */\n      0x20\n        /* \"#utility.yul\":7381:7399   */\n      dup3\n      add\n        /* \"#utility.yul\":7374:7408   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":7274:7278   */\n      0x00\n      swap1\n        /* \"#utility.yul\":7438:7439   */\n      0x02\n        /* \"#utility.yul\":7427:7440   */\n      dup9\n      lt\n        /* \"#utility.yul\":7417:7561   */\n      tag_349\n      jumpi\n        /* \"#utility.yul\":7483:7493   */\n      0x4e487b71\n        /* \"#utility.yul\":7478:7481   */\n      0xe0\n        /* \"#utility.yul\":7474:7494   */\n      shl\n        /* \"#utility.yul\":7471:7472   */\n      0x00\n        /* \"#utility.yul\":7464:7495   */\n      mstore\n        /* \"#utility.yul\":7518:7522   */\n      0x21\n        /* \"#utility.yul\":7515:7516   */\n      0x04\n        /* \"#utility.yul\":7508:7523   */\n      mstore\n        /* \"#utility.yul\":7546:7550   */\n      0x24\n        /* \"#utility.yul\":7543:7544   */\n      0x00\n        /* \"#utility.yul\":7536:7551   */\n      revert\n        /* \"#utility.yul\":7417:7561   */\n    tag_349:\n        /* \"#utility.yul\":7597:7603   */\n      dup8\n        /* \"#utility.yul\":7592:7594   */\n      0x40\n        /* \"#utility.yul\":7581:7590   */\n      dup5\n        /* \"#utility.yul\":7577:7595   */\n      add\n        /* \"#utility.yul\":7570:7604   */\n      mstore\n        /* \"#utility.yul\":7652:7656   */\n      0xff\n        /* \"#utility.yul\":7644:7650   */\n      dup8\n        /* \"#utility.yul\":7640:7657   */\n      and\n        /* \"#utility.yul\":7635:7637   */\n      0x60\n        /* \"#utility.yul\":7624:7633   */\n      dup5\n        /* \"#utility.yul\":7620:7638   */\n      add\n        /* \"#utility.yul\":7613:7658   */\n      mstore\n        /* \"#utility.yul\":7695:7698   */\n      0xe0\n        /* \"#utility.yul\":7689:7692   */\n      0x80\n        /* \"#utility.yul\":7678:7687   */\n      dup5\n        /* \"#utility.yul\":7674:7693   */\n      add\n        /* \"#utility.yul\":7667:7699   */\n      mstore\n        /* \"#utility.yul\":7722:7768   */\n      tag_350\n        /* \"#utility.yul\":7763:7766   */\n      0xe0\n        /* \"#utility.yul\":7752:7761   */\n      dup5\n        /* \"#utility.yul\":7748:7767   */\n      add\n        /* \"#utility.yul\":7740:7746   */\n      dup8\n        /* \"#utility.yul\":7722:7768   */\n      tag_281\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":7817:7826   */\n      dup4\n        /* \"#utility.yul\":7809:7815   */\n      dup2\n        /* \"#utility.yul\":7805:7827   */\n      sub\n        /* \"#utility.yul\":7799:7802   */\n      0xa0\n        /* \"#utility.yul\":7788:7797   */\n      dup6\n        /* \"#utility.yul\":7784:7803   */\n      add\n        /* \"#utility.yul\":7777:7828   */\n      mstore\n        /* \"#utility.yul\":7845:7878   */\n      tag_351\n        /* \"#utility.yul\":7871:7877   */\n      dup2\n        /* \"#utility.yul\":7863:7869   */\n      dup8\n        /* \"#utility.yul\":7845:7878   */\n      tag_281\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7837:7878   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":7927:7929   */\n      dup1\n        /* \"#utility.yul\":7919:7925   */\n      dup5\n        /* \"#utility.yul\":7915:7930   */\n      and\n        /* \"#utility.yul\":7909:7912   */\n      0xc0\n        /* \"#utility.yul\":7898:7907   */\n      dup5\n        /* \"#utility.yul\":7894:7913   */\n      add\n        /* \"#utility.yul\":7887:7931   */\n      mstore\n      pop\n        /* \"#utility.yul\":6966:7937   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8582:8965   */\n    tag_133:\n        /* \"#utility.yul\":8779:8781   */\n      0x40\n        /* \"#utility.yul\":8768:8777   */\n      dup2\n        /* \"#utility.yul\":8761:8782   */\n      mstore\n        /* \"#utility.yul\":8742:8746   */\n      0x00\n        /* \"#utility.yul\":8805:8850   */\n      tag_355\n        /* \"#utility.yul\":8846:8848   */\n      0x40\n        /* \"#utility.yul\":8835:8844   */\n      dup4\n        /* \"#utility.yul\":8831:8849   */\n      add\n        /* \"#utility.yul\":8823:8829   */\n      dup6\n        /* \"#utility.yul\":8805:8850   */\n      tag_281\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8898:8907   */\n      dup3\n        /* \"#utility.yul\":8890:8896   */\n      dup2\n        /* \"#utility.yul\":8886:8908   */\n      sub\n        /* \"#utility.yul\":8881:8883   */\n      0x20\n        /* \"#utility.yul\":8870:8879   */\n      dup5\n        /* \"#utility.yul\":8866:8884   */\n      add\n        /* \"#utility.yul\":8859:8909   */\n      mstore\n        /* \"#utility.yul\":8926:8959   */\n      tag_356\n        /* \"#utility.yul\":8952:8958   */\n      dup2\n        /* \"#utility.yul\":8944:8950   */\n      dup6\n        /* \"#utility.yul\":8926:8959   */\n      tag_281\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":8918:8959   */\n      swap6\n        /* \"#utility.yul\":8582:8965   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8970:9221   */\n    tag_137:\n        /* \"#utility.yul\":9040:9046   */\n      0x00\n        /* \"#utility.yul\":9093:9095   */\n      0x20\n        /* \"#utility.yul\":9081:9090   */\n      dup3\n        /* \"#utility.yul\":9072:9079   */\n      dup5\n        /* \"#utility.yul\":9068:9091   */\n      sub\n        /* \"#utility.yul\":9064:9096   */\n      slt\n        /* \"#utility.yul\":9061:9113   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":9109:9110   */\n      0x00\n        /* \"#utility.yul\":9106:9107   */\n      dup1\n        /* \"#utility.yul\":9099:9111   */\n      revert\n        /* \"#utility.yul\":9061:9113   */\n    tag_358:\n        /* \"#utility.yul\":9141:9150   */\n      dup2\n        /* \"#utility.yul\":9135:9151   */\n      mload\n        /* \"#utility.yul\":9160:9191   */\n      tag_288\n        /* \"#utility.yul\":9185:9190   */\n      dup2\n        /* \"#utility.yul\":9160:9191   */\n      tag_275\n      jump\t// in\n        /* \"#utility.yul\":9525:9905   */\n    tag_187:\n        /* \"#utility.yul\":9604:9605   */\n      0x01\n        /* \"#utility.yul\":9600:9612   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":9647:9659   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":9668:9729   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":9722:9726   */\n      0x7f\n        /* \"#utility.yul\":9714:9720   */\n      dup3\n        /* \"#utility.yul\":9710:9727   */\n      and\n        /* \"#utility.yul\":9700:9727   */\n      swap2\n      pop\n        /* \"#utility.yul\":9668:9729   */\n    tag_362:\n        /* \"#utility.yul\":9775:9777   */\n      0x20\n        /* \"#utility.yul\":9767:9773   */\n      dup3\n        /* \"#utility.yul\":9764:9778   */\n      lt\n        /* \"#utility.yul\":9744:9762   */\n      dup2\n        /* \"#utility.yul\":9741:9779   */\n      sub\n        /* \"#utility.yul\":9738:9899   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":9821:9831   */\n      0x4e487b71\n        /* \"#utility.yul\":9816:9819   */\n      0xe0\n        /* \"#utility.yul\":9812:9832   */\n      shl\n        /* \"#utility.yul\":9809:9810   */\n      0x00\n        /* \"#utility.yul\":9802:9833   */\n      mstore\n        /* \"#utility.yul\":9856:9860   */\n      0x22\n        /* \"#utility.yul\":9853:9854   */\n      0x04\n        /* \"#utility.yul\":9846:9861   */\n      mstore\n        /* \"#utility.yul\":9884:9888   */\n      0x24\n        /* \"#utility.yul\":9881:9882   */\n      0x00\n        /* \"#utility.yul\":9874:9889   */\n      revert\n        /* \"#utility.yul\":9738:9899   */\n    tag_363:\n      pop\n        /* \"#utility.yul\":9525:9905   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10036:10554   */\n    tag_283:\n        /* \"#utility.yul\":10138:10140   */\n      0x1f\n        /* \"#utility.yul\":10133:10136   */\n      dup3\n        /* \"#utility.yul\":10130:10141   */\n      gt\n        /* \"#utility.yul\":10127:10548   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":10174:10179   */\n      dup1\n        /* \"#utility.yul\":10171:10172   */\n      0x00\n        /* \"#utility.yul\":10164:10180   */\n      mstore\n        /* \"#utility.yul\":10218:10222   */\n      0x20\n        /* \"#utility.yul\":10215:10216   */\n      0x00\n        /* \"#utility.yul\":10205:10223   */\n      keccak256\n        /* \"#utility.yul\":10288:10290   */\n      0x1f\n        /* \"#utility.yul\":10276:10286   */\n      dup5\n        /* \"#utility.yul\":10272:10291   */\n      add\n        /* \"#utility.yul\":10269:10270   */\n      0x05\n        /* \"#utility.yul\":10265:10292   */\n      shr\n        /* \"#utility.yul\":10259:10263   */\n      dup2\n        /* \"#utility.yul\":10255:10293   */\n      add\n        /* \"#utility.yul\":10324:10328   */\n      0x20\n        /* \"#utility.yul\":10312:10322   */\n      dup6\n        /* \"#utility.yul\":10309:10329   */\n      lt\n        /* \"#utility.yul\":10306:10353   */\n      iszero\n      tag_367\n      jumpi\n      pop\n        /* \"#utility.yul\":10347:10351   */\n      dup1\n        /* \"#utility.yul\":10306:10353   */\n    tag_367:\n        /* \"#utility.yul\":10402:10404   */\n      0x1f\n        /* \"#utility.yul\":10397:10400   */\n      dup5\n        /* \"#utility.yul\":10393:10405   */\n      add\n        /* \"#utility.yul\":10390:10391   */\n      0x05\n        /* \"#utility.yul\":10386:10406   */\n      shr\n        /* \"#utility.yul\":10380:10384   */\n      dup3\n        /* \"#utility.yul\":10376:10407   */\n      add\n        /* \"#utility.yul\":10366:10407   */\n      swap2\n      pop\n        /* \"#utility.yul\":10457:10538   */\n    tag_368:\n        /* \"#utility.yul\":10475:10477   */\n      dup2\n        /* \"#utility.yul\":10468:10473   */\n      dup2\n        /* \"#utility.yul\":10465:10478   */\n      lt\n        /* \"#utility.yul\":10457:10538   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":10534:10535   */\n      0x00\n        /* \"#utility.yul\":10520:10536   */\n      dup2\n      sstore\n        /* \"#utility.yul\":10501:10502   */\n      0x01\n        /* \"#utility.yul\":10490:10503   */\n      add\n        /* \"#utility.yul\":10457:10538   */\n      jump(tag_368)\n    tag_370:\n        /* \"#utility.yul\":10461:10464   */\n      pop\n      pop\n        /* \"#utility.yul\":10036:10554   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10730:12075   */\n    tag_148:\n        /* \"#utility.yul\":10856:10859   */\n      dup2\n        /* \"#utility.yul\":10850:10860   */\n      mload\n        /* \"#utility.yul\":10883:10901   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10875:10881   */\n      dup2\n        /* \"#utility.yul\":10872:10902   */\n      gt\n        /* \"#utility.yul\":10869:10925   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":10905:10923   */\n      tag_374\n      tag_202\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":10934:11031   */\n      tag_375\n        /* \"#utility.yul\":11024:11030   */\n      dup2\n        /* \"#utility.yul\":10984:11022   */\n      tag_376\n        /* \"#utility.yul\":11016:11020   */\n      dup5\n        /* \"#utility.yul\":11010:11021   */\n      sload\n        /* \"#utility.yul\":10984:11022   */\n      tag_187\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":10978:10982   */\n      dup5\n        /* \"#utility.yul\":10934:11031   */\n      tag_283\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":11086:11090   */\n      0x20\n      dup1\n        /* \"#utility.yul\":11143:11145   */\n      0x1f\n        /* \"#utility.yul\":11132:11146   */\n      dup4\n      gt\n        /* \"#utility.yul\":11160:11161   */\n      0x01\n        /* \"#utility.yul\":11155:11818   */\n      dup2\n      eq\n      tag_378\n      jumpi\n        /* \"#utility.yul\":11862:11863   */\n      0x00\n        /* \"#utility.yul\":11879:11885   */\n      dup5\n        /* \"#utility.yul\":11876:11965   */\n      iszero\n      tag_379\n      jumpi\n      pop\n        /* \"#utility.yul\":11931:11950   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":11925:11951   */\n      mload\n        /* \"#utility.yul\":11876:11965   */\n    tag_379:\n      not(0x00)\n        /* \"#utility.yul\":10687:10688   */\n      0x03\n        /* \"#utility.yul\":10683:10694   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":10679:10703   */\n      shr\n        /* \"#utility.yul\":10675:10704   */\n      not\n        /* \"#utility.yul\":10665:10705   */\n      and\n        /* \"#utility.yul\":10711:10712   */\n      0x01\n        /* \"#utility.yul\":10707:10718   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":10662:10719   */\n      or\n        /* \"#utility.yul\":11978:12059   */\n      dup6\n      sstore\n        /* \"#utility.yul\":11125:12069   */\n      jump(tag_377)\n        /* \"#utility.yul\":11155:11818   */\n    tag_378:\n        /* \"#utility.yul\":9983:9984   */\n      0x00\n        /* \"#utility.yul\":9976:9990   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":10020:10024   */\n      0x20\n        /* \"#utility.yul\":10007:10025   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":11191:11211   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":11309:11545   */\n    tag_382:\n        /* \"#utility.yul\":11323:11330   */\n      dup3\n        /* \"#utility.yul\":11320:11321   */\n      dup2\n        /* \"#utility.yul\":11317:11331   */\n      lt\n        /* \"#utility.yul\":11309:11545   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":11412:11431   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":11406:11432   */\n      mload\n        /* \"#utility.yul\":11391:11433   */\n      dup3\n      sstore\n        /* \"#utility.yul\":11504:11531   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":11472:11473   */\n      0x01\n        /* \"#utility.yul\":11460:11474   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":11339:11358   */\n      dup5\n      add\n        /* \"#utility.yul\":11309:11545   */\n      jump(tag_382)\n    tag_384:\n        /* \"#utility.yul\":11313:11316   */\n      pop\n        /* \"#utility.yul\":11573:11579   */\n      dup6\n        /* \"#utility.yul\":11564:11571   */\n      dup3\n        /* \"#utility.yul\":11561:11580   */\n      lt\n        /* \"#utility.yul\":11558:11759   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":11634:11653   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":11628:11654   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":11717:11718   */\n      0x03\n        /* \"#utility.yul\":11713:11727   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":11729:11732   */\n      0xf8\n        /* \"#utility.yul\":11709:11733   */\n      and\n        /* \"#utility.yul\":11705:11742   */\n      shr\n        /* \"#utility.yul\":11701:11743   */\n      not\n        /* \"#utility.yul\":11686:11744   */\n      and\n        /* \"#utility.yul\":11671:11745   */\n      dup2\n      sstore\n        /* \"#utility.yul\":11558:11759   */\n    tag_385:\n      pop\n      pop\n        /* \"#utility.yul\":11805:11806   */\n      0x01\n        /* \"#utility.yul\":11796:11802   */\n      dup5\n        /* \"#utility.yul\":11793:11794   */\n      0x01\n        /* \"#utility.yul\":11789:11803   */\n      shl\n        /* \"#utility.yul\":11785:11807   */\n      add\n        /* \"#utility.yul\":11779:11783   */\n      dup6\n        /* \"#utility.yul\":11772:11808   */\n      sstore\n        /* \"#utility.yul\":11125:12069   */\n    tag_377:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10730:12075   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12460:12737   */\n    tag_156:\n        /* \"#utility.yul\":12527:12533   */\n      0x00\n        /* \"#utility.yul\":12580:12582   */\n      0x20\n        /* \"#utility.yul\":12568:12577   */\n      dup3\n        /* \"#utility.yul\":12559:12566   */\n      dup5\n        /* \"#utility.yul\":12555:12578   */\n      sub\n        /* \"#utility.yul\":12551:12583   */\n      slt\n        /* \"#utility.yul\":12548:12600   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":12596:12597   */\n      0x00\n        /* \"#utility.yul\":12593:12594   */\n      dup1\n        /* \"#utility.yul\":12586:12598   */\n      revert\n        /* \"#utility.yul\":12548:12600   */\n    tag_388:\n        /* \"#utility.yul\":12628:12637   */\n      dup2\n        /* \"#utility.yul\":12622:12638   */\n      mload\n        /* \"#utility.yul\":12681:12686   */\n      dup1\n        /* \"#utility.yul\":12674:12687   */\n      iszero\n        /* \"#utility.yul\":12667:12688   */\n      iszero\n        /* \"#utility.yul\":12660:12665   */\n      dup2\n        /* \"#utility.yul\":12657:12689   */\n      eq\n        /* \"#utility.yul\":12647:12707   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":12703:12704   */\n      0x00\n        /* \"#utility.yul\":12700:12701   */\n      dup1\n        /* \"#utility.yul\":12693:12705   */\n      revert\n        /* \"#utility.yul\":14834:15220   */\n    tag_205:\n        /* \"#utility.yul\":15066:15067   */\n      0x01\n        /* \"#utility.yul\":15062:15063   */\n      dup1\n        /* \"#utility.yul\":15057:15060   */\n      0xa0\n        /* \"#utility.yul\":15053:15064   */\n      shl\n        /* \"#utility.yul\":15049:15068   */\n      sub\n        /* \"#utility.yul\":15041:15047   */\n      dup5\n        /* \"#utility.yul\":15037:15069   */\n      and\n        /* \"#utility.yul\":15026:15035   */\n      dup2\n        /* \"#utility.yul\":15019:15070   */\n      mstore\n        /* \"#utility.yul\":15106:15112   */\n      dup3\n        /* \"#utility.yul\":15101:15103   */\n      0x20\n        /* \"#utility.yul\":15090:15099   */\n      dup3\n        /* \"#utility.yul\":15086:15104   */\n      add\n        /* \"#utility.yul\":15079:15113   */\n      mstore\n        /* \"#utility.yul\":15149:15151   */\n      0x60\n        /* \"#utility.yul\":15144:15146   */\n      0x40\n        /* \"#utility.yul\":15133:15142   */\n      dup3\n        /* \"#utility.yul\":15129:15147   */\n      add\n        /* \"#utility.yul\":15122:15152   */\n      mstore\n        /* \"#utility.yul\":15000:15004   */\n      0x00\n        /* \"#utility.yul\":15169:15214   */\n      tag_356\n        /* \"#utility.yul\":15210:15212   */\n      0x60\n        /* \"#utility.yul\":15199:15208   */\n      dup4\n        /* \"#utility.yul\":15195:15213   */\n      add\n        /* \"#utility.yul\":15187:15193   */\n      dup5\n        /* \"#utility.yul\":15169:15214   */\n      tag_281\n      jump\t// in\n        /* \"#utility.yul\":15225:15694   */\n    tag_243:\n        /* \"#utility.yul\":15479:15480   */\n      0x01\n        /* \"#utility.yul\":15475:15476   */\n      dup1\n        /* \"#utility.yul\":15470:15473   */\n      0xa0\n        /* \"#utility.yul\":15466:15477   */\n      shl\n        /* \"#utility.yul\":15462:15481   */\n      sub\n        /* \"#utility.yul\":15454:15460   */\n      dup6\n        /* \"#utility.yul\":15450:15482   */\n      and\n        /* \"#utility.yul\":15439:15448   */\n      dup2\n        /* \"#utility.yul\":15432:15483   */\n      mstore\n        /* \"#utility.yul\":15519:15525   */\n      dup4\n        /* \"#utility.yul\":15514:15516   */\n      0x20\n        /* \"#utility.yul\":15503:15512   */\n      dup3\n        /* \"#utility.yul\":15499:15517   */\n      add\n        /* \"#utility.yul\":15492:15526   */\n      mstore\n        /* \"#utility.yul\":15576:15582   */\n      dup3\n        /* \"#utility.yul\":15569:15583   */\n      iszero\n        /* \"#utility.yul\":15562:15584   */\n      iszero\n        /* \"#utility.yul\":15557:15559   */\n      0x40\n        /* \"#utility.yul\":15546:15555   */\n      dup3\n        /* \"#utility.yul\":15542:15560   */\n      add\n        /* \"#utility.yul\":15535:15585   */\n      mstore\n        /* \"#utility.yul\":15621:15624   */\n      0x80\n        /* \"#utility.yul\":15616:15618   */\n      0x60\n        /* \"#utility.yul\":15605:15614   */\n      dup3\n        /* \"#utility.yul\":15601:15619   */\n      add\n        /* \"#utility.yul\":15594:15625   */\n      mstore\n        /* \"#utility.yul\":15413:15417   */\n      0x00\n        /* \"#utility.yul\":15642:15688   */\n      tag_398\n        /* \"#utility.yul\":15683:15686   */\n      0x80\n        /* \"#utility.yul\":15672:15681   */\n      dup4\n        /* \"#utility.yul\":15668:15687   */\n      add\n        /* \"#utility.yul\":15660:15666   */\n      dup5\n        /* \"#utility.yul\":15642:15688   */\n      tag_281\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":15634:15688   */\n      swap7\n        /* \"#utility.yul\":15225:15694   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205d50a3cb6be2bfd34fa0d0a6d24a244216ef6104de27e166abcdc003a835a13164736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_676": {
									"entryPoint": null,
									"id": 676,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 74,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_585": {
									"entryPoint": null,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setRoleAdmin_217": {
									"entryPoint": 243,
									"id": 217,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A PUSH0 CALLER PUSH2 0x4A JUMP JUMPDEST POP PUSH2 0x45 PUSH32 0xE2B7FB3B832174769106DAEBCFD6D1970523240DDA11281102DB9363B83B0DC4 PUSH0 PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x13D JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xEA JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xA2 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0xED JUMP JUMPDEST POP PUSH0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP2 DUP4 SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF SWAP2 SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x1949 DUP1 PUSH3 0x14B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x132 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x62A00971 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0x9A67E7F9 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0x9A67E7F9 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xE77772FE EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0xEAC213CE EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xF86DA945 EQ PUSH2 0x273 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x62A00971 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x63A4E95F EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x7F7B0109 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x926D7D7F EQ PUSH2 0x334 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x31BA1648 GT PUSH2 0xFA JUMPI DUP1 PUSH4 0x31BA1648 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x33B15AAD EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x39578521 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x4C597F8A EQ PUSH2 0x273 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x1385C670 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x2F73A9F8 EQ PUSH2 0x275 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x149 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x130B JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x1339 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xC0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD DUP4 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD SWAP1 DUP3 ADD MSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP1 DUP6 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP6 ADD MLOAD DUP4 AND SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 SWAP4 DUP5 ADD MLOAD SWAP1 SWAP2 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x155 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x1339 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x155 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A2 JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST PUSH2 0x273 PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x157A JUMP JUMPDEST PUSH2 0x72C JUMP JUMPDEST PUSH2 0x273 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH2 0x273 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x157A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x273 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0x9B7 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1600 JUMP JUMPDEST PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0x30E PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x149 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0xEAD JUMP JUMPDEST PUSH2 0x252 PUSH32 0xE2B7FB3B832174769106DAEBCFD6D1970523240DDA11281102DB9363B83B0DC4 DUP2 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x1600 JUMP JUMPDEST PUSH2 0xED5 JUMP JUMPDEST PUSH2 0x252 PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x11A5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x39B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x155 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3E3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x403 DUP2 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x2CF DUP4 DUP4 PUSH2 0x11D6 JUMP JUMPDEST PUSH2 0x416 PUSH0 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420736574204C535020466163746F727920746F20746865207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6F2061646472657373 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4AE PUSH0 PUSH2 0x11C9 JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4C6 JUMPI PUSH2 0x4C6 PUSH2 0x1635 JUMP JUMPDEST SUB PUSH2 0x54C JUMPI PUSH1 0x3 SLOAD PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x8FE59807 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x8FE59807 SWAP3 PUSH2 0x505 SWAP3 SWAP1 SWAP2 PUSH1 0x4 ADD PUSH2 0x170B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x521 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x1738 JUMP JUMPDEST SWAP1 POP PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xC2C2B31F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0xC2C2B31F SWAP3 PUSH2 0x586 SWAP3 SWAP1 SWAP2 PUSH1 0x4 ADD PUSH2 0x170B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x1738 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xC0 DUP4 ADD MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH0 SWAP4 PUSH2 0x60F SWAP4 SWAP1 SWAP3 SWAP2 ADD PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 MSTORE PUSH1 0x14 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP8 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP4 DUP8 ADD MLOAD DUP5 DUP3 ADD SSTORE SWAP2 DUP7 ADD MLOAD PUSH1 0x2 DUP5 ADD DUP1 SLOAD SWAP3 SWAP6 POP DUP8 SWAP5 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x684 JUMPI PUSH2 0x684 PUSH2 0x1635 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0x6BE SWAP1 DUP3 PUSH2 0x17D6 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SWAP1 PUSH2 0x6D3 SWAP1 DUP3 PUSH2 0x17D6 JUMP JUMPDEST POP PUSH1 0xC0 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x5 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xA755BEE123B19CFD95F30D3BED835AC8DAB8A08F893508AA86140D1B66C77E13 SWAP1 PUSH0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x77E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65642E204D616B652073757265206272696467 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6520697320617070726F76656420746F207370656E6420746F6B656E732E0000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x47A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE TIMESTAMP DUP2 DUP4 ADD DUP2 DUP2 MSTORE CHAINID PUSH1 0x60 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x80 DUP7 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP7 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0xC0 DUP9 ADD MSTORE DUP13 AND PUSH1 0xE0 DUP8 ADD MSTORE SWAP3 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD DUP12 SWAP1 MSTORE DUP7 MLOAD SWAP1 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP5 DUP4 ADD MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP5 SHL DUP2 AND DUP3 DUP6 ADD MSTORE PUSH1 0x74 DUP3 ADD DUP8 SWAP1 MSTORE DUP6 DUP5 SHL DUP2 AND PUSH1 0x94 DUP4 ADD MSTORE SWAP3 DUP9 SWAP1 SHL SWAP1 SWAP3 AND PUSH1 0xA8 DUP4 ADD MSTORE PUSH1 0xBC DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 PUSH0 SWAP1 PUSH1 0xDC ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 DUP5 MSTORE DUP5 DUP3 KECCAK256 DUP9 MLOAD DUP1 MLOAD DUP3 SSTORE DUP1 DUP7 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE SWAP6 DUP7 ADD MLOAD SWAP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0x4 DUP4 ADD DUP1 SLOAD DUP4 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA0 SWAP1 SWAP7 ADD MLOAD PUSH1 0x5 DUP3 ADD DUP1 SLOAD SWAP1 SWAP8 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP5 SSTORE SWAP2 DUP7 ADD MLOAD PUSH1 0x6 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SWAP3 POP DUP3 SWAP2 PUSH32 0x911623F001224D5D44BBA15E09F9764C38794E74D052085B3E24C04E05B7AED7 SWAP2 SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B2 DUP3 DUP3 PUSH2 0x1265 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9E0 PUSH32 0xE2B7FB3B832174769106DAEBCFD6D1970523240DDA11281102DB9363B83B0DC4 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA53 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F207061796F757420746F6B656E73000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE DUP2 DUP6 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xAF2 JUMPI PUSH2 0xAF2 PUSH2 0x1635 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB03 JUMPI PUSH2 0xB03 PUSH2 0x1635 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH2 0xB2C SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB58 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBA3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB7A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBA3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB86 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH2 0xBBC SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBE8 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC33 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC33 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC16 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x5 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP2 SWAP3 POP AND PUSH2 0xC9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A590817DD1BDAD95B9251 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47A JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH4 0x44D17187 PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x44D17187 SWAP1 PUSH2 0xCDD SWAP1 CALLER SWAP1 DUP9 SWAP1 PUSH1 0x24 DUP2 ADD PUSH2 0x18B5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD06 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x80C5D77A092B389B97D2B4A5BC721315E540C267567756DF827F2EDAB66FACBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP3 SWAP4 PUSH1 0xFF DUP1 DUP5 AND SWAP5 PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xD91 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDBD SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE08 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDDF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE08 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDEB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xE1D SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE49 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE94 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE6B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE94 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE77 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x5 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xEFE PUSH32 0xE2B7FB3B832174769106DAEBCFD6D1970523240DDA11281102DB9363B83B0DC4 PUSH2 0x11C9 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE DUP2 DUP6 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xF4E JUMPI PUSH2 0xF4E PUSH2 0x1635 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF5F JUMPI PUSH2 0xF5F PUSH2 0x1635 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH2 0xF88 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFB4 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFFF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFD6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFFF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFE2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH2 0x1018 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1044 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x108F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1066 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x108F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1072 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x5 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP2 SWAP3 POP AND PUSH2 0x10F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A590817DD1BDAD95B9251 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47A JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 DUP4 SWAP1 MSTORE PUSH4 0x3AC06C9 PUSH1 0xE5 SHL SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x7580D920 SWAP2 PUSH2 0x113A SWAP2 DUP8 SWAP2 DUP10 SWAP2 PUSH1 0x24 DUP2 ADD PUSH2 0x18DB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1151 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1163 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x7AEBC2282A0784072E43F12D40AFC658F82FDA3D0E830865D50DD7B0196DF7F1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x11BF DUP2 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x2CF DUP4 DUP4 PUSH2 0x1265 JUMP JUMPDEST PUSH2 0x11D3 DUP2 CALLER PUSH2 0x12CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x11E1 DUP4 DUP4 PUSH2 0xEAD JUMP JUMPDEST PUSH2 0x125E JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1216 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x3E3 JUMP JUMPDEST POP PUSH0 PUSH2 0x3E3 JUMP JUMPDEST PUSH0 PUSH2 0x1270 DUP4 DUP4 PUSH2 0xEAD JUMP JUMPDEST ISZERO PUSH2 0x125E JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x3E3 JUMP JUMPDEST PUSH2 0x12D8 DUP3 DUP3 PUSH2 0xEAD JUMP JUMPDEST PUSH2 0x1307 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x47A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x131B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1332 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1349 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x136F DUP2 PUSH2 0x1350 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1385 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1397 DUP2 PUSH2 0x1350 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1332 DUP2 PUSH2 0x1350 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x13F4 JUMPI PUSH2 0x13F4 PUSH2 0x13BD JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x136F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x136F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1427 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1442 JUMPI PUSH2 0x1442 PUSH2 0x13BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x146A JUMPI PUSH2 0x146A PUSH2 0x13BD JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1482 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x14C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0xE0 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x14DB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14E3 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x14EC DUP4 PUSH2 0x1364 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1504 PUSH1 0x40 DUP5 ADD PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1515 PUSH1 0x60 DUP5 ADD PUSH2 0x1408 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x152B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1537 DUP8 DUP3 DUP7 ADD PUSH2 0x1418 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x154E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x155A DUP8 DUP3 DUP7 ADD PUSH2 0x1418 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH2 0x156C PUSH1 0xC0 DUP5 ADD PUSH2 0x1364 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x158D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1598 DUP2 PUSH2 0x1350 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x15B6 DUP2 PUSH2 0x1350 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x15E5 DUP2 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x15F5 DUP2 PUSH2 0x1350 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1612 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1624 DUP2 PUSH2 0x1350 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x166D JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1651 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP9 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x2 DUP9 LT PUSH2 0x16BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP8 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xFF DUP8 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xE0 PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x16E1 PUSH1 0xE0 DUP5 ADD DUP8 PUSH2 0x1649 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x16F3 DUP2 DUP8 PUSH2 0x1649 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP5 AND PUSH1 0xC0 DUP5 ADD MSTORE POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x171D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1649 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x172F DUP2 DUP6 PUSH2 0x1649 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1748 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1332 DUP2 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1767 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1785 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9B2 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x17B0 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17CF JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x17BC JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17F0 JUMPI PUSH2 0x17F0 PUSH2 0x13BD JUMP JUMPDEST PUSH2 0x1804 DUP2 PUSH2 0x17FE DUP5 SLOAD PUSH2 0x1753 JUMP JUMPDEST DUP5 PUSH2 0x178B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1837 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1820 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x188E JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1865 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1846 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1882 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1332 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x172F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP3 ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH0 PUSH2 0x1909 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1649 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D POP LOG3 0xCB PUSH12 0xE2BFD34FA0D0A6D24A244216 0xEF PUSH2 0x4DE 0x27 0xE1 PUSH7 0xABCDC003A835A1 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "350:4372:7:-:0;;;775:130;;;;;;;;;-1:-1:-1;799:42:7;2232:4:0;830:10:7;799;:42::i;:::-;-1:-1:-1;851:47:7;437:25;2232:4:0;851:13:7;:47::i;:::-;350:4372;;6179:316:0;6256:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:4;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;5698:247::-;5781:25;3901:12;;;;;;;;;;;:22;;;;5837:34;;;;5886:52;;3901:22;;5837:34;;3901:22;;:12;;5886:52;;5781:25;5886:52;5771:174;5698:247;;:::o;350:4372:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RELAYER_ROLE_648": {
									"entryPoint": null,
									"id": 648,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 4814,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 4553,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 4566,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_585": {
									"entryPoint": null,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 4709,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@attestToken_760": {
									"entryPoint": 1189,
									"id": 760,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@attestedTokens_653": {
									"entryPoint": 3400,
									"id": 653,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bridgeNonFungibleTokensBack_902": {
									"entryPoint": null,
									"id": 902,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bridgeNonFungibleTokens_850": {
									"entryPoint": null,
									"id": 850,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@bridgeTokensBack_898": {
									"entryPoint": 2722,
									"id": 898,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@bridgeTokens_838": {
									"entryPoint": 1836,
									"id": 838,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 1001,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 3757,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@releaseNonFungibleTokens_987": {
									"entryPoint": null,
									"id": 987,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releaseTokens_983": {
									"entryPoint": 2487,
									"id": 983,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@releaseWrappedNonFungibleTokens_956": {
									"entryPoint": null,
									"id": 956,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releaseWrappedTokens_952": {
									"entryPoint": 3797,
									"id": 952,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 2431,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 4517,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTokenFactory_1013": {
									"entryPoint": 1037,
									"id": 1013,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_618": {
									"entryPoint": null,
									"id": 618,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 947,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenFactory_661": {
									"entryPoint": null,
									"id": 661,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenTransfers_658": {
									"entryPoint": null,
									"id": 658,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_enum_TokenType": {
									"entryPoint": 5114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 5144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 5944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_address": {
									"entryPoint": 5498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ITokenFactory_$1207": {
									"entryPoint": 5026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_TokenAttestation_$1058_memory_ptr": {
									"entryPoint": 5281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_address": {
									"entryPoint": 5569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_addresst_bytes32": {
									"entryPoint": 5632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_uint8": {
									"entryPoint": 5128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256_t_uint256_t_address_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_uint256_t_address_t_uint256_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_bool_t_bytes_memory_ptr__to_t_address_t_uint256_t_bool_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6363,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6325,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_enum$_TokenType_$1042_t_uint8_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_address_t_uint256_t_uint8_t_uint8_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed": {
									"entryPoint": 5772,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ITokenFactory_$1207__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5899,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0784b270c7abab6ddd6bc02e668ead28238c8eafa86da10a4828b88780f16d0a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0e4fa644555aceecc86bc3c42ad69ec29856b55b5e916527214a8175faefbe49__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_985b337fa2ec4100ef9944920998f9c5ef3f9d75b134cead835819dcecc21f86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d817c94589f2fd2490c47157dd34f129e87dd08fd49c4442e508a9a375e06bb1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_TokenTransferBase_$1071_memory_ptr_t_uint256__to_t_struct$_TokenTransferBase_$1071_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 6027,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 5685,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5053,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 4944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15975:11",
										"nodeType": "YulBlock",
										"src": "0:15975:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:11",
													"nodeType": "YulBlock",
													"src": "83:217:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:11",
																"nodeType": "YulBlock",
																"src": "129:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:11",
																					"nodeType": "YulLiteral",
																					"src": "138:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:11",
																					"nodeType": "YulLiteral",
																					"src": "141:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:11"
																			},
																			"nativeSrc": "131:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:11"
																		},
																		"nativeSrc": "131:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:11"
																		},
																		"nativeSrc": "100:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:11",
																		"nodeType": "YulLiteral",
																		"src": "125:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:11"
																},
																"nativeSrc": "96:32:11",
																"nodeType": "YulFunctionCall",
																"src": "96:32:11"
															},
															"nativeSrc": "93:52:11",
															"nodeType": "YulIf",
															"src": "93:52:11"
														},
														{
															"nativeSrc": "154:36:11",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:11"
																},
																"nativeSrc": "167:23:11",
																"nodeType": "YulFunctionCall",
																"src": "167:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:11",
																	"nodeType": "YulTypedName",
																	"src": "158:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:11",
																"nodeType": "YulBlock",
																"src": "254:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:11",
																					"nodeType": "YulLiteral",
																					"src": "263:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:11",
																					"nodeType": "YulLiteral",
																					"src": "266:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:11"
																			},
																			"nativeSrc": "256:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:11"
																		},
																		"nativeSrc": "256:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:11",
																								"nodeType": "YulLiteral",
																								"src": "234:3:11",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:11",
																								"nodeType": "YulLiteral",
																								"src": "239:10:11",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:11"
																						},
																						"nativeSrc": "230:20:11",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:11"
																				},
																				"nativeSrc": "219:32:11",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:11"
																		},
																		"nativeSrc": "209:43:11",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:11"
																},
																"nativeSrc": "202:51:11",
																"nodeType": "YulFunctionCall",
																"src": "202:51:11"
															},
															"nativeSrc": "199:71:11",
															"nodeType": "YulIf",
															"src": "199:71:11"
														},
														{
															"nativeSrc": "279:15:11",
															"nodeType": "YulAssignment",
															"src": "279:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:11",
																"nodeType": "YulIdentifier",
																"src": "289:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:11",
														"nodeType": "YulTypedName",
														"src": "49:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:11",
														"nodeType": "YulTypedName",
														"src": "60:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:11",
														"nodeType": "YulTypedName",
														"src": "72:6:11",
														"type": ""
													}
												],
												"src": "14:286:11"
											},
											{
												"body": {
													"nativeSrc": "400:92:11",
													"nodeType": "YulBlock",
													"src": "400:92:11",
													"statements": [
														{
															"nativeSrc": "410:26:11",
															"nodeType": "YulAssignment",
															"src": "410:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:11",
																		"nodeType": "YulLiteral",
																		"src": "433:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:11"
																},
																"nativeSrc": "418:18:11",
																"nodeType": "YulFunctionCall",
																"src": "418:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:11"
																				},
																				"nativeSrc": "470:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:11"
																		},
																		"nativeSrc": "463:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:11"
																},
																"nativeSrc": "445:41:11",
																"nodeType": "YulFunctionCall",
																"src": "445:41:11"
															},
															"nativeSrc": "445:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:11",
														"nodeType": "YulTypedName",
														"src": "369:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:11",
														"nodeType": "YulTypedName",
														"src": "380:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:11",
														"nodeType": "YulTypedName",
														"src": "391:4:11",
														"type": ""
													}
												],
												"src": "305:187:11"
											},
											{
												"body": {
													"nativeSrc": "567:110:11",
													"nodeType": "YulBlock",
													"src": "567:110:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "613:16:11",
																"nodeType": "YulBlock",
																"src": "613:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "622:1:11",
																					"nodeType": "YulLiteral",
																					"src": "622:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "625:1:11",
																					"nodeType": "YulLiteral",
																					"src": "625:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "615:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "615:6:11"
																			},
																			"nativeSrc": "615:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "615:12:11"
																		},
																		"nativeSrc": "615:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "615:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "588:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "588:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "597:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "597:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "584:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:11"
																		},
																		"nativeSrc": "584:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "584:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "609:2:11",
																		"nodeType": "YulLiteral",
																		"src": "609:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "580:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "580:3:11"
																},
																"nativeSrc": "580:32:11",
																"nodeType": "YulFunctionCall",
																"src": "580:32:11"
															},
															"nativeSrc": "577:52:11",
															"nodeType": "YulIf",
															"src": "577:52:11"
														},
														{
															"nativeSrc": "638:33:11",
															"nodeType": "YulAssignment",
															"src": "638:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "661:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "661:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "648:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "648:12:11"
																},
																"nativeSrc": "648:23:11",
																"nodeType": "YulFunctionCall",
																"src": "648:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "638:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "497:180:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "533:9:11",
														"nodeType": "YulTypedName",
														"src": "533:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "544:7:11",
														"nodeType": "YulTypedName",
														"src": "544:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "556:6:11",
														"nodeType": "YulTypedName",
														"src": "556:6:11",
														"type": ""
													}
												],
												"src": "497:180:11"
											},
											{
												"body": {
													"nativeSrc": "881:549:11",
													"nodeType": "YulBlock",
													"src": "881:549:11",
													"statements": [
														{
															"nativeSrc": "891:27:11",
															"nodeType": "YulAssignment",
															"src": "891:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "903:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "903:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "914:3:11",
																		"nodeType": "YulLiteral",
																		"src": "914:3:11",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "899:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "899:3:11"
																},
																"nativeSrc": "899:19:11",
																"nodeType": "YulFunctionCall",
																"src": "899:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "891:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "891:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "934:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "934:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "951:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "951:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "945:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "945:5:11"
																		},
																		"nativeSrc": "945:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "945:13:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "927:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:11"
																},
																"nativeSrc": "927:32:11",
																"nodeType": "YulFunctionCall",
																"src": "927:32:11"
															},
															"nativeSrc": "927:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "927:32:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "979:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "979:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "990:4:11",
																				"nodeType": "YulLiteral",
																				"src": "990:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "975:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "975:3:11"
																		},
																		"nativeSrc": "975:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "975:20:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1007:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1007:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1015:4:11",
																						"nodeType": "YulLiteral",
																						"src": "1015:4:11",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1003:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1003:3:11"
																				},
																				"nativeSrc": "1003:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1003:17:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "997:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "997:5:11"
																		},
																		"nativeSrc": "997:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "997:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "968:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "968:6:11"
																},
																"nativeSrc": "968:54:11",
																"nodeType": "YulFunctionCall",
																"src": "968:54:11"
															},
															"nativeSrc": "968:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "968:54:11"
														},
														{
															"nativeSrc": "1031:44:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1031:44:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1061:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1061:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1069:4:11",
																				"nodeType": "YulLiteral",
																				"src": "1069:4:11",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1057:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1057:3:11"
																		},
																		"nativeSrc": "1057:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1057:17:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1051:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1051:5:11"
																},
																"nativeSrc": "1051:24:11",
																"nodeType": "YulFunctionCall",
																"src": "1051:24:11"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nativeSrc": "1035:12:11",
																	"nodeType": "YulTypedName",
																	"src": "1035:12:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1084:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1084:29:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1102:3:11",
																				"nodeType": "YulLiteral",
																				"src": "1102:3:11",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1107:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1107:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1098:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1098:3:11"
																		},
																		"nativeSrc": "1098:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1098:11:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1111:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1111:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1094:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1094:3:11"
																},
																"nativeSrc": "1094:19:11",
																"nodeType": "YulFunctionCall",
																"src": "1094:19:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1088:2:11",
																	"nodeType": "YulTypedName",
																	"src": "1088:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1133:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1133:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1144:4:11",
																				"nodeType": "YulLiteral",
																				"src": "1144:4:11",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1129:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1129:3:11"
																		},
																		"nativeSrc": "1129:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1129:20:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "1155:12:11",
																				"nodeType": "YulIdentifier",
																				"src": "1155:12:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1169:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "1169:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1151:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1151:3:11"
																		},
																		"nativeSrc": "1151:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1151:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1122:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1122:6:11"
																},
																"nativeSrc": "1122:51:11",
																"nodeType": "YulFunctionCall",
																"src": "1122:51:11"
															},
															"nativeSrc": "1122:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "1122:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1193:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1193:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1204:4:11",
																				"nodeType": "YulLiteral",
																				"src": "1204:4:11",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1189:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1189:3:11"
																		},
																		"nativeSrc": "1189:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1189:20:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1221:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1221:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1229:4:11",
																						"nodeType": "YulLiteral",
																						"src": "1229:4:11",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1217:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1217:3:11"
																				},
																				"nativeSrc": "1217:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1217:17:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1211:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "1211:5:11"
																		},
																		"nativeSrc": "1211:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1211:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1182:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1182:6:11"
																},
																"nativeSrc": "1182:54:11",
																"nodeType": "YulFunctionCall",
																"src": "1182:54:11"
															},
															"nativeSrc": "1182:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "1182:54:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1256:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1256:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1267:4:11",
																				"nodeType": "YulLiteral",
																				"src": "1267:4:11",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1252:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1252:3:11"
																		},
																		"nativeSrc": "1252:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1252:20:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nativeSrc": "1288:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "1288:6:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1296:4:11",
																								"nodeType": "YulLiteral",
																								"src": "1296:4:11",
																								"type": "",
																								"value": "0x80"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1284:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1284:3:11"
																						},
																						"nativeSrc": "1284:17:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1284:17:11"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "1278:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "1278:5:11"
																				},
																				"nativeSrc": "1278:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1278:24:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1304:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "1304:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1274:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1274:3:11"
																		},
																		"nativeSrc": "1274:33:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1274:33:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1245:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1245:6:11"
																},
																"nativeSrc": "1245:63:11",
																"nodeType": "YulFunctionCall",
																"src": "1245:63:11"
															},
															"nativeSrc": "1245:63:11",
															"nodeType": "YulExpressionStatement",
															"src": "1245:63:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1328:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1328:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1339:4:11",
																				"nodeType": "YulLiteral",
																				"src": "1339:4:11",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1324:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1324:3:11"
																		},
																		"nativeSrc": "1324:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1324:20:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nativeSrc": "1360:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "1360:6:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1368:4:11",
																								"nodeType": "YulLiteral",
																								"src": "1368:4:11",
																								"type": "",
																								"value": "0xa0"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1356:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1356:3:11"
																						},
																						"nativeSrc": "1356:17:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1356:17:11"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "1350:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "1350:5:11"
																				},
																				"nativeSrc": "1350:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1350:24:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1376:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "1376:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1346:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:11"
																		},
																		"nativeSrc": "1346:33:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:33:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1317:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1317:6:11"
																},
																"nativeSrc": "1317:63:11",
																"nodeType": "YulFunctionCall",
																"src": "1317:63:11"
															},
															"nativeSrc": "1317:63:11",
															"nodeType": "YulExpressionStatement",
															"src": "1317:63:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1400:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1400:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1411:3:11",
																				"nodeType": "YulLiteral",
																				"src": "1411:3:11",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1396:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1396:3:11"
																		},
																		"nativeSrc": "1396:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1396:19:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "1417:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1417:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1389:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1389:6:11"
																},
																"nativeSrc": "1389:35:11",
																"nodeType": "YulFunctionCall",
																"src": "1389:35:11"
															},
															"nativeSrc": "1389:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "1389:35:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_TokenTransferBase_$1071_memory_ptr_t_uint256__to_t_struct$_TokenTransferBase_$1071_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "682:748:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "842:9:11",
														"nodeType": "YulTypedName",
														"src": "842:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "853:6:11",
														"nodeType": "YulTypedName",
														"src": "853:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "861:6:11",
														"nodeType": "YulTypedName",
														"src": "861:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "872:4:11",
														"nodeType": "YulTypedName",
														"src": "872:4:11",
														"type": ""
													}
												],
												"src": "682:748:11"
											},
											{
												"body": {
													"nativeSrc": "1536:76:11",
													"nodeType": "YulBlock",
													"src": "1536:76:11",
													"statements": [
														{
															"nativeSrc": "1546:26:11",
															"nodeType": "YulAssignment",
															"src": "1546:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1558:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1558:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1569:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1569:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1554:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1554:3:11"
																},
																"nativeSrc": "1554:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1554:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1546:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1546:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1588:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1588:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1599:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1599:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1581:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1581:6:11"
																},
																"nativeSrc": "1581:25:11",
																"nodeType": "YulFunctionCall",
																"src": "1581:25:11"
															},
															"nativeSrc": "1581:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "1581:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1435:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1505:9:11",
														"nodeType": "YulTypedName",
														"src": "1505:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1516:6:11",
														"nodeType": "YulTypedName",
														"src": "1516:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1527:4:11",
														"nodeType": "YulTypedName",
														"src": "1527:4:11",
														"type": ""
													}
												],
												"src": "1435:177:11"
											},
											{
												"body": {
													"nativeSrc": "1662:86:11",
													"nodeType": "YulBlock",
													"src": "1662:86:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1726:16:11",
																"nodeType": "YulBlock",
																"src": "1726:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1735:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1735:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1738:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1738:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1728:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1728:6:11"
																			},
																			"nativeSrc": "1728:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1728:12:11"
																		},
																		"nativeSrc": "1728:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1728:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1685:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1685:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1696:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1696:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1711:3:11",
																										"nodeType": "YulLiteral",
																										"src": "1711:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1716:1:11",
																										"nodeType": "YulLiteral",
																										"src": "1716:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1707:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "1707:3:11"
																								},
																								"nativeSrc": "1707:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "1707:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1720:1:11",
																								"nodeType": "YulLiteral",
																								"src": "1720:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1703:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1703:3:11"
																						},
																						"nativeSrc": "1703:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1703:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1692:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1692:3:11"
																				},
																				"nativeSrc": "1692:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1692:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1682:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1682:2:11"
																		},
																		"nativeSrc": "1682:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1682:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1675:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1675:6:11"
																},
																"nativeSrc": "1675:50:11",
																"nodeType": "YulFunctionCall",
																"src": "1675:50:11"
															},
															"nativeSrc": "1672:70:11",
															"nodeType": "YulIf",
															"src": "1672:70:11"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "1617:131:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1651:5:11",
														"nodeType": "YulTypedName",
														"src": "1651:5:11",
														"type": ""
													}
												],
												"src": "1617:131:11"
											},
											{
												"body": {
													"nativeSrc": "1802:85:11",
													"nodeType": "YulBlock",
													"src": "1802:85:11",
													"statements": [
														{
															"nativeSrc": "1812:29:11",
															"nodeType": "YulAssignment",
															"src": "1812:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1834:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1834:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1821:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1821:12:11"
																},
																"nativeSrc": "1821:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1821:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1812:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1812:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1875:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1875:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1850:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "1850:24:11"
																},
																"nativeSrc": "1850:31:11",
																"nodeType": "YulFunctionCall",
																"src": "1850:31:11"
															},
															"nativeSrc": "1850:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "1850:31:11"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1753:134:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1781:6:11",
														"nodeType": "YulTypedName",
														"src": "1781:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1792:5:11",
														"nodeType": "YulTypedName",
														"src": "1792:5:11",
														"type": ""
													}
												],
												"src": "1753:134:11"
											},
											{
												"body": {
													"nativeSrc": "1979:228:11",
													"nodeType": "YulBlock",
													"src": "1979:228:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2025:16:11",
																"nodeType": "YulBlock",
																"src": "2025:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2034:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2034:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2037:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2037:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2027:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:11"
																			},
																			"nativeSrc": "2027:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2027:12:11"
																		},
																		"nativeSrc": "2027:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2027:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2000:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2000:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2009:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2009:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1996:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1996:3:11"
																		},
																		"nativeSrc": "1996:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1996:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2021:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2021:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1992:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1992:3:11"
																},
																"nativeSrc": "1992:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1992:32:11"
															},
															"nativeSrc": "1989:52:11",
															"nodeType": "YulIf",
															"src": "1989:52:11"
														},
														{
															"nativeSrc": "2050:33:11",
															"nodeType": "YulAssignment",
															"src": "2050:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2073:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2073:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2060:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2060:12:11"
																},
																"nativeSrc": "2060:23:11",
																"nodeType": "YulFunctionCall",
																"src": "2060:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2050:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2050:6:11"
																}
															]
														},
														{
															"nativeSrc": "2092:45:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2092:45:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2122:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2122:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2118:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2118:3:11"
																		},
																		"nativeSrc": "2118:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2118:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2105:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2105:12:11"
																},
																"nativeSrc": "2105:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2105:32:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2096:5:11",
																	"nodeType": "YulTypedName",
																	"src": "2096:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2171:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2171:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2146:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "2146:24:11"
																},
																"nativeSrc": "2146:31:11",
																"nodeType": "YulFunctionCall",
																"src": "2146:31:11"
															},
															"nativeSrc": "2146:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "2146:31:11"
														},
														{
															"nativeSrc": "2186:15:11",
															"nodeType": "YulAssignment",
															"src": "2186:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "2196:5:11",
																"nodeType": "YulIdentifier",
																"src": "2196:5:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2186:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2186:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "1892:315:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1937:9:11",
														"nodeType": "YulTypedName",
														"src": "1937:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1948:7:11",
														"nodeType": "YulTypedName",
														"src": "1948:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1960:6:11",
														"nodeType": "YulTypedName",
														"src": "1960:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1968:6:11",
														"nodeType": "YulTypedName",
														"src": "1968:6:11",
														"type": ""
													}
												],
												"src": "1892:315:11"
											},
											{
												"body": {
													"nativeSrc": "2304:177:11",
													"nodeType": "YulBlock",
													"src": "2304:177:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2350:16:11",
																"nodeType": "YulBlock",
																"src": "2350:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2359:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2359:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2362:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2362:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2352:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2352:6:11"
																			},
																			"nativeSrc": "2352:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2352:12:11"
																		},
																		"nativeSrc": "2352:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2352:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2325:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2325:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2334:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2334:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2321:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2321:3:11"
																		},
																		"nativeSrc": "2321:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2321:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2346:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2346:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2317:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2317:3:11"
																},
																"nativeSrc": "2317:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2317:32:11"
															},
															"nativeSrc": "2314:52:11",
															"nodeType": "YulIf",
															"src": "2314:52:11"
														},
														{
															"nativeSrc": "2375:36:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2375:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2401:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2401:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2388:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2388:12:11"
																},
																"nativeSrc": "2388:23:11",
																"nodeType": "YulFunctionCall",
																"src": "2388:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2379:5:11",
																	"nodeType": "YulTypedName",
																	"src": "2379:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2445:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2445:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2420:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "2420:24:11"
																},
																"nativeSrc": "2420:31:11",
																"nodeType": "YulFunctionCall",
																"src": "2420:31:11"
															},
															"nativeSrc": "2420:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "2420:31:11"
														},
														{
															"nativeSrc": "2460:15:11",
															"nodeType": "YulAssignment",
															"src": "2460:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "2470:5:11",
																"nodeType": "YulIdentifier",
																"src": "2470:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2460:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2460:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ITokenFactory_$1207",
												"nativeSrc": "2212:269:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2270:9:11",
														"nodeType": "YulTypedName",
														"src": "2270:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2281:7:11",
														"nodeType": "YulTypedName",
														"src": "2281:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2293:6:11",
														"nodeType": "YulTypedName",
														"src": "2293:6:11",
														"type": ""
													}
												],
												"src": "2212:269:11"
											},
											{
												"body": {
													"nativeSrc": "2518:95:11",
													"nodeType": "YulBlock",
													"src": "2518:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2535:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2535:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2542:3:11",
																				"nodeType": "YulLiteral",
																				"src": "2542:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2547:10:11",
																				"nodeType": "YulLiteral",
																				"src": "2547:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2538:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2538:3:11"
																		},
																		"nativeSrc": "2538:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2538:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2528:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2528:6:11"
																},
																"nativeSrc": "2528:31:11",
																"nodeType": "YulFunctionCall",
																"src": "2528:31:11"
															},
															"nativeSrc": "2528:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "2528:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2575:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2575:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2578:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2578:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2568:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2568:6:11"
																},
																"nativeSrc": "2568:15:11",
																"nodeType": "YulFunctionCall",
																"src": "2568:15:11"
															},
															"nativeSrc": "2568:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "2568:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2599:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2599:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2602:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2602:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2592:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2592:6:11"
																},
																"nativeSrc": "2592:15:11",
																"nodeType": "YulFunctionCall",
																"src": "2592:15:11"
															},
															"nativeSrc": "2592:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "2592:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2486:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "2486:127:11"
											},
											{
												"body": {
													"nativeSrc": "2659:207:11",
													"nodeType": "YulBlock",
													"src": "2659:207:11",
													"statements": [
														{
															"nativeSrc": "2669:19:11",
															"nodeType": "YulAssignment",
															"src": "2669:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2685:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2685:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2679:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2679:5:11"
																},
																"nativeSrc": "2679:9:11",
																"nodeType": "YulFunctionCall",
																"src": "2679:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2669:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2669:6:11"
																}
															]
														},
														{
															"nativeSrc": "2697:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2697:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2719:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2719:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2727:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2727:4:11",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2715:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2715:3:11"
																},
																"nativeSrc": "2715:17:11",
																"nodeType": "YulFunctionCall",
																"src": "2715:17:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2701:10:11",
																	"nodeType": "YulTypedName",
																	"src": "2701:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2807:22:11",
																"nodeType": "YulBlock",
																"src": "2807:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2809:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "2809:16:11"
																			},
																			"nativeSrc": "2809:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2809:18:11"
																		},
																		"nativeSrc": "2809:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2809:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2750:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "2750:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2762:18:11",
																				"nodeType": "YulLiteral",
																				"src": "2762:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2747:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2747:2:11"
																		},
																		"nativeSrc": "2747:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2747:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2786:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "2786:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2798:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2798:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2783:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2783:2:11"
																		},
																		"nativeSrc": "2783:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2783:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2744:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2744:2:11"
																},
																"nativeSrc": "2744:62:11",
																"nodeType": "YulFunctionCall",
																"src": "2744:62:11"
															},
															"nativeSrc": "2741:88:11",
															"nodeType": "YulIf",
															"src": "2741:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2845:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2845:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2849:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "2849:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2838:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2838:6:11"
																},
																"nativeSrc": "2838:22:11",
																"nodeType": "YulFunctionCall",
																"src": "2838:22:11"
															},
															"nativeSrc": "2838:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "2838:22:11"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2618:248:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2648:6:11",
														"nodeType": "YulTypedName",
														"src": "2648:6:11",
														"type": ""
													}
												],
												"src": "2618:248:11"
											},
											{
												"body": {
													"nativeSrc": "2927:94:11",
													"nodeType": "YulBlock",
													"src": "2927:94:11",
													"statements": [
														{
															"nativeSrc": "2937:29:11",
															"nodeType": "YulAssignment",
															"src": "2937:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2959:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2959:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2946:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2946:12:11"
																},
																"nativeSrc": "2946:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2946:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2937:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2937:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2999:16:11",
																"nodeType": "YulBlock",
																"src": "2999:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3008:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3008:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3011:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3011:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3001:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3001:6:11"
																			},
																			"nativeSrc": "3001:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3001:12:11"
																		},
																		"nativeSrc": "3001:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3001:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2988:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2988:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2995:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2995:1:11",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2985:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2985:2:11"
																		},
																		"nativeSrc": "2985:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2985:12:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2978:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2978:6:11"
																},
																"nativeSrc": "2978:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2978:20:11"
															},
															"nativeSrc": "2975:40:11",
															"nodeType": "YulIf",
															"src": "2975:40:11"
														}
													]
												},
												"name": "abi_decode_enum_TokenType",
												"nativeSrc": "2871:150:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2906:6:11",
														"nodeType": "YulTypedName",
														"src": "2906:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2917:5:11",
														"nodeType": "YulTypedName",
														"src": "2917:5:11",
														"type": ""
													}
												],
												"src": "2871:150:11"
											},
											{
												"body": {
													"nativeSrc": "3073:109:11",
													"nodeType": "YulBlock",
													"src": "3073:109:11",
													"statements": [
														{
															"nativeSrc": "3083:29:11",
															"nodeType": "YulAssignment",
															"src": "3083:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3105:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3105:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3092:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3092:12:11"
																},
																"nativeSrc": "3092:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3092:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3083:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3083:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3160:16:11",
																"nodeType": "YulBlock",
																"src": "3160:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3169:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3169:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3172:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3172:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3162:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3162:6:11"
																			},
																			"nativeSrc": "3162:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3162:12:11"
																		},
																		"nativeSrc": "3162:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3162:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3134:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3134:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3145:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3145:5:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3152:4:11",
																						"nodeType": "YulLiteral",
																						"src": "3152:4:11",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3141:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3141:3:11"
																				},
																				"nativeSrc": "3141:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3141:16:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3131:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3131:2:11"
																		},
																		"nativeSrc": "3131:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3131:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3124:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3124:6:11"
																},
																"nativeSrc": "3124:35:11",
																"nodeType": "YulFunctionCall",
																"src": "3124:35:11"
															},
															"nativeSrc": "3121:55:11",
															"nodeType": "YulIf",
															"src": "3121:55:11"
														}
													]
												},
												"name": "abi_decode_uint8",
												"nativeSrc": "3026:156:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3052:6:11",
														"nodeType": "YulTypedName",
														"src": "3052:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3063:5:11",
														"nodeType": "YulTypedName",
														"src": "3063:5:11",
														"type": ""
													}
												],
												"src": "3026:156:11"
											},
											{
												"body": {
													"nativeSrc": "3240:666:11",
													"nodeType": "YulBlock",
													"src": "3240:666:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3289:16:11",
																"nodeType": "YulBlock",
																"src": "3289:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3298:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3298:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3301:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3301:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3291:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3291:6:11"
																			},
																			"nativeSrc": "3291:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3291:12:11"
																		},
																		"nativeSrc": "3291:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3291:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3268:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3268:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3276:4:11",
																						"nodeType": "YulLiteral",
																						"src": "3276:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3264:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3264:3:11"
																				},
																				"nativeSrc": "3264:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3264:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3283:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3283:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3260:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3260:3:11"
																		},
																		"nativeSrc": "3260:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3260:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3253:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3253:6:11"
																},
																"nativeSrc": "3253:35:11",
																"nodeType": "YulFunctionCall",
																"src": "3253:35:11"
															},
															"nativeSrc": "3250:55:11",
															"nodeType": "YulIf",
															"src": "3250:55:11"
														},
														{
															"nativeSrc": "3314:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3314:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3337:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3337:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3324:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3324:12:11"
																},
																"nativeSrc": "3324:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3324:20:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3318:2:11",
																	"nodeType": "YulTypedName",
																	"src": "3318:2:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3353:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3353:28:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3363:18:11",
																"nodeType": "YulLiteral",
																"src": "3363:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3357:2:11",
																	"nodeType": "YulTypedName",
																	"src": "3357:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3404:22:11",
																"nodeType": "YulBlock",
																"src": "3404:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3406:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "3406:16:11"
																			},
																			"nativeSrc": "3406:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3406:18:11"
																		},
																		"nativeSrc": "3406:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3406:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "3396:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "3396:2:11"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "3400:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "3400:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3393:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3393:2:11"
																},
																"nativeSrc": "3393:10:11",
																"nodeType": "YulFunctionCall",
																"src": "3393:10:11"
															},
															"nativeSrc": "3390:36:11",
															"nodeType": "YulIf",
															"src": "3390:36:11"
														},
														{
															"nativeSrc": "3435:17:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3435:17:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3449:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3449:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3445:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3445:3:11"
																},
																"nativeSrc": "3445:7:11",
																"nodeType": "YulFunctionCall",
																"src": "3445:7:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "3439:2:11",
																	"nodeType": "YulTypedName",
																	"src": "3439:2:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3461:23:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3461:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3481:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3481:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3475:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3475:5:11"
																},
																"nativeSrc": "3475:9:11",
																"nodeType": "YulFunctionCall",
																"src": "3475:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3465:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3465:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3493:71:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3493:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3515:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3515:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "3539:2:11",
																										"nodeType": "YulIdentifier",
																										"src": "3539:2:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3543:4:11",
																										"nodeType": "YulLiteral",
																										"src": "3543:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3535:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3535:3:11"
																								},
																								"nativeSrc": "3535:13:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3535:13:11"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "3550:2:11",
																								"nodeType": "YulIdentifier",
																								"src": "3550:2:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "3531:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "3531:3:11"
																						},
																						"nativeSrc": "3531:22:11",
																						"nodeType": "YulFunctionCall",
																						"src": "3531:22:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3555:2:11",
																						"nodeType": "YulLiteral",
																						"src": "3555:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3527:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3527:3:11"
																				},
																				"nativeSrc": "3527:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3527:31:11"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "3560:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "3560:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3523:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3523:3:11"
																		},
																		"nativeSrc": "3523:40:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3523:40:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3511:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:11"
																},
																"nativeSrc": "3511:53:11",
																"nodeType": "YulFunctionCall",
																"src": "3511:53:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3497:10:11",
																	"nodeType": "YulTypedName",
																	"src": "3497:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3623:22:11",
																"nodeType": "YulBlock",
																"src": "3623:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3625:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "3625:16:11"
																			},
																			"nativeSrc": "3625:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3625:18:11"
																		},
																		"nativeSrc": "3625:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3625:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3582:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "3582:10:11"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "3594:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "3594:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3579:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3579:2:11"
																		},
																		"nativeSrc": "3579:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3579:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3602:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "3602:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3614:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3614:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3599:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3599:2:11"
																		},
																		"nativeSrc": "3599:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3599:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3576:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3576:2:11"
																},
																"nativeSrc": "3576:46:11",
																"nodeType": "YulFunctionCall",
																"src": "3576:46:11"
															},
															"nativeSrc": "3573:72:11",
															"nodeType": "YulIf",
															"src": "3573:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3661:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3661:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3665:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "3665:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3654:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3654:6:11"
																},
																"nativeSrc": "3654:22:11",
																"nodeType": "YulFunctionCall",
																"src": "3654:22:11"
															},
															"nativeSrc": "3654:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "3654:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3692:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3692:6:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3700:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "3700:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3685:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3685:6:11"
																},
																"nativeSrc": "3685:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3685:18:11"
															},
															"nativeSrc": "3685:18:11",
															"nodeType": "YulExpressionStatement",
															"src": "3685:18:11"
														},
														{
															"body": {
																"nativeSrc": "3751:16:11",
																"nodeType": "YulBlock",
																"src": "3751:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3760:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3760:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3763:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3763:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3753:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3753:6:11"
																			},
																			"nativeSrc": "3753:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3753:12:11"
																		},
																		"nativeSrc": "3753:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3753:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3726:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3726:6:11"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "3734:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "3734:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3722:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3722:3:11"
																				},
																				"nativeSrc": "3722:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3722:15:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3739:4:11",
																				"nodeType": "YulLiteral",
																				"src": "3739:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3718:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3718:3:11"
																		},
																		"nativeSrc": "3718:26:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3718:26:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3746:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3746:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3715:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3715:2:11"
																},
																"nativeSrc": "3715:35:11",
																"nodeType": "YulFunctionCall",
																"src": "3715:35:11"
															},
															"nativeSrc": "3712:55:11",
															"nodeType": "YulIf",
															"src": "3712:55:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3793:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3793:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3801:4:11",
																				"nodeType": "YulLiteral",
																				"src": "3801:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3789:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3789:3:11"
																		},
																		"nativeSrc": "3789:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3789:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3812:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3812:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3820:4:11",
																				"nodeType": "YulLiteral",
																				"src": "3820:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3808:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:11"
																		},
																		"nativeSrc": "3808:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:17:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3827:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "3827:2:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3776:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3776:12:11"
																},
																"nativeSrc": "3776:54:11",
																"nodeType": "YulFunctionCall",
																"src": "3776:54:11"
															},
															"nativeSrc": "3776:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "3776:54:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "3854:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3854:6:11"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "3862:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "3862:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3850:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3850:3:11"
																				},
																				"nativeSrc": "3850:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3850:15:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3867:4:11",
																				"nodeType": "YulLiteral",
																				"src": "3867:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3846:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3846:3:11"
																		},
																		"nativeSrc": "3846:26:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3846:26:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3874:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3874:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3839:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3839:6:11"
																},
																"nativeSrc": "3839:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3839:37:11"
															},
															"nativeSrc": "3839:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3839:37:11"
														},
														{
															"nativeSrc": "3885:15:11",
															"nodeType": "YulAssignment",
															"src": "3885:15:11",
															"value": {
																"name": "memPtr",
																"nativeSrc": "3894:6:11",
																"nodeType": "YulIdentifier",
																"src": "3894:6:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3885:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3885:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "3187:719:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3214:6:11",
														"nodeType": "YulTypedName",
														"src": "3214:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3222:3:11",
														"nodeType": "YulTypedName",
														"src": "3222:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3230:5:11",
														"nodeType": "YulTypedName",
														"src": "3230:5:11",
														"type": ""
													}
												],
												"src": "3187:719:11"
											},
											{
												"body": {
													"nativeSrc": "4015:1007:11",
													"nodeType": "YulBlock",
													"src": "4015:1007:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4061:16:11",
																"nodeType": "YulBlock",
																"src": "4061:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4070:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4070:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4073:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4073:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4063:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4063:6:11"
																			},
																			"nativeSrc": "4063:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4063:12:11"
																		},
																		"nativeSrc": "4063:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4063:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4036:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4036:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4045:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4045:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4032:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4032:3:11"
																		},
																		"nativeSrc": "4032:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4032:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4057:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4057:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4028:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4028:3:11"
																},
																"nativeSrc": "4028:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4028:32:11"
															},
															"nativeSrc": "4025:52:11",
															"nodeType": "YulIf",
															"src": "4025:52:11"
														},
														{
															"nativeSrc": "4086:37:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4086:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4113:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4113:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4100:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4100:12:11"
																},
																"nativeSrc": "4100:23:11",
																"nodeType": "YulFunctionCall",
																"src": "4100:23:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4090:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4090:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4132:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4132:28:11",
															"value": {
																"kind": "number",
																"nativeSrc": "4142:18:11",
																"nodeType": "YulLiteral",
																"src": "4142:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4136:2:11",
																	"nodeType": "YulTypedName",
																	"src": "4136:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4187:16:11",
																"nodeType": "YulBlock",
																"src": "4187:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4196:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4196:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4199:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4199:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4189:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4189:6:11"
																			},
																			"nativeSrc": "4189:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4189:12:11"
																		},
																		"nativeSrc": "4189:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4189:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4175:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4175:6:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4183:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4183:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4172:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4172:2:11"
																},
																"nativeSrc": "4172:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4172:14:11"
															},
															"nativeSrc": "4169:34:11",
															"nodeType": "YulIf",
															"src": "4169:34:11"
														},
														{
															"nativeSrc": "4212:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4212:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4226:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4226:9:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4237:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4237:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4222:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4222:3:11"
																},
																"nativeSrc": "4222:22:11",
																"nodeType": "YulFunctionCall",
																"src": "4222:22:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "4216:2:11",
																	"nodeType": "YulTypedName",
																	"src": "4216:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4284:16:11",
																"nodeType": "YulBlock",
																"src": "4284:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4293:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4293:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4296:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4296:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4286:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4286:6:11"
																			},
																			"nativeSrc": "4286:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4286:12:11"
																		},
																		"nativeSrc": "4286:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4286:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:11"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "4273:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4273:2:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4260:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4260:3:11"
																		},
																		"nativeSrc": "4260:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4260:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4278:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4278:4:11",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4256:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4256:3:11"
																},
																"nativeSrc": "4256:27:11",
																"nodeType": "YulFunctionCall",
																"src": "4256:27:11"
															},
															"nativeSrc": "4253:47:11",
															"nodeType": "YulIf",
															"src": "4253:47:11"
														},
														{
															"nativeSrc": "4309:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4309:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4322:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "4322:15:11"
																},
																"nativeSrc": "4322:17:11",
																"nodeType": "YulFunctionCall",
																"src": "4322:17:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4313:5:11",
																	"nodeType": "YulTypedName",
																	"src": "4313:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4355:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4355:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "4381:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4381:2:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address",
																			"nativeSrc": "4362:18:11",
																			"nodeType": "YulIdentifier",
																			"src": "4362:18:11"
																		},
																		"nativeSrc": "4362:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4362:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4348:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4348:6:11"
																},
																"nativeSrc": "4348:37:11",
																"nodeType": "YulFunctionCall",
																"src": "4348:37:11"
															},
															"nativeSrc": "4348:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "4348:37:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4405:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4405:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4412:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4412:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4401:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4401:3:11"
																		},
																		"nativeSrc": "4401:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4401:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4434:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4434:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4438:2:11",
																						"nodeType": "YulLiteral",
																						"src": "4438:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4430:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4430:3:11"
																				},
																				"nativeSrc": "4430:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4430:11:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4417:12:11",
																			"nodeType": "YulIdentifier",
																			"src": "4417:12:11"
																		},
																		"nativeSrc": "4417:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:25:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4394:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4394:6:11"
																},
																"nativeSrc": "4394:49:11",
																"nodeType": "YulFunctionCall",
																"src": "4394:49:11"
															},
															"nativeSrc": "4394:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "4394:49:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4463:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4463:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4470:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4459:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4459:3:11"
																		},
																		"nativeSrc": "4459:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4459:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4505:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4505:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4509:2:11",
																						"nodeType": "YulLiteral",
																						"src": "4509:2:11",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4501:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4501:3:11"
																				},
																				"nativeSrc": "4501:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4501:11:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_enum_TokenType",
																			"nativeSrc": "4475:25:11",
																			"nodeType": "YulIdentifier",
																			"src": "4475:25:11"
																		},
																		"nativeSrc": "4475:38:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4475:38:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4452:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4452:6:11"
																},
																"nativeSrc": "4452:62:11",
																"nodeType": "YulFunctionCall",
																"src": "4452:62:11"
															},
															"nativeSrc": "4452:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "4452:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4534:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4534:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4541:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4541:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4530:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4530:3:11"
																		},
																		"nativeSrc": "4530:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4530:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4567:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4567:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4571:2:11",
																						"nodeType": "YulLiteral",
																						"src": "4571:2:11",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4563:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4563:3:11"
																				},
																				"nativeSrc": "4563:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4563:11:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint8",
																			"nativeSrc": "4546:16:11",
																			"nodeType": "YulIdentifier",
																			"src": "4546:16:11"
																		},
																		"nativeSrc": "4546:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4546:29:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4523:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4523:6:11"
																},
																"nativeSrc": "4523:53:11",
																"nodeType": "YulFunctionCall",
																"src": "4523:53:11"
															},
															"nativeSrc": "4523:53:11",
															"nodeType": "YulExpressionStatement",
															"src": "4523:53:11"
														},
														{
															"nativeSrc": "4585:42:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4585:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "4618:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4618:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4622:3:11",
																				"nodeType": "YulLiteral",
																				"src": "4622:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4614:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4614:3:11"
																		},
																		"nativeSrc": "4614:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4614:12:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4601:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4601:12:11"
																},
																"nativeSrc": "4601:26:11",
																"nodeType": "YulFunctionCall",
																"src": "4601:26:11"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "4589:8:11",
																	"nodeType": "YulTypedName",
																	"src": "4589:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4656:16:11",
																"nodeType": "YulBlock",
																"src": "4656:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4665:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4665:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4668:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4668:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4658:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4658:6:11"
																			},
																			"nativeSrc": "4658:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4658:12:11"
																		},
																		"nativeSrc": "4658:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4658:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "4642:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "4642:8:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4652:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4652:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4639:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4639:2:11"
																},
																"nativeSrc": "4639:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4639:16:11"
															},
															"nativeSrc": "4636:36:11",
															"nodeType": "YulIf",
															"src": "4636:36:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4692:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4692:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4699:3:11",
																				"nodeType": "YulLiteral",
																				"src": "4699:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4688:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4688:3:11"
																		},
																		"nativeSrc": "4688:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4688:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4727:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4727:2:11"
																					},
																					{
																						"name": "offset_1",
																						"nativeSrc": "4731:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "4731:8:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4723:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4723:3:11"
																				},
																				"nativeSrc": "4723:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4723:17:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4742:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4742:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nativeSrc": "4705:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "4705:17:11"
																		},
																		"nativeSrc": "4705:45:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4705:45:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4681:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4681:6:11"
																},
																"nativeSrc": "4681:70:11",
																"nodeType": "YulFunctionCall",
																"src": "4681:70:11"
															},
															"nativeSrc": "4681:70:11",
															"nodeType": "YulExpressionStatement",
															"src": "4681:70:11"
														},
														{
															"nativeSrc": "4760:42:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4760:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "4793:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4793:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4797:3:11",
																				"nodeType": "YulLiteral",
																				"src": "4797:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4789:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4789:3:11"
																		},
																		"nativeSrc": "4789:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4789:12:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4776:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4776:12:11"
																},
																"nativeSrc": "4776:26:11",
																"nodeType": "YulFunctionCall",
																"src": "4776:26:11"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nativeSrc": "4764:8:11",
																	"nodeType": "YulTypedName",
																	"src": "4764:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4831:16:11",
																"nodeType": "YulBlock",
																"src": "4831:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4840:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4840:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4843:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4843:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4833:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4833:6:11"
																			},
																			"nativeSrc": "4833:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4833:12:11"
																		},
																		"nativeSrc": "4833:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4833:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nativeSrc": "4817:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "4817:8:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4827:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4827:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4814:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4814:2:11"
																},
																"nativeSrc": "4814:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4814:16:11"
															},
															"nativeSrc": "4811:36:11",
															"nodeType": "YulIf",
															"src": "4811:36:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4867:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4867:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4874:3:11",
																				"nodeType": "YulLiteral",
																				"src": "4874:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4863:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4863:3:11"
																		},
																		"nativeSrc": "4863:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4863:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4902:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4902:2:11"
																					},
																					{
																						"name": "offset_2",
																						"nativeSrc": "4906:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "4906:8:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4898:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4898:3:11"
																				},
																				"nativeSrc": "4898:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4898:17:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4917:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4917:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string",
																			"nativeSrc": "4880:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "4880:17:11"
																		},
																		"nativeSrc": "4880:45:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4880:45:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4856:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4856:6:11"
																},
																"nativeSrc": "4856:70:11",
																"nodeType": "YulFunctionCall",
																"src": "4856:70:11"
															},
															"nativeSrc": "4856:70:11",
															"nodeType": "YulExpressionStatement",
															"src": "4856:70:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4946:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4946:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4953:3:11",
																				"nodeType": "YulLiteral",
																				"src": "4953:3:11",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4942:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4942:3:11"
																		},
																		"nativeSrc": "4942:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4942:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4982:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4982:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4986:3:11",
																						"nodeType": "YulLiteral",
																						"src": "4986:3:11",
																						"type": "",
																						"value": "192"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4978:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4978:3:11"
																				},
																				"nativeSrc": "4978:12:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4978:12:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address",
																			"nativeSrc": "4959:18:11",
																			"nodeType": "YulIdentifier",
																			"src": "4959:18:11"
																		},
																		"nativeSrc": "4959:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4959:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4935:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4935:6:11"
																},
																"nativeSrc": "4935:57:11",
																"nodeType": "YulFunctionCall",
																"src": "4935:57:11"
															},
															"nativeSrc": "4935:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "4935:57:11"
														},
														{
															"nativeSrc": "5001:15:11",
															"nodeType": "YulAssignment",
															"src": "5001:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "5011:5:11",
																"nodeType": "YulIdentifier",
																"src": "5011:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5001:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5001:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_TokenAttestation_$1058_memory_ptr",
												"nativeSrc": "3911:1111:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3981:9:11",
														"nodeType": "YulTypedName",
														"src": "3981:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3992:7:11",
														"nodeType": "YulTypedName",
														"src": "3992:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4004:6:11",
														"nodeType": "YulTypedName",
														"src": "4004:6:11",
														"type": ""
													}
												],
												"src": "3911:1111:11"
											},
											{
												"body": {
													"nativeSrc": "5148:404:11",
													"nodeType": "YulBlock",
													"src": "5148:404:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5195:16:11",
																"nodeType": "YulBlock",
																"src": "5195:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5204:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5204:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5207:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5207:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5197:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5197:6:11"
																			},
																			"nativeSrc": "5197:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5197:12:11"
																		},
																		"nativeSrc": "5197:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5197:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5169:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5169:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5178:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5178:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5165:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5165:3:11"
																		},
																		"nativeSrc": "5165:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5165:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5190:3:11",
																		"nodeType": "YulLiteral",
																		"src": "5190:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5161:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5161:3:11"
																},
																"nativeSrc": "5161:33:11",
																"nodeType": "YulFunctionCall",
																"src": "5161:33:11"
															},
															"nativeSrc": "5158:53:11",
															"nodeType": "YulIf",
															"src": "5158:53:11"
														},
														{
															"nativeSrc": "5220:36:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5220:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5246:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5246:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5233:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5233:12:11"
																},
																"nativeSrc": "5233:23:11",
																"nodeType": "YulFunctionCall",
																"src": "5233:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5224:5:11",
																	"nodeType": "YulTypedName",
																	"src": "5224:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5290:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5290:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5265:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "5265:24:11"
																},
																"nativeSrc": "5265:31:11",
																"nodeType": "YulFunctionCall",
																"src": "5265:31:11"
															},
															"nativeSrc": "5265:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "5265:31:11"
														},
														{
															"nativeSrc": "5305:15:11",
															"nodeType": "YulAssignment",
															"src": "5305:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "5315:5:11",
																"nodeType": "YulIdentifier",
																"src": "5315:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5305:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5305:6:11"
																}
															]
														},
														{
															"nativeSrc": "5329:42:11",
															"nodeType": "YulAssignment",
															"src": "5329:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5356:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5356:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5367:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5367:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5352:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5352:3:11"
																		},
																		"nativeSrc": "5352:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5352:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5339:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5339:12:11"
																},
																"nativeSrc": "5339:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5339:32:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5329:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5329:6:11"
																}
															]
														},
														{
															"nativeSrc": "5380:42:11",
															"nodeType": "YulAssignment",
															"src": "5380:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5407:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5407:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5418:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5418:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5403:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5403:3:11"
																		},
																		"nativeSrc": "5403:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5403:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5390:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5390:12:11"
																},
																"nativeSrc": "5390:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5390:32:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5380:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:11"
																}
															]
														},
														{
															"nativeSrc": "5431:47:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5431:47:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5463:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5463:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5474:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5474:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5459:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5459:3:11"
																		},
																		"nativeSrc": "5459:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5459:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5446:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5446:12:11"
																},
																"nativeSrc": "5446:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5446:32:11"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "5435:7:11",
																	"nodeType": "YulTypedName",
																	"src": "5435:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "5512:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "5512:7:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5487:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "5487:24:11"
																},
																"nativeSrc": "5487:33:11",
																"nodeType": "YulFunctionCall",
																"src": "5487:33:11"
															},
															"nativeSrc": "5487:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "5487:33:11"
														},
														{
															"nativeSrc": "5529:17:11",
															"nodeType": "YulAssignment",
															"src": "5529:17:11",
															"value": {
																"name": "value_1",
																"nativeSrc": "5539:7:11",
																"nodeType": "YulIdentifier",
																"src": "5539:7:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5529:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5529:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_address",
												"nativeSrc": "5027:525:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5090:9:11",
														"nodeType": "YulTypedName",
														"src": "5090:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5101:7:11",
														"nodeType": "YulTypedName",
														"src": "5101:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5113:6:11",
														"nodeType": "YulTypedName",
														"src": "5113:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5121:6:11",
														"nodeType": "YulTypedName",
														"src": "5121:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5129:6:11",
														"nodeType": "YulTypedName",
														"src": "5129:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5137:6:11",
														"nodeType": "YulTypedName",
														"src": "5137:6:11",
														"type": ""
													}
												],
												"src": "5027:525:11"
											},
											{
												"body": {
													"nativeSrc": "5661:352:11",
													"nodeType": "YulBlock",
													"src": "5661:352:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5707:16:11",
																"nodeType": "YulBlock",
																"src": "5707:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5716:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5716:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5719:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5719:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5709:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5709:6:11"
																			},
																			"nativeSrc": "5709:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5709:12:11"
																		},
																		"nativeSrc": "5709:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5709:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5682:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5682:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5691:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5691:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5678:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5678:3:11"
																		},
																		"nativeSrc": "5678:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5678:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5703:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5703:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5674:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5674:3:11"
																},
																"nativeSrc": "5674:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5674:32:11"
															},
															"nativeSrc": "5671:52:11",
															"nodeType": "YulIf",
															"src": "5671:52:11"
														},
														{
															"nativeSrc": "5732:33:11",
															"nodeType": "YulAssignment",
															"src": "5732:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5755:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5755:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5742:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5742:12:11"
																},
																"nativeSrc": "5742:23:11",
																"nodeType": "YulFunctionCall",
																"src": "5742:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5732:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5732:6:11"
																}
															]
														},
														{
															"nativeSrc": "5774:45:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5774:45:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5804:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5804:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5815:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5815:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5800:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5800:3:11"
																		},
																		"nativeSrc": "5800:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5800:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5787:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5787:12:11"
																},
																"nativeSrc": "5787:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5787:32:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5778:5:11",
																	"nodeType": "YulTypedName",
																	"src": "5778:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5853:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5853:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5828:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "5828:24:11"
																},
																"nativeSrc": "5828:31:11",
																"nodeType": "YulFunctionCall",
																"src": "5828:31:11"
															},
															"nativeSrc": "5828:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "5828:31:11"
														},
														{
															"nativeSrc": "5868:15:11",
															"nodeType": "YulAssignment",
															"src": "5868:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "5878:5:11",
																"nodeType": "YulIdentifier",
																"src": "5878:5:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5868:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5868:6:11"
																}
															]
														},
														{
															"nativeSrc": "5892:47:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5892:47:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5924:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5924:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5935:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5935:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5920:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5920:3:11"
																		},
																		"nativeSrc": "5920:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5920:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5907:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5907:12:11"
																},
																"nativeSrc": "5907:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5907:32:11"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "5896:7:11",
																	"nodeType": "YulTypedName",
																	"src": "5896:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "5973:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "5973:7:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5948:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "5948:24:11"
																},
																"nativeSrc": "5948:33:11",
																"nodeType": "YulFunctionCall",
																"src": "5948:33:11"
															},
															"nativeSrc": "5948:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "5948:33:11"
														},
														{
															"nativeSrc": "5990:17:11",
															"nodeType": "YulAssignment",
															"src": "5990:17:11",
															"value": {
																"name": "value_1",
																"nativeSrc": "6000:7:11",
																"nodeType": "YulIdentifier",
																"src": "6000:7:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5990:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5990:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_address",
												"nativeSrc": "5557:456:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5611:9:11",
														"nodeType": "YulTypedName",
														"src": "5611:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5622:7:11",
														"nodeType": "YulTypedName",
														"src": "5622:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5634:6:11",
														"nodeType": "YulTypedName",
														"src": "5634:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5642:6:11",
														"nodeType": "YulTypedName",
														"src": "5642:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5650:6:11",
														"nodeType": "YulTypedName",
														"src": "5650:6:11",
														"type": ""
													}
												],
												"src": "5557:456:11"
											},
											{
												"body": {
													"nativeSrc": "6122:279:11",
													"nodeType": "YulBlock",
													"src": "6122:279:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6168:16:11",
																"nodeType": "YulBlock",
																"src": "6168:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6177:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6177:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6180:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6180:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6170:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6170:6:11"
																			},
																			"nativeSrc": "6170:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:12:11"
																		},
																		"nativeSrc": "6170:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6143:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6143:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6152:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6152:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6139:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6139:3:11"
																		},
																		"nativeSrc": "6139:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6139:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6164:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6164:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6135:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6135:3:11"
																},
																"nativeSrc": "6135:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6135:32:11"
															},
															"nativeSrc": "6132:52:11",
															"nodeType": "YulIf",
															"src": "6132:52:11"
														},
														{
															"nativeSrc": "6193:33:11",
															"nodeType": "YulAssignment",
															"src": "6193:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6216:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6216:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6203:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6203:12:11"
																},
																"nativeSrc": "6203:23:11",
																"nodeType": "YulFunctionCall",
																"src": "6203:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6193:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6193:6:11"
																}
															]
														},
														{
															"nativeSrc": "6235:45:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6235:45:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6265:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6265:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6276:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6276:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6261:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6261:3:11"
																		},
																		"nativeSrc": "6261:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6261:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6248:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6248:12:11"
																},
																"nativeSrc": "6248:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6248:32:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6239:5:11",
																	"nodeType": "YulTypedName",
																	"src": "6239:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6314:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6314:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6289:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "6289:24:11"
																},
																"nativeSrc": "6289:31:11",
																"nodeType": "YulFunctionCall",
																"src": "6289:31:11"
															},
															"nativeSrc": "6289:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "6289:31:11"
														},
														{
															"nativeSrc": "6329:15:11",
															"nodeType": "YulAssignment",
															"src": "6329:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "6339:5:11",
																"nodeType": "YulIdentifier",
																"src": "6339:5:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6329:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6329:6:11"
																}
															]
														},
														{
															"nativeSrc": "6353:42:11",
															"nodeType": "YulAssignment",
															"src": "6353:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6380:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6380:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6391:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6391:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6376:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6376:3:11"
																		},
																		"nativeSrc": "6376:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6376:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6363:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6363:12:11"
																},
																"nativeSrc": "6363:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6363:32:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "6353:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6353:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_bytes32",
												"nativeSrc": "6018:383:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6072:9:11",
														"nodeType": "YulTypedName",
														"src": "6072:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6083:7:11",
														"nodeType": "YulTypedName",
														"src": "6083:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6095:6:11",
														"nodeType": "YulTypedName",
														"src": "6095:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6103:6:11",
														"nodeType": "YulTypedName",
														"src": "6103:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6111:6:11",
														"nodeType": "YulTypedName",
														"src": "6111:6:11",
														"type": ""
													}
												],
												"src": "6018:383:11"
											},
											{
												"body": {
													"nativeSrc": "6438:95:11",
													"nodeType": "YulBlock",
													"src": "6438:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6455:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6455:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6462:3:11",
																				"nodeType": "YulLiteral",
																				"src": "6462:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6467:10:11",
																				"nodeType": "YulLiteral",
																				"src": "6467:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6458:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6458:3:11"
																		},
																		"nativeSrc": "6458:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6458:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6448:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6448:6:11"
																},
																"nativeSrc": "6448:31:11",
																"nodeType": "YulFunctionCall",
																"src": "6448:31:11"
															},
															"nativeSrc": "6448:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "6448:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6495:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6495:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6498:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6498:4:11",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6488:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6488:6:11"
																},
																"nativeSrc": "6488:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6488:15:11"
															},
															"nativeSrc": "6488:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6488:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6519:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6519:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6522:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6522:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6512:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6512:6:11"
																},
																"nativeSrc": "6512:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6512:15:11"
															},
															"nativeSrc": "6512:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6512:15:11"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "6406:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "6406:127:11"
											},
											{
												"body": {
													"nativeSrc": "6588:373:11",
													"nodeType": "YulBlock",
													"src": "6588:373:11",
													"statements": [
														{
															"nativeSrc": "6598:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6598:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6618:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6618:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6612:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6612:5:11"
																},
																"nativeSrc": "6612:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6612:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6602:6:11",
																	"nodeType": "YulTypedName",
																	"src": "6602:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6640:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6640:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6645:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6645:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6633:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6633:6:11"
																},
																"nativeSrc": "6633:19:11",
																"nodeType": "YulFunctionCall",
																"src": "6633:19:11"
															},
															"nativeSrc": "6633:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "6633:19:11"
														},
														{
															"nativeSrc": "6661:10:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6661:10:11",
															"value": {
																"kind": "number",
																"nativeSrc": "6670:1:11",
																"nodeType": "YulLiteral",
																"src": "6670:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6665:1:11",
																	"nodeType": "YulTypedName",
																	"src": "6665:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6732:110:11",
																"nodeType": "YulBlock",
																"src": "6732:110:11",
																"statements": [
																	{
																		"nativeSrc": "6746:14:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6746:14:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6756:4:11",
																			"nodeType": "YulLiteral",
																			"src": "6756:4:11",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "6750:2:11",
																				"nodeType": "YulTypedName",
																				"src": "6750:2:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nativeSrc": "6788:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "6788:3:11"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "6793:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "6793:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6784:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "6784:3:11"
																							},
																							"nativeSrc": "6784:11:11",
																							"nodeType": "YulFunctionCall",
																							"src": "6784:11:11"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "6797:2:11",
																							"nodeType": "YulIdentifier",
																							"src": "6797:2:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6780:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "6780:3:11"
																					},
																					"nativeSrc": "6780:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6780:20:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "6816:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "6816:5:11"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "6823:1:11",
																											"nodeType": "YulIdentifier",
																											"src": "6823:1:11"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "6812:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "6812:3:11"
																									},
																									"nativeSrc": "6812:13:11",
																									"nodeType": "YulFunctionCall",
																									"src": "6812:13:11"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "6827:2:11",
																									"nodeType": "YulIdentifier",
																									"src": "6827:2:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6808:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "6808:3:11"
																							},
																							"nativeSrc": "6808:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "6808:22:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6802:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6802:5:11"
																					},
																					"nativeSrc": "6802:29:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6802:29:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6773:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6773:6:11"
																			},
																			"nativeSrc": "6773:59:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6773:59:11"
																		},
																		"nativeSrc": "6773:59:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6773:59:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6691:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6691:1:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6694:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6694:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6688:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6688:2:11"
																},
																"nativeSrc": "6688:13:11",
																"nodeType": "YulFunctionCall",
																"src": "6688:13:11"
															},
															"nativeSrc": "6680:162:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6702:21:11",
																"nodeType": "YulBlock",
																"src": "6702:21:11",
																"statements": [
																	{
																		"nativeSrc": "6704:17:11",
																		"nodeType": "YulAssignment",
																		"src": "6704:17:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6713:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "6713:1:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6716:4:11",
																					"nodeType": "YulLiteral",
																					"src": "6716:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6709:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6709:3:11"
																			},
																			"nativeSrc": "6709:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6709:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6704:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "6704:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6684:3:11",
																"nodeType": "YulBlock",
																"src": "6684:3:11",
																"statements": []
															},
															"src": "6680:162:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6866:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "6866:3:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "6871:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6871:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6862:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6862:3:11"
																				},
																				"nativeSrc": "6862:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6862:16:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6880:4:11",
																				"nodeType": "YulLiteral",
																				"src": "6880:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6858:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6858:3:11"
																		},
																		"nativeSrc": "6858:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6858:27:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6887:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6887:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6851:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6851:6:11"
																},
																"nativeSrc": "6851:38:11",
																"nodeType": "YulFunctionCall",
																"src": "6851:38:11"
															},
															"nativeSrc": "6851:38:11",
															"nodeType": "YulExpressionStatement",
															"src": "6851:38:11"
														},
														{
															"nativeSrc": "6898:57:11",
															"nodeType": "YulAssignment",
															"src": "6898:57:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6913:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6913:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "6926:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "6926:6:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6934:2:11",
																								"nodeType": "YulLiteral",
																								"src": "6934:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "6922:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6922:3:11"
																						},
																						"nativeSrc": "6922:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6922:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6943:2:11",
																								"nodeType": "YulLiteral",
																								"src": "6943:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "6939:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6939:3:11"
																						},
																						"nativeSrc": "6939:7:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6939:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "6918:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6918:3:11"
																				},
																				"nativeSrc": "6918:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6918:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6909:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6909:3:11"
																		},
																		"nativeSrc": "6909:39:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6909:39:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6905:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6905:3:11"
																},
																"nativeSrc": "6905:50:11",
																"nodeType": "YulFunctionCall",
																"src": "6905:50:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6898:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6898:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "6538:423:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6565:5:11",
														"nodeType": "YulTypedName",
														"src": "6565:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6572:3:11",
														"nodeType": "YulTypedName",
														"src": "6572:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6580:3:11",
														"nodeType": "YulTypedName",
														"src": "6580:3:11",
														"type": ""
													}
												],
												"src": "6538:423:11"
											},
											{
												"body": {
													"nativeSrc": "7283:654:11",
													"nodeType": "YulBlock",
													"src": "7283:654:11",
													"statements": [
														{
															"nativeSrc": "7293:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7293:29:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7311:3:11",
																				"nodeType": "YulLiteral",
																				"src": "7311:3:11",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7316:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7316:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7307:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7307:3:11"
																		},
																		"nativeSrc": "7307:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7307:11:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7320:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7303:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7303:3:11"
																},
																"nativeSrc": "7303:19:11",
																"nodeType": "YulFunctionCall",
																"src": "7303:19:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7297:2:11",
																	"nodeType": "YulTypedName",
																	"src": "7297:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7338:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7338:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7353:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7353:6:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7361:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "7361:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7349:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7349:3:11"
																		},
																		"nativeSrc": "7349:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7349:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7331:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7331:6:11"
																},
																"nativeSrc": "7331:34:11",
																"nodeType": "YulFunctionCall",
																"src": "7331:34:11"
															},
															"nativeSrc": "7331:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "7331:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7385:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7385:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7396:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7396:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7381:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7381:3:11"
																		},
																		"nativeSrc": "7381:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7381:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7401:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7401:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7374:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7374:6:11"
																},
																"nativeSrc": "7374:34:11",
																"nodeType": "YulFunctionCall",
																"src": "7374:34:11"
															},
															"nativeSrc": "7374:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "7374:34:11"
														},
														{
															"body": {
																"nativeSrc": "7450:111:11",
																"nodeType": "YulBlock",
																"src": "7450:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7471:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7471:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7478:3:11",
																							"nodeType": "YulLiteral",
																							"src": "7478:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7483:10:11",
																							"nodeType": "YulLiteral",
																							"src": "7483:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7474:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "7474:3:11"
																					},
																					"nativeSrc": "7474:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7474:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7464:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7464:6:11"
																			},
																			"nativeSrc": "7464:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7464:31:11"
																		},
																		"nativeSrc": "7464:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7464:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7515:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7515:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7518:4:11",
																					"nodeType": "YulLiteral",
																					"src": "7518:4:11",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7508:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7508:6:11"
																			},
																			"nativeSrc": "7508:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7508:15:11"
																		},
																		"nativeSrc": "7508:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7508:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7543:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7543:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7546:4:11",
																					"nodeType": "YulLiteral",
																					"src": "7546:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7536:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7536:6:11"
																			},
																			"nativeSrc": "7536:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7536:15:11"
																		},
																		"nativeSrc": "7536:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7536:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "7430:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7430:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7438:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7438:1:11",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7427:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7427:2:11"
																		},
																		"nativeSrc": "7427:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7427:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7420:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7420:6:11"
																},
																"nativeSrc": "7420:21:11",
																"nodeType": "YulFunctionCall",
																"src": "7420:21:11"
															},
															"nativeSrc": "7417:144:11",
															"nodeType": "YulIf",
															"src": "7417:144:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7581:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7581:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7592:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7592:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7577:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7577:3:11"
																		},
																		"nativeSrc": "7577:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7577:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7597:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7597:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7570:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7570:6:11"
																},
																"nativeSrc": "7570:34:11",
																"nodeType": "YulFunctionCall",
																"src": "7570:34:11"
															},
															"nativeSrc": "7570:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "7570:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7624:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7624:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7635:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7635:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7620:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7620:3:11"
																		},
																		"nativeSrc": "7620:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7620:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "7644:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7644:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7652:4:11",
																				"nodeType": "YulLiteral",
																				"src": "7652:4:11",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7640:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7640:3:11"
																		},
																		"nativeSrc": "7640:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7640:17:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7613:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7613:6:11"
																},
																"nativeSrc": "7613:45:11",
																"nodeType": "YulFunctionCall",
																"src": "7613:45:11"
															},
															"nativeSrc": "7613:45:11",
															"nodeType": "YulExpressionStatement",
															"src": "7613:45:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7678:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7678:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7689:3:11",
																				"nodeType": "YulLiteral",
																				"src": "7689:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7674:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7674:3:11"
																		},
																		"nativeSrc": "7674:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7674:19:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7695:3:11",
																		"nodeType": "YulLiteral",
																		"src": "7695:3:11",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7667:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7667:6:11"
																},
																"nativeSrc": "7667:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7667:32:11"
															},
															"nativeSrc": "7667:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "7667:32:11"
														},
														{
															"nativeSrc": "7708:60:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7708:60:11",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "7740:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7740:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7752:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7752:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7763:3:11",
																				"nodeType": "YulLiteral",
																				"src": "7763:3:11",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7748:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7748:3:11"
																		},
																		"nativeSrc": "7748:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7748:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "7722:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "7722:17:11"
																},
																"nativeSrc": "7722:46:11",
																"nodeType": "YulFunctionCall",
																"src": "7722:46:11"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "7712:6:11",
																	"nodeType": "YulTypedName",
																	"src": "7712:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7788:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7788:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7799:3:11",
																				"nodeType": "YulLiteral",
																				"src": "7799:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7784:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7784:3:11"
																		},
																		"nativeSrc": "7784:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7784:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "7809:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7809:6:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7817:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7817:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7805:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7805:3:11"
																		},
																		"nativeSrc": "7805:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7805:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7777:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7777:6:11"
																},
																"nativeSrc": "7777:51:11",
																"nodeType": "YulFunctionCall",
																"src": "7777:51:11"
															},
															"nativeSrc": "7777:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "7777:51:11"
														},
														{
															"nativeSrc": "7837:41:11",
															"nodeType": "YulAssignment",
															"src": "7837:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "7863:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7863:6:11"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "7871:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7871:6:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "7845:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "7845:17:11"
																},
																"nativeSrc": "7845:33:11",
																"nodeType": "YulFunctionCall",
																"src": "7845:33:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7837:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7837:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7898:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7898:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:3:11",
																				"nodeType": "YulLiteral",
																				"src": "7909:3:11",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7894:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7894:3:11"
																		},
																		"nativeSrc": "7894:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7894:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value6",
																				"nativeSrc": "7919:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7919:6:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7927:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "7927:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7915:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7915:3:11"
																		},
																		"nativeSrc": "7915:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7915:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7887:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7887:6:11"
																},
																"nativeSrc": "7887:44:11",
																"nodeType": "YulFunctionCall",
																"src": "7887:44:11"
															},
															"nativeSrc": "7887:44:11",
															"nodeType": "YulExpressionStatement",
															"src": "7887:44:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_enum$_TokenType_$1042_t_uint8_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_address_t_uint256_t_uint8_t_uint8_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed",
												"nativeSrc": "6966:971:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7204:9:11",
														"nodeType": "YulTypedName",
														"src": "7204:9:11",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "7215:6:11",
														"nodeType": "YulTypedName",
														"src": "7215:6:11",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7223:6:11",
														"nodeType": "YulTypedName",
														"src": "7223:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7231:6:11",
														"nodeType": "YulTypedName",
														"src": "7231:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7239:6:11",
														"nodeType": "YulTypedName",
														"src": "7239:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7247:6:11",
														"nodeType": "YulTypedName",
														"src": "7247:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7255:6:11",
														"nodeType": "YulTypedName",
														"src": "7255:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7263:6:11",
														"nodeType": "YulTypedName",
														"src": "7263:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7274:4:11",
														"nodeType": "YulTypedName",
														"src": "7274:4:11",
														"type": ""
													}
												],
												"src": "6966:971:11"
											},
											{
												"body": {
													"nativeSrc": "8065:102:11",
													"nodeType": "YulBlock",
													"src": "8065:102:11",
													"statements": [
														{
															"nativeSrc": "8075:26:11",
															"nodeType": "YulAssignment",
															"src": "8075:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8087:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8087:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8098:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8098:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8083:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8083:3:11"
																},
																"nativeSrc": "8083:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8083:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8075:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8075:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8117:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8117:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8132:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8132:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8148:3:11",
																								"nodeType": "YulLiteral",
																								"src": "8148:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8153:1:11",
																								"nodeType": "YulLiteral",
																								"src": "8153:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8144:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "8144:3:11"
																						},
																						"nativeSrc": "8144:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "8144:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8157:1:11",
																						"nodeType": "YulLiteral",
																						"src": "8157:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8140:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8140:3:11"
																				},
																				"nativeSrc": "8140:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8140:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8128:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8128:3:11"
																		},
																		"nativeSrc": "8128:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8128:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8110:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8110:6:11"
																},
																"nativeSrc": "8110:51:11",
																"nodeType": "YulFunctionCall",
																"src": "8110:51:11"
															},
															"nativeSrc": "8110:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "8110:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ITokenFactory_$1207__to_t_address__fromStack_reversed",
												"nativeSrc": "7942:225:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8034:9:11",
														"nodeType": "YulTypedName",
														"src": "8034:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8045:6:11",
														"nodeType": "YulTypedName",
														"src": "8045:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8056:4:11",
														"nodeType": "YulTypedName",
														"src": "8056:4:11",
														"type": ""
													}
												],
												"src": "7942:225:11"
											},
											{
												"body": {
													"nativeSrc": "8346:231:11",
													"nodeType": "YulBlock",
													"src": "8346:231:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8363:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8363:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8374:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8374:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8356:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8356:6:11"
																},
																"nativeSrc": "8356:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8356:21:11"
															},
															"nativeSrc": "8356:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "8356:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8397:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8397:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8408:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8408:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8393:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8393:3:11"
																		},
																		"nativeSrc": "8393:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8393:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8413:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8413:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8386:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8386:6:11"
																},
																"nativeSrc": "8386:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8386:30:11"
															},
															"nativeSrc": "8386:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8386:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8436:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8436:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8447:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8447:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8432:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8432:3:11"
																		},
																		"nativeSrc": "8432:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8432:18:11"
																	},
																	{
																		"hexValue": "43616e277420736574204c535020466163746f727920746f20746865207a6572",
																		"kind": "string",
																		"nativeSrc": "8452:34:11",
																		"nodeType": "YulLiteral",
																		"src": "8452:34:11",
																		"type": "",
																		"value": "Can't set LSP Factory to the zer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8425:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8425:6:11"
																},
																"nativeSrc": "8425:62:11",
																"nodeType": "YulFunctionCall",
																"src": "8425:62:11"
															},
															"nativeSrc": "8425:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "8425:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8507:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8507:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8518:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8518:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8503:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8503:3:11"
																		},
																		"nativeSrc": "8503:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8503:18:11"
																	},
																	{
																		"hexValue": "6f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "8523:11:11",
																		"nodeType": "YulLiteral",
																		"src": "8523:11:11",
																		"type": "",
																		"value": "o address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8496:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8496:6:11"
																},
																"nativeSrc": "8496:39:11",
																"nodeType": "YulFunctionCall",
																"src": "8496:39:11"
															},
															"nativeSrc": "8496:39:11",
															"nodeType": "YulExpressionStatement",
															"src": "8496:39:11"
														},
														{
															"nativeSrc": "8544:27:11",
															"nodeType": "YulAssignment",
															"src": "8544:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8556:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8556:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8567:3:11",
																		"nodeType": "YulLiteral",
																		"src": "8567:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8552:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8552:3:11"
																},
																"nativeSrc": "8552:19:11",
																"nodeType": "YulFunctionCall",
																"src": "8552:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8544:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8544:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d817c94589f2fd2490c47157dd34f129e87dd08fd49c4442e508a9a375e06bb1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8172:405:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8323:9:11",
														"nodeType": "YulTypedName",
														"src": "8323:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8337:4:11",
														"nodeType": "YulTypedName",
														"src": "8337:4:11",
														"type": ""
													}
												],
												"src": "8172:405:11"
											},
											{
												"body": {
													"nativeSrc": "8751:214:11",
													"nodeType": "YulBlock",
													"src": "8751:214:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8768:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8768:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8779:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8779:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8761:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8761:6:11"
																},
																"nativeSrc": "8761:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8761:21:11"
															},
															"nativeSrc": "8761:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "8761:21:11"
														},
														{
															"nativeSrc": "8791:59:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8791:59:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8823:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8823:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8835:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8835:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8846:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8846:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8831:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8831:3:11"
																		},
																		"nativeSrc": "8831:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8831:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "8805:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "8805:17:11"
																},
																"nativeSrc": "8805:45:11",
																"nodeType": "YulFunctionCall",
																"src": "8805:45:11"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "8795:6:11",
																	"nodeType": "YulTypedName",
																	"src": "8795:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8870:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8870:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8881:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8881:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8866:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8866:3:11"
																		},
																		"nativeSrc": "8866:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8866:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "8890:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8890:6:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8898:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8898:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8886:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8886:3:11"
																		},
																		"nativeSrc": "8886:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8886:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8859:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8859:6:11"
																},
																"nativeSrc": "8859:50:11",
																"nodeType": "YulFunctionCall",
																"src": "8859:50:11"
															},
															"nativeSrc": "8859:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "8859:50:11"
														},
														{
															"nativeSrc": "8918:41:11",
															"nodeType": "YulAssignment",
															"src": "8918:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8944:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8944:6:11"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "8952:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8952:6:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "8926:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "8926:17:11"
																},
																"nativeSrc": "8926:33:11",
																"nodeType": "YulFunctionCall",
																"src": "8926:33:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8918:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8918:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8582:383:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8712:9:11",
														"nodeType": "YulTypedName",
														"src": "8712:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8723:6:11",
														"nodeType": "YulTypedName",
														"src": "8723:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8731:6:11",
														"nodeType": "YulTypedName",
														"src": "8731:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8742:4:11",
														"nodeType": "YulTypedName",
														"src": "8742:4:11",
														"type": ""
													}
												],
												"src": "8582:383:11"
											},
											{
												"body": {
													"nativeSrc": "9051:170:11",
													"nodeType": "YulBlock",
													"src": "9051:170:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9097:16:11",
																"nodeType": "YulBlock",
																"src": "9097:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9106:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9106:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9109:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9109:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9099:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9099:6:11"
																			},
																			"nativeSrc": "9099:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9099:12:11"
																		},
																		"nativeSrc": "9099:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9099:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9072:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9072:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9081:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9081:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9068:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9068:3:11"
																		},
																		"nativeSrc": "9068:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9068:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9093:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9093:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9064:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9064:3:11"
																},
																"nativeSrc": "9064:32:11",
																"nodeType": "YulFunctionCall",
																"src": "9064:32:11"
															},
															"nativeSrc": "9061:52:11",
															"nodeType": "YulIf",
															"src": "9061:52:11"
														},
														{
															"nativeSrc": "9122:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "9122:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9141:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9141:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9135:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "9135:5:11"
																},
																"nativeSrc": "9135:16:11",
																"nodeType": "YulFunctionCall",
																"src": "9135:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9126:5:11",
																	"nodeType": "YulTypedName",
																	"src": "9126:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9185:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "9185:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "9160:24:11",
																	"nodeType": "YulIdentifier",
																	"src": "9160:24:11"
																},
																"nativeSrc": "9160:31:11",
																"nodeType": "YulFunctionCall",
																"src": "9160:31:11"
															},
															"nativeSrc": "9160:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "9160:31:11"
														},
														{
															"nativeSrc": "9200:15:11",
															"nodeType": "YulAssignment",
															"src": "9200:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "9210:5:11",
																"nodeType": "YulIdentifier",
																"src": "9210:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9200:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9200:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "8970:251:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9017:9:11",
														"nodeType": "YulTypedName",
														"src": "9017:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9028:7:11",
														"nodeType": "YulTypedName",
														"src": "9028:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9040:6:11",
														"nodeType": "YulTypedName",
														"src": "9040:6:11",
														"type": ""
													}
												],
												"src": "8970:251:11"
											},
											{
												"body": {
													"nativeSrc": "9373:147:11",
													"nodeType": "YulBlock",
													"src": "9373:147:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9390:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9390:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "9403:2:11",
																						"nodeType": "YulLiteral",
																						"src": "9403:2:11",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nativeSrc": "9407:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9407:6:11"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "9399:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9399:3:11"
																				},
																				"nativeSrc": "9399:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9399:15:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "9420:26:11",
																						"nodeType": "YulLiteral",
																						"src": "9420:26:11",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "9416:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9416:3:11"
																				},
																				"nativeSrc": "9416:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9416:31:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9395:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9395:3:11"
																		},
																		"nativeSrc": "9395:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9395:53:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9383:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9383:6:11"
																},
																"nativeSrc": "9383:66:11",
																"nodeType": "YulFunctionCall",
																"src": "9383:66:11"
															},
															"nativeSrc": "9383:66:11",
															"nodeType": "YulExpressionStatement",
															"src": "9383:66:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "9469:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "9469:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9474:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9474:2:11",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9465:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9465:3:11"
																		},
																		"nativeSrc": "9465:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9465:12:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9479:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9479:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9458:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9458:6:11"
																},
																"nativeSrc": "9458:28:11",
																"nodeType": "YulFunctionCall",
																"src": "9458:28:11"
															},
															"nativeSrc": "9458:28:11",
															"nodeType": "YulExpressionStatement",
															"src": "9458:28:11"
														},
														{
															"nativeSrc": "9495:19:11",
															"nodeType": "YulAssignment",
															"src": "9495:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9506:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9506:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9511:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9511:2:11",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9502:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9502:3:11"
																},
																"nativeSrc": "9502:12:11",
																"nodeType": "YulFunctionCall",
																"src": "9502:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9495:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9495:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9226:294:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9341:3:11",
														"nodeType": "YulTypedName",
														"src": "9341:3:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9346:6:11",
														"nodeType": "YulTypedName",
														"src": "9346:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9354:6:11",
														"nodeType": "YulTypedName",
														"src": "9354:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9365:3:11",
														"nodeType": "YulTypedName",
														"src": "9365:3:11",
														"type": ""
													}
												],
												"src": "9226:294:11"
											},
											{
												"body": {
													"nativeSrc": "9580:325:11",
													"nodeType": "YulBlock",
													"src": "9580:325:11",
													"statements": [
														{
															"nativeSrc": "9590:22:11",
															"nodeType": "YulAssignment",
															"src": "9590:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9604:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9604:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "9607:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "9607:4:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9600:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9600:3:11"
																},
																"nativeSrc": "9600:12:11",
																"nodeType": "YulFunctionCall",
																"src": "9600:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9590:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9590:6:11"
																}
															]
														},
														{
															"nativeSrc": "9621:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "9621:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9651:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "9651:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9657:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9657:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9647:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9647:3:11"
																},
																"nativeSrc": "9647:12:11",
																"nodeType": "YulFunctionCall",
																"src": "9647:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9625:18:11",
																	"nodeType": "YulTypedName",
																	"src": "9625:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9698:31:11",
																"nodeType": "YulBlock",
																"src": "9698:31:11",
																"statements": [
																	{
																		"nativeSrc": "9700:27:11",
																		"nodeType": "YulAssignment",
																		"src": "9700:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9714:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "9714:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9722:4:11",
																					"nodeType": "YulLiteral",
																					"src": "9722:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9710:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "9710:3:11"
																			},
																			"nativeSrc": "9710:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9710:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9700:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9700:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9678:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "9678:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9671:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9671:6:11"
																},
																"nativeSrc": "9671:26:11",
																"nodeType": "YulFunctionCall",
																"src": "9671:26:11"
															},
															"nativeSrc": "9668:61:11",
															"nodeType": "YulIf",
															"src": "9668:61:11"
														},
														{
															"body": {
																"nativeSrc": "9788:111:11",
																"nodeType": "YulBlock",
																"src": "9788:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9809:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9809:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9816:3:11",
																							"nodeType": "YulLiteral",
																							"src": "9816:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9821:10:11",
																							"nodeType": "YulLiteral",
																							"src": "9821:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9812:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "9812:3:11"
																					},
																					"nativeSrc": "9812:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9812:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9802:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9802:6:11"
																			},
																			"nativeSrc": "9802:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9802:31:11"
																		},
																		"nativeSrc": "9802:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9802:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9853:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9853:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9856:4:11",
																					"nodeType": "YulLiteral",
																					"src": "9856:4:11",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9846:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9846:6:11"
																			},
																			"nativeSrc": "9846:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9846:15:11"
																		},
																		"nativeSrc": "9846:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9846:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9881:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9881:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9884:4:11",
																					"nodeType": "YulLiteral",
																					"src": "9884:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9874:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9874:6:11"
																			},
																			"nativeSrc": "9874:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9874:15:11"
																		},
																		"nativeSrc": "9874:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9874:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9744:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "9744:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9767:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9767:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9775:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9775:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9764:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "9764:2:11"
																		},
																		"nativeSrc": "9764:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9764:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9741:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "9741:2:11"
																},
																"nativeSrc": "9741:38:11",
																"nodeType": "YulFunctionCall",
																"src": "9741:38:11"
															},
															"nativeSrc": "9738:161:11",
															"nodeType": "YulIf",
															"src": "9738:161:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9525:380:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9560:4:11",
														"nodeType": "YulTypedName",
														"src": "9560:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9569:6:11",
														"nodeType": "YulTypedName",
														"src": "9569:6:11",
														"type": ""
													}
												],
												"src": "9525:380:11"
											},
											{
												"body": {
													"nativeSrc": "9966:65:11",
													"nodeType": "YulBlock",
													"src": "9966:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9983:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9983:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "9986:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9986:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9976:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9976:6:11"
																},
																"nativeSrc": "9976:14:11",
																"nodeType": "YulFunctionCall",
																"src": "9976:14:11"
															},
															"nativeSrc": "9976:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "9976:14:11"
														},
														{
															"nativeSrc": "9999:26:11",
															"nodeType": "YulAssignment",
															"src": "9999:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10017:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10017:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10020:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10020:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "10007:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "10007:9:11"
																},
																"nativeSrc": "10007:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10007:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9999:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9999:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "9910:121:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9949:3:11",
														"nodeType": "YulTypedName",
														"src": "9949:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "9957:4:11",
														"nodeType": "YulTypedName",
														"src": "9957:4:11",
														"type": ""
													}
												],
												"src": "9910:121:11"
											},
											{
												"body": {
													"nativeSrc": "10117:437:11",
													"nodeType": "YulBlock",
													"src": "10117:437:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "10150:398:11",
																"nodeType": "YulBlock",
																"src": "10150:398:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10171:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10171:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "10174:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "10174:5:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10164:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10164:6:11"
																			},
																			"nativeSrc": "10164:16:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10164:16:11"
																		},
																		"nativeSrc": "10164:16:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10164:16:11"
																	},
																	{
																		"nativeSrc": "10193:30:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10193:30:11",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10215:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10215:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10218:4:11",
																					"nodeType": "YulLiteral",
																					"src": "10218:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "10205:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10205:9:11"
																			},
																			"nativeSrc": "10205:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10205:18:11"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "10197:4:11",
																				"nodeType": "YulTypedName",
																				"src": "10197:4:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "10236:57:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10236:57:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "10259:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "10259:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10269:1:11",
																							"nodeType": "YulLiteral",
																							"src": "10269:1:11",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "10276:10:11",
																									"nodeType": "YulIdentifier",
																									"src": "10276:10:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10288:2:11",
																									"nodeType": "YulLiteral",
																									"src": "10288:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10272:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "10272:3:11"
																							},
																							"nativeSrc": "10272:19:11",
																							"nodeType": "YulFunctionCall",
																							"src": "10272:19:11"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "10265:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "10265:3:11"
																					},
																					"nativeSrc": "10265:27:11",
																					"nodeType": "YulFunctionCall",
																					"src": "10265:27:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10255:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "10255:3:11"
																			},
																			"nativeSrc": "10255:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10255:38:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "10240:11:11",
																				"nodeType": "YulTypedName",
																				"src": "10240:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "10330:23:11",
																			"nodeType": "YulBlock",
																			"src": "10330:23:11",
																			"statements": [
																				{
																					"nativeSrc": "10332:19:11",
																					"nodeType": "YulAssignment",
																					"src": "10332:19:11",
																					"value": {
																						"name": "data",
																						"nativeSrc": "10347:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "10347:4:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "10332:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "10332:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "10312:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "10312:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10324:4:11",
																					"nodeType": "YulLiteral",
																					"src": "10324:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "10309:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "10309:2:11"
																			},
																			"nativeSrc": "10309:20:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10309:20:11"
																		},
																		"nativeSrc": "10306:47:11",
																		"nodeType": "YulIf",
																		"src": "10306:47:11"
																	},
																	{
																		"nativeSrc": "10366:41:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10366:41:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "10380:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "10380:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10390:1:11",
																							"nodeType": "YulLiteral",
																							"src": "10390:1:11",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "10397:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "10397:3:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10402:2:11",
																									"nodeType": "YulLiteral",
																									"src": "10402:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10393:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "10393:3:11"
																							},
																							"nativeSrc": "10393:12:11",
																							"nodeType": "YulFunctionCall",
																							"src": "10393:12:11"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "10386:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "10386:3:11"
																					},
																					"nativeSrc": "10386:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "10386:20:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10376:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "10376:3:11"
																			},
																			"nativeSrc": "10376:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10376:31:11"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "10370:2:11",
																				"nodeType": "YulTypedName",
																				"src": "10370:2:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "10420:24:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10420:24:11",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "10433:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "10433:11:11"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "10424:5:11",
																				"nodeType": "YulTypedName",
																				"src": "10424:5:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "10518:20:11",
																			"nodeType": "YulBlock",
																			"src": "10518:20:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "10527:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "10527:5:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10534:1:11",
																								"nodeType": "YulLiteral",
																								"src": "10534:1:11",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "10520:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "10520:6:11"
																						},
																						"nativeSrc": "10520:16:11",
																						"nodeType": "YulFunctionCall",
																						"src": "10520:16:11"
																					},
																					"nativeSrc": "10520:16:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "10520:16:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "10468:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "10468:5:11"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "10475:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "10475:2:11"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "10465:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "10465:2:11"
																			},
																			"nativeSrc": "10465:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10465:13:11"
																		},
																		"nativeSrc": "10457:81:11",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "10479:26:11",
																			"nodeType": "YulBlock",
																			"src": "10479:26:11",
																			"statements": [
																				{
																					"nativeSrc": "10481:22:11",
																					"nodeType": "YulAssignment",
																					"src": "10481:22:11",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "10494:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "10494:5:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10501:1:11",
																								"nodeType": "YulLiteral",
																								"src": "10501:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "10490:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "10490:3:11"
																						},
																						"nativeSrc": "10490:13:11",
																						"nodeType": "YulFunctionCall",
																						"src": "10490:13:11"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "10481:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "10481:5:11"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "10461:3:11",
																			"nodeType": "YulBlock",
																			"src": "10461:3:11",
																			"statements": []
																		},
																		"src": "10457:81:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "10133:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10133:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10138:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10138:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10130:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10130:2:11"
																},
																"nativeSrc": "10130:11:11",
																"nodeType": "YulFunctionCall",
																"src": "10130:11:11"
															},
															"nativeSrc": "10127:421:11",
															"nodeType": "YulIf",
															"src": "10127:421:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "10036:518:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "10089:5:11",
														"nodeType": "YulTypedName",
														"src": "10089:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "10096:3:11",
														"nodeType": "YulTypedName",
														"src": "10096:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "10101:10:11",
														"nodeType": "YulTypedName",
														"src": "10101:10:11",
														"type": ""
													}
												],
												"src": "10036:518:11"
											},
											{
												"body": {
													"nativeSrc": "10644:81:11",
													"nodeType": "YulBlock",
													"src": "10644:81:11",
													"statements": [
														{
															"nativeSrc": "10654:65:11",
															"nodeType": "YulAssignment",
															"src": "10654:65:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "10669:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "10669:4:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "10687:1:11",
																										"nodeType": "YulLiteral",
																										"src": "10687:1:11",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "10690:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "10690:3:11"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "10683:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "10683:3:11"
																								},
																								"nativeSrc": "10683:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "10683:11:11"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "10700:1:11",
																										"nodeType": "YulLiteral",
																										"src": "10700:1:11",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "10696:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "10696:3:11"
																								},
																								"nativeSrc": "10696:6:11",
																								"nodeType": "YulFunctionCall",
																								"src": "10696:6:11"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "10679:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "10679:3:11"
																						},
																						"nativeSrc": "10679:24:11",
																						"nodeType": "YulFunctionCall",
																						"src": "10679:24:11"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "10675:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10675:3:11"
																				},
																				"nativeSrc": "10675:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10675:29:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10665:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10665:3:11"
																		},
																		"nativeSrc": "10665:40:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10665:40:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10711:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10711:1:11",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "10714:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "10714:3:11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10707:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10707:3:11"
																		},
																		"nativeSrc": "10707:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10707:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10662:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10662:2:11"
																},
																"nativeSrc": "10662:57:11",
																"nodeType": "YulFunctionCall",
																"src": "10662:57:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "10654:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10654:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "10559:166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10621:4:11",
														"nodeType": "YulTypedName",
														"src": "10621:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "10627:3:11",
														"nodeType": "YulTypedName",
														"src": "10627:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "10635:4:11",
														"nodeType": "YulTypedName",
														"src": "10635:4:11",
														"type": ""
													}
												],
												"src": "10559:166:11"
											},
											{
												"body": {
													"nativeSrc": "10826:1249:11",
													"nodeType": "YulBlock",
													"src": "10826:1249:11",
													"statements": [
														{
															"nativeSrc": "10836:24:11",
															"nodeType": "YulVariableDeclaration",
															"src": "10836:24:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10856:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10856:3:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10850:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "10850:5:11"
																},
																"nativeSrc": "10850:10:11",
																"nodeType": "YulFunctionCall",
																"src": "10850:10:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "10840:6:11",
																	"nodeType": "YulTypedName",
																	"src": "10840:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10903:22:11",
																"nodeType": "YulBlock",
																"src": "10903:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10905:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10905:16:11"
																			},
																			"nativeSrc": "10905:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10905:18:11"
																		},
																		"nativeSrc": "10905:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10905:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "10875:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10875:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10883:18:11",
																		"nodeType": "YulLiteral",
																		"src": "10883:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10872:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10872:2:11"
																},
																"nativeSrc": "10872:30:11",
																"nodeType": "YulFunctionCall",
																"src": "10872:30:11"
															},
															"nativeSrc": "10869:56:11",
															"nodeType": "YulIf",
															"src": "10869:56:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "10978:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10978:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "11016:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "11016:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "11010:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "11010:5:11"
																				},
																				"nativeSrc": "11010:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11010:11:11"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "10984:25:11",
																			"nodeType": "YulIdentifier",
																			"src": "10984:25:11"
																		},
																		"nativeSrc": "10984:38:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10984:38:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "11024:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11024:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "10934:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10934:43:11"
																},
																"nativeSrc": "10934:97:11",
																"nodeType": "YulFunctionCall",
																"src": "10934:97:11"
															},
															"nativeSrc": "10934:97:11",
															"nodeType": "YulExpressionStatement",
															"src": "10934:97:11"
														},
														{
															"nativeSrc": "11040:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "11040:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "11057:1:11",
																"nodeType": "YulLiteral",
																"src": "11057:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "11044:9:11",
																	"nodeType": "YulTypedName",
																	"src": "11044:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11067:23:11",
															"nodeType": "YulVariableDeclaration",
															"src": "11067:23:11",
															"value": {
																"kind": "number",
																"nativeSrc": "11086:4:11",
																"nodeType": "YulLiteral",
																"src": "11086:4:11",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "11071:11:11",
																	"nodeType": "YulTypedName",
																	"src": "11071:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11099:17:11",
															"nodeType": "YulAssignment",
															"src": "11099:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "11112:4:11",
																"nodeType": "YulLiteral",
																"src": "11112:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "11099:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "11099:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "11162:656:11",
																		"nodeType": "YulBlock",
																		"src": "11162:656:11",
																		"statements": [
																			{
																				"nativeSrc": "11176:35:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11176:35:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "11195:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "11195:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "11207:2:11",
																									"nodeType": "YulLiteral",
																									"src": "11207:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "11203:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "11203:3:11"
																							},
																							"nativeSrc": "11203:7:11",
																							"nodeType": "YulFunctionCall",
																							"src": "11203:7:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "11191:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "11191:3:11"
																					},
																					"nativeSrc": "11191:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "11191:20:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "11180:7:11",
																						"nodeType": "YulTypedName",
																						"src": "11180:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "11224:49:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11224:49:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "11268:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "11268:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "11238:29:11",
																						"nodeType": "YulIdentifier",
																						"src": "11238:29:11"
																					},
																					"nativeSrc": "11238:35:11",
																					"nodeType": "YulFunctionCall",
																					"src": "11238:35:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "11228:6:11",
																						"nodeType": "YulTypedName",
																						"src": "11228:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "11286:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11286:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11295:1:11",
																					"nodeType": "YulLiteral",
																					"src": "11295:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "11290:1:11",
																						"nodeType": "YulTypedName",
																						"src": "11290:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11373:172:11",
																					"nodeType": "YulBlock",
																					"src": "11373:172:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "11398:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "11398:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "11416:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "11416:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "11421:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "11421:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "11412:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "11412:3:11"
																												},
																												"nativeSrc": "11412:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "11412:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "11406:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "11406:5:11"
																										},
																										"nativeSrc": "11406:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "11406:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "11391:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "11391:6:11"
																								},
																								"nativeSrc": "11391:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "11391:42:11"
																							},
																							"nativeSrc": "11391:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "11391:42:11"
																						},
																						{
																							"nativeSrc": "11450:24:11",
																							"nodeType": "YulAssignment",
																							"src": "11450:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "11464:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "11464:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "11472:1:11",
																										"nodeType": "YulLiteral",
																										"src": "11472:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11460:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "11460:3:11"
																								},
																								"nativeSrc": "11460:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "11460:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "11450:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "11450:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "11491:40:11",
																							"nodeType": "YulAssignment",
																							"src": "11491:40:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "11508:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "11508:9:11"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "11519:11:11",
																										"nodeType": "YulIdentifier",
																										"src": "11519:11:11"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11504:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "11504:3:11"
																								},
																								"nativeSrc": "11504:27:11",
																								"nodeType": "YulFunctionCall",
																								"src": "11504:27:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "11491:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "11491:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "11320:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "11320:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "11323:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "11323:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "11317:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "11317:2:11"
																					},
																					"nativeSrc": "11317:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "11317:14:11"
																				},
																				"nativeSrc": "11309:236:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "11332:28:11",
																					"nodeType": "YulBlock",
																					"src": "11332:28:11",
																					"statements": [
																						{
																							"nativeSrc": "11334:24:11",
																							"nodeType": "YulAssignment",
																							"src": "11334:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "11343:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "11343:1:11"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "11346:11:11",
																										"nodeType": "YulIdentifier",
																										"src": "11346:11:11"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11339:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "11339:3:11"
																								},
																								"nativeSrc": "11339:19:11",
																								"nodeType": "YulFunctionCall",
																								"src": "11339:19:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "11334:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "11334:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "11313:3:11",
																					"nodeType": "YulBlock",
																					"src": "11313:3:11",
																					"statements": []
																				},
																				"src": "11309:236:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "11593:166:11",
																					"nodeType": "YulBlock",
																					"src": "11593:166:11",
																					"statements": [
																						{
																							"nativeSrc": "11611:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "11611:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "11638:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "11638:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "11643:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "11643:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "11634:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "11634:3:11"
																										},
																										"nativeSrc": "11634:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "11634:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "11628:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "11628:5:11"
																								},
																								"nativeSrc": "11628:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "11628:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "11615:9:11",
																									"nodeType": "YulTypedName",
																									"src": "11615:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "11678:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "11678:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "11690:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "11690:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "11717:1:11",
																																				"nodeType": "YulLiteral",
																																				"src": "11717:1:11",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "11720:6:11",
																																				"nodeType": "YulIdentifier",
																																				"src": "11720:6:11"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "11713:3:11",
																																			"nodeType": "YulIdentifier",
																																			"src": "11713:3:11"
																																		},
																																		"nativeSrc": "11713:14:11",
																																		"nodeType": "YulFunctionCall",
																																		"src": "11713:14:11"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "11729:3:11",
																																		"nodeType": "YulLiteral",
																																		"src": "11729:3:11",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "11709:3:11",
																																	"nodeType": "YulIdentifier",
																																	"src": "11709:3:11"
																																},
																																"nativeSrc": "11709:24:11",
																																"nodeType": "YulFunctionCall",
																																"src": "11709:24:11"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "11739:1:11",
																																		"nodeType": "YulLiteral",
																																		"src": "11739:1:11",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "11735:3:11",
																																	"nodeType": "YulIdentifier",
																																	"src": "11735:3:11"
																																},
																																"nativeSrc": "11735:6:11",
																																"nodeType": "YulFunctionCall",
																																"src": "11735:6:11"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "11705:3:11",
																															"nodeType": "YulIdentifier",
																															"src": "11705:3:11"
																														},
																														"nativeSrc": "11705:37:11",
																														"nodeType": "YulFunctionCall",
																														"src": "11705:37:11"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "11701:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "11701:3:11"
																												},
																												"nativeSrc": "11701:42:11",
																												"nodeType": "YulFunctionCall",
																												"src": "11701:42:11"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "11686:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "11686:3:11"
																										},
																										"nativeSrc": "11686:58:11",
																										"nodeType": "YulFunctionCall",
																										"src": "11686:58:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "11671:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "11671:6:11"
																								},
																								"nativeSrc": "11671:74:11",
																								"nodeType": "YulFunctionCall",
																								"src": "11671:74:11"
																							},
																							"nativeSrc": "11671:74:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "11671:74:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "11564:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "11564:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "11573:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "11573:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "11561:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "11561:2:11"
																					},
																					"nativeSrc": "11561:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "11561:19:11"
																				},
																				"nativeSrc": "11558:201:11",
																				"nodeType": "YulIf",
																				"src": "11558:201:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "11779:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "11779:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "11793:1:11",
																											"nodeType": "YulLiteral",
																											"src": "11793:1:11",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "11796:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "11796:6:11"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "11789:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "11789:3:11"
																									},
																									"nativeSrc": "11789:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "11789:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11805:1:11",
																									"nodeType": "YulLiteral",
																									"src": "11805:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11785:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "11785:3:11"
																							},
																							"nativeSrc": "11785:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "11785:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "11772:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "11772:6:11"
																					},
																					"nativeSrc": "11772:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "11772:36:11"
																				},
																				"nativeSrc": "11772:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "11772:36:11"
																			}
																		]
																	},
																	"nativeSrc": "11155:663:11",
																	"nodeType": "YulCase",
																	"src": "11155:663:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11160:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11160:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "11835:234:11",
																		"nodeType": "YulBlock",
																		"src": "11835:234:11",
																		"statements": [
																			{
																				"nativeSrc": "11849:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11849:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11862:1:11",
																					"nodeType": "YulLiteral",
																					"src": "11862:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "11853:5:11",
																						"nodeType": "YulTypedName",
																						"src": "11853:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11898:67:11",
																					"nodeType": "YulBlock",
																					"src": "11898:67:11",
																					"statements": [
																						{
																							"nativeSrc": "11916:35:11",
																							"nodeType": "YulAssignment",
																							"src": "11916:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "11935:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "11935:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "11940:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "11940:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "11931:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "11931:3:11"
																										},
																										"nativeSrc": "11931:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "11931:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "11925:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "11925:5:11"
																								},
																								"nativeSrc": "11925:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "11925:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "11916:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "11916:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "11879:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "11879:6:11"
																				},
																				"nativeSrc": "11876:89:11",
																				"nodeType": "YulIf",
																				"src": "11876:89:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "11985:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "11985:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "12044:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "12044:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "12051:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "12051:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "11991:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "11991:52:11"
																							},
																							"nativeSrc": "11991:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "11991:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "11978:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "11978:6:11"
																					},
																					"nativeSrc": "11978:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "11978:81:11"
																				},
																				"nativeSrc": "11978:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "11978:81:11"
																			}
																		]
																	},
																	"nativeSrc": "11827:242:11",
																	"nodeType": "YulCase",
																	"src": "11827:242:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "11135:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11135:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11143:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11143:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11132:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "11132:2:11"
																},
																"nativeSrc": "11132:14:11",
																"nodeType": "YulFunctionCall",
																"src": "11132:14:11"
															},
															"nativeSrc": "11125:944:11",
															"nodeType": "YulSwitch",
															"src": "11125:944:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "10730:1345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "10811:4:11",
														"nodeType": "YulTypedName",
														"src": "10811:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "10817:3:11",
														"nodeType": "YulTypedName",
														"src": "10817:3:11",
														"type": ""
													}
												],
												"src": "10730:1345:11"
											},
											{
												"body": {
													"nativeSrc": "12237:218:11",
													"nodeType": "YulBlock",
													"src": "12237:218:11",
													"statements": [
														{
															"nativeSrc": "12247:26:11",
															"nodeType": "YulAssignment",
															"src": "12247:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12259:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12259:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12270:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12270:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12255:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12255:3:11"
																},
																"nativeSrc": "12255:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12255:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12247:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12247:4:11"
																}
															]
														},
														{
															"nativeSrc": "12282:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12282:29:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12300:3:11",
																				"nodeType": "YulLiteral",
																				"src": "12300:3:11",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12305:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12305:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12296:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12296:3:11"
																		},
																		"nativeSrc": "12296:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12296:11:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12309:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12309:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12292:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12292:3:11"
																},
																"nativeSrc": "12292:19:11",
																"nodeType": "YulFunctionCall",
																"src": "12292:19:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "12286:2:11",
																	"nodeType": "YulTypedName",
																	"src": "12286:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12327:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12327:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12342:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12342:6:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "12350:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "12350:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12338:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12338:3:11"
																		},
																		"nativeSrc": "12338:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12338:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12320:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12320:6:11"
																},
																"nativeSrc": "12320:34:11",
																"nodeType": "YulFunctionCall",
																"src": "12320:34:11"
															},
															"nativeSrc": "12320:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "12320:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12374:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12374:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12385:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12385:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12370:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12370:3:11"
																		},
																		"nativeSrc": "12370:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12370:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "12394:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12394:6:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "12402:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "12402:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12390:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12390:3:11"
																		},
																		"nativeSrc": "12390:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12390:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12363:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12363:6:11"
																},
																"nativeSrc": "12363:43:11",
																"nodeType": "YulFunctionCall",
																"src": "12363:43:11"
															},
															"nativeSrc": "12363:43:11",
															"nodeType": "YulExpressionStatement",
															"src": "12363:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12426:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12426:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12437:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12437:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12422:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12422:3:11"
																		},
																		"nativeSrc": "12422:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12422:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "12442:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12442:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12415:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12415:6:11"
																},
																"nativeSrc": "12415:34:11",
																"nodeType": "YulFunctionCall",
																"src": "12415:34:11"
															},
															"nativeSrc": "12415:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "12415:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12080:375:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12190:9:11",
														"nodeType": "YulTypedName",
														"src": "12190:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12201:6:11",
														"nodeType": "YulTypedName",
														"src": "12201:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12209:6:11",
														"nodeType": "YulTypedName",
														"src": "12209:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12217:6:11",
														"nodeType": "YulTypedName",
														"src": "12217:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12228:4:11",
														"nodeType": "YulTypedName",
														"src": "12228:4:11",
														"type": ""
													}
												],
												"src": "12080:375:11"
											},
											{
												"body": {
													"nativeSrc": "12538:199:11",
													"nodeType": "YulBlock",
													"src": "12538:199:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "12584:16:11",
																"nodeType": "YulBlock",
																"src": "12584:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12593:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12593:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12596:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12596:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12586:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12586:6:11"
																			},
																			"nativeSrc": "12586:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12586:12:11"
																		},
																		"nativeSrc": "12586:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12586:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12559:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "12559:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12568:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12568:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12555:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12555:3:11"
																		},
																		"nativeSrc": "12555:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12555:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12580:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12580:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12551:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12551:3:11"
																},
																"nativeSrc": "12551:32:11",
																"nodeType": "YulFunctionCall",
																"src": "12551:32:11"
															},
															"nativeSrc": "12548:52:11",
															"nodeType": "YulIf",
															"src": "12548:52:11"
														},
														{
															"nativeSrc": "12609:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12609:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12628:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12628:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12622:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "12622:5:11"
																},
																"nativeSrc": "12622:16:11",
																"nodeType": "YulFunctionCall",
																"src": "12622:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "12613:5:11",
																	"nodeType": "YulTypedName",
																	"src": "12613:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12691:16:11",
																"nodeType": "YulBlock",
																"src": "12691:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12700:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12700:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12703:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12703:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12693:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12693:6:11"
																			},
																			"nativeSrc": "12693:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12693:12:11"
																		},
																		"nativeSrc": "12693:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12693:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12660:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "12660:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "12681:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "12681:5:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "12674:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "12674:6:11"
																						},
																						"nativeSrc": "12674:13:11",
																						"nodeType": "YulFunctionCall",
																						"src": "12674:13:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12667:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "12667:6:11"
																				},
																				"nativeSrc": "12667:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12667:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12657:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "12657:2:11"
																		},
																		"nativeSrc": "12657:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12657:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12650:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12650:6:11"
																},
																"nativeSrc": "12650:40:11",
																"nodeType": "YulFunctionCall",
																"src": "12650:40:11"
															},
															"nativeSrc": "12647:60:11",
															"nodeType": "YulIf",
															"src": "12647:60:11"
														},
														{
															"nativeSrc": "12716:15:11",
															"nodeType": "YulAssignment",
															"src": "12716:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "12726:5:11",
																"nodeType": "YulIdentifier",
																"src": "12726:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "12716:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12716:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12460:277:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12504:9:11",
														"nodeType": "YulTypedName",
														"src": "12504:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12515:7:11",
														"nodeType": "YulTypedName",
														"src": "12515:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12527:6:11",
														"nodeType": "YulTypedName",
														"src": "12527:6:11",
														"type": ""
													}
												],
												"src": "12460:277:11"
											},
											{
												"body": {
													"nativeSrc": "12916:252:11",
													"nodeType": "YulBlock",
													"src": "12916:252:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12933:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12933:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12944:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12944:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12926:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12926:6:11"
																},
																"nativeSrc": "12926:21:11",
																"nodeType": "YulFunctionCall",
																"src": "12926:21:11"
															},
															"nativeSrc": "12926:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "12926:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12967:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12967:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12978:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12978:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12963:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12963:3:11"
																		},
																		"nativeSrc": "12963:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12963:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12983:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12983:2:11",
																		"type": "",
																		"value": "62"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12956:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12956:6:11"
																},
																"nativeSrc": "12956:30:11",
																"nodeType": "YulFunctionCall",
																"src": "12956:30:11"
															},
															"nativeSrc": "12956:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "12956:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13006:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13006:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13017:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13017:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13002:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13002:3:11"
																		},
																		"nativeSrc": "13002:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13002:18:11"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65642e204d616b652073757265206272696467",
																		"kind": "string",
																		"nativeSrc": "13022:34:11",
																		"nodeType": "YulLiteral",
																		"src": "13022:34:11",
																		"type": "",
																		"value": "Transfer failed. Make sure bridg"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12995:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12995:6:11"
																},
																"nativeSrc": "12995:62:11",
																"nodeType": "YulFunctionCall",
																"src": "12995:62:11"
															},
															"nativeSrc": "12995:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "12995:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13077:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13077:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13088:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13088:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13073:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13073:3:11"
																		},
																		"nativeSrc": "13073:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13073:18:11"
																	},
																	{
																		"hexValue": "6520697320617070726f76656420746f207370656e6420746f6b656e732e",
																		"kind": "string",
																		"nativeSrc": "13093:32:11",
																		"nodeType": "YulLiteral",
																		"src": "13093:32:11",
																		"type": "",
																		"value": "e is approved to spend tokens."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13066:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13066:6:11"
																},
																"nativeSrc": "13066:60:11",
																"nodeType": "YulFunctionCall",
																"src": "13066:60:11"
															},
															"nativeSrc": "13066:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "13066:60:11"
														},
														{
															"nativeSrc": "13135:27:11",
															"nodeType": "YulAssignment",
															"src": "13135:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13147:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13147:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13158:3:11",
																		"nodeType": "YulLiteral",
																		"src": "13158:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13143:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13143:3:11"
																},
																"nativeSrc": "13143:19:11",
																"nodeType": "YulFunctionCall",
																"src": "13143:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13135:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13135:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0e4fa644555aceecc86bc3c42ad69ec29856b55b5e916527214a8175faefbe49__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12742:426:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12893:9:11",
														"nodeType": "YulTypedName",
														"src": "12893:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12907:4:11",
														"nodeType": "YulTypedName",
														"src": "12907:4:11",
														"type": ""
													}
												],
												"src": "12742:426:11"
											},
											{
												"body": {
													"nativeSrc": "13460:393:11",
													"nodeType": "YulBlock",
													"src": "13460:393:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13477:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13477:3:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "13482:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13482:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13470:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13470:6:11"
																},
																"nativeSrc": "13470:19:11",
																"nodeType": "YulFunctionCall",
																"src": "13470:19:11"
															},
															"nativeSrc": "13470:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "13470:19:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "13509:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "13509:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13514:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13514:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13505:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13505:3:11"
																		},
																		"nativeSrc": "13505:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13505:12:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "13519:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13519:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13498:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13498:6:11"
																},
																"nativeSrc": "13498:28:11",
																"nodeType": "YulFunctionCall",
																"src": "13498:28:11"
															},
															"nativeSrc": "13498:28:11",
															"nodeType": "YulExpressionStatement",
															"src": "13498:28:11"
														},
														{
															"nativeSrc": "13535:41:11",
															"nodeType": "YulVariableDeclaration",
															"src": "13535:41:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13549:26:11",
																		"nodeType": "YulLiteral",
																		"src": "13549:26:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "13545:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13545:3:11"
																},
																"nativeSrc": "13545:31:11",
																"nodeType": "YulFunctionCall",
																"src": "13545:31:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "13539:2:11",
																	"nodeType": "YulTypedName",
																	"src": "13539:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "13596:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "13596:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13601:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13601:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13592:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13592:3:11"
																		},
																		"nativeSrc": "13592:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13592:12:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "13614:2:11",
																						"nodeType": "YulLiteral",
																						"src": "13614:2:11",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value2",
																						"nativeSrc": "13618:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "13618:6:11"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "13610:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "13610:3:11"
																				},
																				"nativeSrc": "13610:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13610:15:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "13627:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "13627:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13606:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13606:3:11"
																		},
																		"nativeSrc": "13606:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13606:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13585:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13585:6:11"
																},
																"nativeSrc": "13585:46:11",
																"nodeType": "YulFunctionCall",
																"src": "13585:46:11"
															},
															"nativeSrc": "13585:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "13585:46:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "13651:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "13651:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13656:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13656:2:11",
																				"type": "",
																				"value": "84"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13647:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13647:3:11"
																		},
																		"nativeSrc": "13647:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13647:12:11"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "13661:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13661:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13640:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13640:6:11"
																},
																"nativeSrc": "13640:28:11",
																"nodeType": "YulFunctionCall",
																"src": "13640:28:11"
															},
															"nativeSrc": "13640:28:11",
															"nodeType": "YulExpressionStatement",
															"src": "13640:28:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "13688:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "13688:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13693:3:11",
																				"nodeType": "YulLiteral",
																				"src": "13693:3:11",
																				"type": "",
																				"value": "116"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13684:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13684:3:11"
																		},
																		"nativeSrc": "13684:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13684:13:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "13707:2:11",
																						"nodeType": "YulLiteral",
																						"src": "13707:2:11",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value4",
																						"nativeSrc": "13711:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "13711:6:11"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "13703:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "13703:3:11"
																				},
																				"nativeSrc": "13703:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13703:15:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "13720:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "13720:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13699:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13699:3:11"
																		},
																		"nativeSrc": "13699:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13699:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13677:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13677:6:11"
																},
																"nativeSrc": "13677:47:11",
																"nodeType": "YulFunctionCall",
																"src": "13677:47:11"
															},
															"nativeSrc": "13677:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "13677:47:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "13744:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "13744:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13749:3:11",
																				"nodeType": "YulLiteral",
																				"src": "13749:3:11",
																				"type": "",
																				"value": "136"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13740:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13740:3:11"
																		},
																		"nativeSrc": "13740:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13740:13:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "13763:2:11",
																						"nodeType": "YulLiteral",
																						"src": "13763:2:11",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value5",
																						"nativeSrc": "13767:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "13767:6:11"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "13759:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "13759:3:11"
																				},
																				"nativeSrc": "13759:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13759:15:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "13776:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "13776:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13755:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13755:3:11"
																		},
																		"nativeSrc": "13755:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13755:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13733:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13733:6:11"
																},
																"nativeSrc": "13733:47:11",
																"nodeType": "YulFunctionCall",
																"src": "13733:47:11"
															},
															"nativeSrc": "13733:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "13733:47:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "13800:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "13800:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13805:3:11",
																				"nodeType": "YulLiteral",
																				"src": "13805:3:11",
																				"type": "",
																				"value": "156"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13796:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13796:3:11"
																		},
																		"nativeSrc": "13796:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13796:13:11"
																	},
																	{
																		"name": "value6",
																		"nativeSrc": "13811:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13811:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13789:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13789:6:11"
																},
																"nativeSrc": "13789:29:11",
																"nodeType": "YulFunctionCall",
																"src": "13789:29:11"
															},
															"nativeSrc": "13789:29:11",
															"nodeType": "YulExpressionStatement",
															"src": "13789:29:11"
														},
														{
															"nativeSrc": "13827:20:11",
															"nodeType": "YulAssignment",
															"src": "13827:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13838:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13838:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13843:3:11",
																		"nodeType": "YulLiteral",
																		"src": "13843:3:11",
																		"type": "",
																		"value": "188"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13834:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13834:3:11"
																},
																"nativeSrc": "13834:13:11",
																"nodeType": "YulFunctionCall",
																"src": "13834:13:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13827:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13827:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_uint256_t_address_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_uint256_t_address_t_uint256_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13173:680:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13388:3:11",
														"nodeType": "YulTypedName",
														"src": "13388:3:11",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "13393:6:11",
														"nodeType": "YulTypedName",
														"src": "13393:6:11",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "13401:6:11",
														"nodeType": "YulTypedName",
														"src": "13401:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "13409:6:11",
														"nodeType": "YulTypedName",
														"src": "13409:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13417:6:11",
														"nodeType": "YulTypedName",
														"src": "13417:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13425:6:11",
														"nodeType": "YulTypedName",
														"src": "13425:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13433:6:11",
														"nodeType": "YulTypedName",
														"src": "13433:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13441:6:11",
														"nodeType": "YulTypedName",
														"src": "13441:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13452:3:11",
														"nodeType": "YulTypedName",
														"src": "13452:3:11",
														"type": ""
													}
												],
												"src": "13173:680:11"
											},
											{
												"body": {
													"nativeSrc": "13987:145:11",
													"nodeType": "YulBlock",
													"src": "13987:145:11",
													"statements": [
														{
															"nativeSrc": "13997:26:11",
															"nodeType": "YulAssignment",
															"src": "13997:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14009:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14009:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14020:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14020:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14005:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14005:3:11"
																},
																"nativeSrc": "14005:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14005:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13997:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13997:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14039:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14039:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14054:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14054:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14070:3:11",
																								"nodeType": "YulLiteral",
																								"src": "14070:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "14075:1:11",
																								"nodeType": "YulLiteral",
																								"src": "14075:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "14066:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "14066:3:11"
																						},
																						"nativeSrc": "14066:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "14066:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14079:1:11",
																						"nodeType": "YulLiteral",
																						"src": "14079:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "14062:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "14062:3:11"
																				},
																				"nativeSrc": "14062:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "14062:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14050:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14050:3:11"
																		},
																		"nativeSrc": "14050:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14050:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14032:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14032:6:11"
																},
																"nativeSrc": "14032:51:11",
																"nodeType": "YulFunctionCall",
																"src": "14032:51:11"
															},
															"nativeSrc": "14032:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "14032:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14103:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14103:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14114:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14114:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14099:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14099:3:11"
																		},
																		"nativeSrc": "14099:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14099:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "14119:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14119:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14092:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14092:6:11"
																},
																"nativeSrc": "14092:34:11",
																"nodeType": "YulFunctionCall",
																"src": "14092:34:11"
															},
															"nativeSrc": "14092:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "14092:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13858:274:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13948:9:11",
														"nodeType": "YulTypedName",
														"src": "13948:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13959:6:11",
														"nodeType": "YulTypedName",
														"src": "13959:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13967:6:11",
														"nodeType": "YulTypedName",
														"src": "13967:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13978:4:11",
														"nodeType": "YulTypedName",
														"src": "13978:4:11",
														"type": ""
													}
												],
												"src": "13858:274:11"
											},
											{
												"body": {
													"nativeSrc": "14311:173:11",
													"nodeType": "YulBlock",
													"src": "14311:173:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14328:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14328:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14339:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14339:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14321:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14321:6:11"
																},
																"nativeSrc": "14321:21:11",
																"nodeType": "YulFunctionCall",
																"src": "14321:21:11"
															},
															"nativeSrc": "14321:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "14321:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14362:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14362:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14373:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14373:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14358:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14358:3:11"
																		},
																		"nativeSrc": "14358:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14358:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14378:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14378:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14351:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14351:6:11"
																},
																"nativeSrc": "14351:30:11",
																"nodeType": "YulFunctionCall",
																"src": "14351:30:11"
															},
															"nativeSrc": "14351:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "14351:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14401:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14401:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14412:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14412:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14397:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14397:3:11"
																		},
																		"nativeSrc": "14397:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14397:18:11"
																	},
																	{
																		"hexValue": "4661696c656420746f207061796f757420746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "14417:25:11",
																		"nodeType": "YulLiteral",
																		"src": "14417:25:11",
																		"type": "",
																		"value": "Failed to payout tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14390:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14390:6:11"
																},
																"nativeSrc": "14390:53:11",
																"nodeType": "YulFunctionCall",
																"src": "14390:53:11"
															},
															"nativeSrc": "14390:53:11",
															"nodeType": "YulExpressionStatement",
															"src": "14390:53:11"
														},
														{
															"nativeSrc": "14452:26:11",
															"nodeType": "YulAssignment",
															"src": "14452:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14464:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14464:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14475:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14475:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14460:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14460:3:11"
																},
																"nativeSrc": "14460:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14460:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14452:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14452:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0784b270c7abab6ddd6bc02e668ead28238c8eafa86da10a4828b88780f16d0a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14137:347:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14288:9:11",
														"nodeType": "YulTypedName",
														"src": "14288:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14302:4:11",
														"nodeType": "YulTypedName",
														"src": "14302:4:11",
														"type": ""
													}
												],
												"src": "14137:347:11"
											},
											{
												"body": {
													"nativeSrc": "14663:166:11",
													"nodeType": "YulBlock",
													"src": "14663:166:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14680:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14680:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14691:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14691:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14673:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14673:6:11"
																},
																"nativeSrc": "14673:21:11",
																"nodeType": "YulFunctionCall",
																"src": "14673:21:11"
															},
															"nativeSrc": "14673:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "14673:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14714:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14714:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14725:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14725:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14710:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14710:3:11"
																		},
																		"nativeSrc": "14710:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14710:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14730:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14730:2:11",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14703:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14703:6:11"
																},
																"nativeSrc": "14703:30:11",
																"nodeType": "YulFunctionCall",
																"src": "14703:30:11"
															},
															"nativeSrc": "14703:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "14703:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14753:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14753:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14764:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14764:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14749:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14749:3:11"
																		},
																		"nativeSrc": "14749:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14749:18:11"
																	},
																	{
																		"hexValue": "496e76616c6964205f746f6b656e4944",
																		"kind": "string",
																		"nativeSrc": "14769:18:11",
																		"nodeType": "YulLiteral",
																		"src": "14769:18:11",
																		"type": "",
																		"value": "Invalid _tokenID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14742:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14742:6:11"
																},
																"nativeSrc": "14742:46:11",
																"nodeType": "YulFunctionCall",
																"src": "14742:46:11"
															},
															"nativeSrc": "14742:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "14742:46:11"
														},
														{
															"nativeSrc": "14797:26:11",
															"nodeType": "YulAssignment",
															"src": "14797:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14809:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14809:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14820:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14820:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14805:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14805:3:11"
																},
																"nativeSrc": "14805:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14805:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14797:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14797:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_985b337fa2ec4100ef9944920998f9c5ef3f9d75b134cead835819dcecc21f86__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14489:340:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14640:9:11",
														"nodeType": "YulTypedName",
														"src": "14640:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14654:4:11",
														"nodeType": "YulTypedName",
														"src": "14654:4:11",
														"type": ""
													}
												],
												"src": "14489:340:11"
											},
											{
												"body": {
													"nativeSrc": "15009:211:11",
													"nodeType": "YulBlock",
													"src": "15009:211:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15026:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15026:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "15041:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15041:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15057:3:11",
																								"nodeType": "YulLiteral",
																								"src": "15057:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15062:1:11",
																								"nodeType": "YulLiteral",
																								"src": "15062:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "15053:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "15053:3:11"
																						},
																						"nativeSrc": "15053:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "15053:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15066:1:11",
																						"nodeType": "YulLiteral",
																						"src": "15066:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "15049:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "15049:3:11"
																				},
																				"nativeSrc": "15049:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "15049:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15037:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15037:3:11"
																		},
																		"nativeSrc": "15037:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15037:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15019:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15019:6:11"
																},
																"nativeSrc": "15019:51:11",
																"nodeType": "YulFunctionCall",
																"src": "15019:51:11"
															},
															"nativeSrc": "15019:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "15019:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15090:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15090:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15101:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15101:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15086:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15086:3:11"
																		},
																		"nativeSrc": "15086:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15086:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "15106:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15106:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15079:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15079:6:11"
																},
																"nativeSrc": "15079:34:11",
																"nodeType": "YulFunctionCall",
																"src": "15079:34:11"
															},
															"nativeSrc": "15079:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "15079:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15133:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15133:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15144:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15144:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15129:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15129:3:11"
																		},
																		"nativeSrc": "15129:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15129:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15149:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15149:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15122:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15122:6:11"
																},
																"nativeSrc": "15122:30:11",
																"nodeType": "YulFunctionCall",
																"src": "15122:30:11"
															},
															"nativeSrc": "15122:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "15122:30:11"
														},
														{
															"nativeSrc": "15161:53:11",
															"nodeType": "YulAssignment",
															"src": "15161:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15187:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15187:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15199:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15199:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15210:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15210:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15195:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15195:3:11"
																		},
																		"nativeSrc": "15195:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15195:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "15169:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "15169:17:11"
																},
																"nativeSrc": "15169:45:11",
																"nodeType": "YulFunctionCall",
																"src": "15169:45:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15161:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15161:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "14834:386:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14962:9:11",
														"nodeType": "YulTypedName",
														"src": "14962:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14973:6:11",
														"nodeType": "YulTypedName",
														"src": "14973:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14981:6:11",
														"nodeType": "YulTypedName",
														"src": "14981:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14989:6:11",
														"nodeType": "YulTypedName",
														"src": "14989:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15000:4:11",
														"nodeType": "YulTypedName",
														"src": "15000:4:11",
														"type": ""
													}
												],
												"src": "14834:386:11"
											},
											{
												"body": {
													"nativeSrc": "15422:272:11",
													"nodeType": "YulBlock",
													"src": "15422:272:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15439:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15439:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "15454:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15454:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15470:3:11",
																								"nodeType": "YulLiteral",
																								"src": "15470:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15475:1:11",
																								"nodeType": "YulLiteral",
																								"src": "15475:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "15466:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "15466:3:11"
																						},
																						"nativeSrc": "15466:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "15466:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15479:1:11",
																						"nodeType": "YulLiteral",
																						"src": "15479:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "15462:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "15462:3:11"
																				},
																				"nativeSrc": "15462:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "15462:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15450:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15450:3:11"
																		},
																		"nativeSrc": "15450:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15450:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15432:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15432:6:11"
																},
																"nativeSrc": "15432:51:11",
																"nodeType": "YulFunctionCall",
																"src": "15432:51:11"
															},
															"nativeSrc": "15432:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "15432:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15503:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15503:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15514:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15514:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15499:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15499:3:11"
																		},
																		"nativeSrc": "15499:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15499:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "15519:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15519:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15492:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15492:6:11"
																},
																"nativeSrc": "15492:34:11",
																"nodeType": "YulFunctionCall",
																"src": "15492:34:11"
															},
															"nativeSrc": "15492:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "15492:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15546:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15546:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15557:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15557:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15542:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15542:3:11"
																		},
																		"nativeSrc": "15542:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15542:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nativeSrc": "15576:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "15576:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15569:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "15569:6:11"
																				},
																				"nativeSrc": "15569:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "15569:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "15562:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "15562:6:11"
																		},
																		"nativeSrc": "15562:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15562:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15535:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15535:6:11"
																},
																"nativeSrc": "15535:50:11",
																"nodeType": "YulFunctionCall",
																"src": "15535:50:11"
															},
															"nativeSrc": "15535:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "15535:50:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15605:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15605:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15616:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15616:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15601:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15601:3:11"
																		},
																		"nativeSrc": "15601:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15601:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15621:3:11",
																		"nodeType": "YulLiteral",
																		"src": "15621:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15594:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15594:6:11"
																},
																"nativeSrc": "15594:31:11",
																"nodeType": "YulFunctionCall",
																"src": "15594:31:11"
															},
															"nativeSrc": "15594:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "15594:31:11"
														},
														{
															"nativeSrc": "15634:54:11",
															"nodeType": "YulAssignment",
															"src": "15634:54:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "15660:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15660:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15672:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15672:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15683:3:11",
																				"nodeType": "YulLiteral",
																				"src": "15683:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15668:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15668:3:11"
																		},
																		"nativeSrc": "15668:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15668:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "15642:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "15642:17:11"
																},
																"nativeSrc": "15642:46:11",
																"nodeType": "YulFunctionCall",
																"src": "15642:46:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15634:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15634:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bool_t_bytes_memory_ptr__to_t_address_t_uint256_t_bool_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "15225:469:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15367:9:11",
														"nodeType": "YulTypedName",
														"src": "15367:9:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15378:6:11",
														"nodeType": "YulTypedName",
														"src": "15378:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15386:6:11",
														"nodeType": "YulTypedName",
														"src": "15386:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15394:6:11",
														"nodeType": "YulTypedName",
														"src": "15394:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15402:6:11",
														"nodeType": "YulTypedName",
														"src": "15402:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15413:4:11",
														"nodeType": "YulTypedName",
														"src": "15413:4:11",
														"type": ""
													}
												],
												"src": "15225:469:11"
											},
											{
												"body": {
													"nativeSrc": "15828:145:11",
													"nodeType": "YulBlock",
													"src": "15828:145:11",
													"statements": [
														{
															"nativeSrc": "15838:26:11",
															"nodeType": "YulAssignment",
															"src": "15838:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15850:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15850:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15861:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15861:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15846:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15846:3:11"
																},
																"nativeSrc": "15846:18:11",
																"nodeType": "YulFunctionCall",
																"src": "15846:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15838:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15838:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15880:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15880:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "15895:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15895:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15911:3:11",
																								"nodeType": "YulLiteral",
																								"src": "15911:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15916:1:11",
																								"nodeType": "YulLiteral",
																								"src": "15916:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "15907:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "15907:3:11"
																						},
																						"nativeSrc": "15907:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "15907:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15920:1:11",
																						"nodeType": "YulLiteral",
																						"src": "15920:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "15903:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "15903:3:11"
																				},
																				"nativeSrc": "15903:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "15903:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15891:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15891:3:11"
																		},
																		"nativeSrc": "15891:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15891:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15873:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15873:6:11"
																},
																"nativeSrc": "15873:51:11",
																"nodeType": "YulFunctionCall",
																"src": "15873:51:11"
															},
															"nativeSrc": "15873:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "15873:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15944:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15944:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15955:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15955:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15940:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15940:3:11"
																		},
																		"nativeSrc": "15940:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15940:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "15960:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15960:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15933:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15933:6:11"
																},
																"nativeSrc": "15933:34:11",
																"nodeType": "YulFunctionCall",
																"src": "15933:34:11"
															},
															"nativeSrc": "15933:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "15933:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "15699:274:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15789:9:11",
														"nodeType": "YulTypedName",
														"src": "15789:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15800:6:11",
														"nodeType": "YulTypedName",
														"src": "15800:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15808:6:11",
														"nodeType": "YulTypedName",
														"src": "15808:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15819:4:11",
														"nodeType": "YulTypedName",
														"src": "15819:4:11",
														"type": ""
													}
												],
												"src": "15699:274:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_struct$_TokenTransferBase_$1071_memory_ptr_t_uint256__to_t_struct$_TokenTransferBase_$1071_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        let memberValue0 := mload(add(value0, 0x40))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 0x40), and(memberValue0, _1))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), and(mload(add(value0, 0x80)), _1))\n        mstore(add(headStart, 0xa0), and(mload(add(value0, 0xa0)), _1))\n        mstore(add(headStart, 192), value1)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_contract$_ITokenFactory_$1207(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xe0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_enum_TokenType(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_struct$_TokenAttestation_$1058_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 0xe0) { revert(0, 0) }\n        let value := allocate_memory()\n        mstore(value, abi_decode_address(_2))\n        mstore(add(value, 32), calldataload(add(_2, 32)))\n        mstore(add(value, 64), abi_decode_enum_TokenType(add(_2, 64)))\n        mstore(add(value, 96), abi_decode_uint8(add(_2, 96)))\n        let offset_1 := calldataload(add(_2, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value, 128), abi_decode_string(add(_2, offset_1), dataEnd))\n        let offset_2 := calldataload(add(_2, 160))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value, 160), abi_decode_string(add(_2, offset_2), dataEnd))\n        mstore(add(value, 192), abi_decode_address(add(_2, 192)))\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n    }\n    function abi_decode_tuple_t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n    }\n    function abi_decode_tuple_t_uint256t_addresst_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_enum$_TokenType_$1042_t_uint8_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_address_t_uint256_t_uint8_t_uint8_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        if iszero(lt(value2, 2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xff))\n        mstore(add(headStart, 128), 224)\n        let tail_1 := abi_encode_string(value4, add(headStart, 224))\n        mstore(add(headStart, 160), sub(tail_1, headStart))\n        tail := abi_encode_string(value5, tail_1)\n        mstore(add(headStart, 192), and(value6, _1))\n    }\n    function abi_encode_tuple_t_contract$_ITokenFactory_$1207__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_d817c94589f2fd2490c47157dd34f129e87dd08fd49c4442e508a9a375e06bb1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Can't set LSP Factory to the zer\")\n        mstore(add(headStart, 96), \"o address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0e4fa644555aceecc86bc3c42ad69ec29856b55b5e916527214a8175faefbe49__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 62)\n        mstore(add(headStart, 64), \"Transfer failed. Make sure bridg\")\n        mstore(add(headStart, 96), \"e is approved to spend tokens.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_address_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_uint256_t_address_t_uint256_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value6, value5, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(add(pos, 64), and(shl(96, value2), _1))\n        mstore(add(pos, 84), value3)\n        mstore(add(pos, 116), and(shl(96, value4), _1))\n        mstore(add(pos, 136), and(shl(96, value5), _1))\n        mstore(add(pos, 156), value6)\n        end := add(pos, 188)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_0784b270c7abab6ddd6bc02e668ead28238c8eafa86da10a4828b88780f16d0a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Failed to payout tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_985b337fa2ec4100ef9944920998f9c5ef3f9d75b134cead835819dcecc21f86__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Invalid _tokenID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_string(value2, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bool_t_bytes_memory_ptr__to_t_address_t_uint256_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610132575f3560e01c806362a00971116100b45780639a67e7f9116100795780639a67e7f91461035b578063a217fddf1461036e578063d547741f14610375578063e77772fe14610388578063eac213ce14610273578063f86da94514610273575f80fd5b806362a00971146102d557806363a4e95f146102e85780637f7b0109146102fb57806391d1485414610321578063926d7d7f14610334575f80fd5b806331ba1648116100fa57806331ba16481461028857806333b15aad1461029b57806336568abe146102ae57806339578521146102c15780634c597f8a14610273575f80fd5b806301ffc9a7146101365780631385c6701461015e578063248a9ca3146102305780632f2ff15d146102605780632f73a9f814610275575b5f80fd5b61014961014436600461130b565b6103b3565b60405190151581526020015b60405180910390f35b6101d561016c366004611339565b600260208181525f928352604092839020835160c08101855281548152600182015492810192909252918201546001600160a01b039081169382019390935260038201546060820152600482015483166080820152600582015490921660a08301526006015482565b604080518351815260208085015190820152838201516001600160a01b03908116928201929092526060808501519082015260808085015183169082015260a0938401519091169281019290925260c082015260e001610155565b61025261023e366004611339565b5f9081526020819052604090206001015490565b604051908152602001610155565b61027361026e366004611374565b6103e9565b005b6102736102833660046113a2565b61040d565b6102736102963660046114a1565b6104a5565b6102736102a936600461157a565b61072c565b6102736102bc366004611374565b61097f565b6102736102cf36600461157a565b50505050565b6102736102e33660046115c1565b6109b7565b6102736102f6366004611600565b610aa2565b61030e610309366004611339565b610d48565b604051610155979695949392919061168c565b61014961032f366004611374565b610ead565b6102527fe2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc481565b610273610369366004611600565b610ed5565b6102525f81565b610273610383366004611374565b6111a5565b60035461039b906001600160a01b031681565b6040516001600160a01b039091168152602001610155565b5f6001600160e01b03198216637965db0b60e01b14806103e357506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f82815260208190526040902060010154610403816111c9565b6102cf83836111d6565b6104165f6111c9565b6001600160a01b0381166104835760405162461bcd60e51b815260206004820152602960248201527f43616e277420736574204c535020466163746f727920746f20746865207a65726044820152686f206164647265737360b81b60648201526084015b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6104ae5f6111c9565b5f80826040015160018111156104c6576104c6611635565b0361054c5760035460a08301516080840151604051638fe5980760e01b81526001600160a01b0390931692638fe598079261050592909160040161170b565b6020604051808303815f875af1158015610521573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105459190611738565b90506105c9565b60035460a0830151608084015160405163c2c2b31f60e01b81526001600160a01b039093169263c2c2b31f9261058692909160040161170b565b6020604051808303815f875af11580156105a2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c69190611738565b90505b6001600160a01b03811660c083015281516020808401516040515f9361060f939092910160609290921b6bffffffffffffffffffffffff19168252601482015260340190565b60408051808303601f1901815291815281516020928301205f818152600180855290839020875181546001600160a01b0319166001600160a01b039091161781559387015184820155918601516002840180549295508794939192909160ff1990911690838181111561068457610684611635565b0217905550606082015160028201805460ff9092166101000261ff0019909216919091179055608082015160038201906106be90826117d6565b5060a082015160048201906106d390826117d6565b5060c09190910151600590910180546001600160a01b0319166001600160a01b0390921691909117905560405181907fa755bee123b19cfd95f30d3bed835ac8dab8a08f893508aa86140d1b66c77e13905f90a2505050565b6040516323b872dd60e01b8152336004820152306024820152604481018490525f906001600160a01b038616906323b872dd906064016020604051808303815f875af115801561077e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a29190611896565b9050806108175760405162461bcd60e51b815260206004820152603e60248201527f5472616e73666572206661696c65642e204d616b65207375726520627269646760448201527f6520697320617070726f76656420746f207370656e6420746f6b656e732e0000606482015260840161047a565b604080516101008101825242818301818152466060808501829052336080860181905260a086018a90526001600160a01b0389811660c08801528c1660e087015292855260208086018b9052865190810194909452948301526bffffffffffffffffffffffff1990841b8116828501526074820187905285841b811660948301529288901b90921660a883015260bc8201869052905f9060dc0160408051808303601f1901815282825280516020918201205f81815260028084528482208851805182558086015160018301559586015191810180546001600160a01b03199081166001600160a01b0394851617909155606087015160038301556080870151600483018054831691851691909117905560a0909601516005820180549097169216919091179094559186015160069093019290925590925082917f911623f001224d5d44bba15e09f9764c38794e74d052085b3e24c04e05b7aed79190a250505050505050565b6001600160a01b03811633146109a85760405163334bd91960e11b815260040160405180910390fd5b6109b28282611265565b505050565b6109e07fe2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc46111c9565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018590525f919083169063a9059cbb906044016020604051808303815f875af1158015610a2f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a539190611896565b9050806102cf5760405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f207061796f757420746f6b656e73000000000000000000604482015260640161047a565b5f818152600160208181526040808420815160e08101835281546001600160a01b0316815281850154938101939093526002810154929390929184019160ff1690811115610af257610af2611635565b6001811115610b0357610b03611635565b81526002820154610100900460ff166020820152600382018054604090920191610b2c90611753565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5890611753565b8015610ba35780601f10610b7a57610100808354040283529160200191610ba3565b820191905f5260205f20905b815481529060010190602001808311610b8657829003601f168201915b50505050508152602001600482018054610bbc90611753565b80601f0160208091040260200160405190810160405280929190818152602001828054610be890611753565b8015610c335780601f10610c0a57610100808354040283529160200191610c33565b820191905f5260205f20905b815481529060010190602001808311610c1657829003601f168201915b5050509183525050600591909101546001600160a01b03908116602090920191909152815191925016610c9b5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a590817dd1bdad95b925160821b604482015260640161047a565b60c0810151604080515f815260208101918290526344d1718760e01b9091526001600160a01b03909116906344d1718790610cdd9033908890602481016118b5565b5f604051808303815f87803b158015610cf4575f80fd5b505af1158015610d06573d5f803e3d5ffd5b5050505081836001600160a01b0316857f80c5d77a092b389b97d2b4a5bc721315e540c267567756df827f2edab66facba60405160405180910390a450505050565b600160208190525f918252604090912080549181015460028201546003830180546001600160a01b0390951694929360ff808416946101009094041692909190610d9190611753565b80601f0160208091040260200160405190810160405280929190818152602001828054610dbd90611753565b8015610e085780601f10610ddf57610100808354040283529160200191610e08565b820191905f5260205f20905b815481529060010190602001808311610deb57829003601f168201915b505050505090806004018054610e1d90611753565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4990611753565b8015610e945780601f10610e6b57610100808354040283529160200191610e94565b820191905f5260205f20905b815481529060010190602001808311610e7757829003601f168201915b505050600590930154919250506001600160a01b031687565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b610efe7fe2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc46111c9565b5f818152600160208181526040808420815160e08101835281546001600160a01b0316815281850154938101939093526002810154929390929184019160ff1690811115610f4e57610f4e611635565b6001811115610f5f57610f5f611635565b81526002820154610100900460ff166020820152600382018054604090920191610f8890611753565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb490611753565b8015610fff5780601f10610fd657610100808354040283529160200191610fff565b820191905f5260205f20905b815481529060010190602001808311610fe257829003601f168201915b5050505050815260200160048201805461101890611753565b80601f016020809104026020016040519081016040528092919081815260200182805461104490611753565b801561108f5780601f106110665761010080835404028352916020019161108f565b820191905f5260205f20905b81548152906001019060200180831161107257829003601f168201915b5050509183525050600591909101546001600160a01b039081166020909201919091528151919250166110f75760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a590817dd1bdad95b925160821b604482015260640161047a565b60c0810151604080515f80825260208201928390526303ac06c960e51b9092526001600160a01b0390921691637580d9209161113a9187918991602481016118db565b5f604051808303815f87803b158015611151575f80fd5b505af1158015611163573d5f803e3d5ffd5b5050505081836001600160a01b0316857f7aebc2282a0784072e43f12d40afc658f82fda3d0e830865d50dd7b0196df7f160405160405180910390a450505050565b5f828152602081905260409020600101546111bf816111c9565b6102cf8383611265565b6111d381336112ce565b50565b5f6111e18383610ead565b61125e575f838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556112163390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016103e3565b505f6103e3565b5f6112708383610ead565b1561125e575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016103e3565b6112d88282610ead565b6113075760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161047a565b5050565b5f6020828403121561131b575f80fd5b81356001600160e01b031981168114611332575f80fd5b9392505050565b5f60208284031215611349575f80fd5b5035919050565b6001600160a01b03811681146111d3575f80fd5b803561136f81611350565b919050565b5f8060408385031215611385575f80fd5b82359150602083013561139781611350565b809150509250929050565b5f602082840312156113b2575f80fd5b813561133281611350565b634e487b7160e01b5f52604160045260245ffd5b60405160e0810167ffffffffffffffff811182821017156113f4576113f46113bd565b60405290565b80356002811061136f575f80fd5b803560ff8116811461136f575f80fd5b5f82601f830112611427575f80fd5b813567ffffffffffffffff80821115611442576114426113bd565b604051601f8301601f19908116603f0116810190828211818310171561146a5761146a6113bd565b81604052838152866020858801011115611482575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f602082840312156114b1575f80fd5b813567ffffffffffffffff808211156114c8575f80fd5b9083019060e082860312156114db575f80fd5b6114e36113d1565b6114ec83611364565b815260208301356020820152611504604084016113fa565b604082015261151560608401611408565b606082015260808301358281111561152b575f80fd5b61153787828601611418565b60808301525060a08301358281111561154e575f80fd5b61155a87828601611418565b60a08301525061156c60c08401611364565b60c082015295945050505050565b5f805f806080858703121561158d575f80fd5b843561159881611350565b9350602085013592506040850135915060608501356115b681611350565b939692955090935050565b5f805f606084860312156115d3575f80fd5b8335925060208401356115e581611350565b915060408401356115f581611350565b809150509250925092565b5f805f60608486031215611612575f80fd5b83359250602084013561162481611350565b929592945050506040919091013590565b634e487b7160e01b5f52602160045260245ffd5b5f81518084525f5b8181101561166d57602081850181015186830182015201611651565b505f602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038881168252602082018890525f90600288106116be57634e487b7160e01b5f52602160045260245ffd5b87604084015260ff8716606084015260e060808401526116e160e0840187611649565b83810360a08501526116f38187611649565b92505080841660c08401525098975050505050505050565b604081525f61171d6040830185611649565b828103602084015261172f8185611649565b95945050505050565b5f60208284031215611748575f80fd5b815161133281611350565b600181811c9082168061176757607f821691505b60208210810361178557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156109b257805f5260205f20601f840160051c810160208510156117b05750805b601f840160051c820191505b818110156117cf575f81556001016117bc565b5050505050565b815167ffffffffffffffff8111156117f0576117f06113bd565b611804816117fe8454611753565b8461178b565b602080601f831160018114611837575f84156118205750858301515b5f19600386901b1c1916600185901b17855561188e565b5f85815260208120601f198616915b8281101561186557888601518255948401946001909101908401611846565b508582101561188257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f602082840312156118a6575f80fd5b81518015158114611332575f80fd5b60018060a01b0384168152826020820152606060408201525f61172f6060830184611649565b60018060a01b03851681528360208201528215156040820152608060608201525f6119096080830184611649565b969550505050505056fea26469706673582212205d50a3cb6be2bfd34fa0d0a6d24a244216ef6104de27e166abcdc003a835a13164736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x132 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x62A00971 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0x9A67E7F9 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0x9A67E7F9 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xE77772FE EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0xEAC213CE EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xF86DA945 EQ PUSH2 0x273 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x62A00971 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x63A4E95F EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x7F7B0109 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x926D7D7F EQ PUSH2 0x334 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x31BA1648 GT PUSH2 0xFA JUMPI DUP1 PUSH4 0x31BA1648 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x33B15AAD EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x39578521 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x4C597F8A EQ PUSH2 0x273 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x1385C670 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x2F73A9F8 EQ PUSH2 0x275 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x149 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x130B JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x1339 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xC0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD DUP4 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD SWAP1 DUP3 ADD MSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP1 DUP6 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP6 ADD MLOAD DUP4 AND SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 SWAP4 DUP5 ADD MLOAD SWAP1 SWAP2 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x155 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x1339 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x155 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A2 JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST PUSH2 0x273 PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x157A JUMP JUMPDEST PUSH2 0x72C JUMP JUMPDEST PUSH2 0x273 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH2 0x273 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x157A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x273 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0x9B7 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1600 JUMP JUMPDEST PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0x30E PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x149 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0xEAD JUMP JUMPDEST PUSH2 0x252 PUSH32 0xE2B7FB3B832174769106DAEBCFD6D1970523240DDA11281102DB9363B83B0DC4 DUP2 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x1600 JUMP JUMPDEST PUSH2 0xED5 JUMP JUMPDEST PUSH2 0x252 PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x11A5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x39B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x155 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3E3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x403 DUP2 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x2CF DUP4 DUP4 PUSH2 0x11D6 JUMP JUMPDEST PUSH2 0x416 PUSH0 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420736574204C535020466163746F727920746F20746865207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6F2061646472657373 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4AE PUSH0 PUSH2 0x11C9 JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4C6 JUMPI PUSH2 0x4C6 PUSH2 0x1635 JUMP JUMPDEST SUB PUSH2 0x54C JUMPI PUSH1 0x3 SLOAD PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x8FE59807 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0x8FE59807 SWAP3 PUSH2 0x505 SWAP3 SWAP1 SWAP2 PUSH1 0x4 ADD PUSH2 0x170B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x521 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x545 SWAP2 SWAP1 PUSH2 0x1738 JUMP JUMPDEST SWAP1 POP PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xC2C2B31F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0xC2C2B31F SWAP3 PUSH2 0x586 SWAP3 SWAP1 SWAP2 PUSH1 0x4 ADD PUSH2 0x170B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x1738 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xC0 DUP4 ADD MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH0 SWAP4 PUSH2 0x60F SWAP4 SWAP1 SWAP3 SWAP2 ADD PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 MSTORE PUSH1 0x14 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP8 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP4 DUP8 ADD MLOAD DUP5 DUP3 ADD SSTORE SWAP2 DUP7 ADD MLOAD PUSH1 0x2 DUP5 ADD DUP1 SLOAD SWAP3 SWAP6 POP DUP8 SWAP5 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x684 JUMPI PUSH2 0x684 PUSH2 0x1635 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0x6BE SWAP1 DUP3 PUSH2 0x17D6 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SWAP1 PUSH2 0x6D3 SWAP1 DUP3 PUSH2 0x17D6 JUMP JUMPDEST POP PUSH1 0xC0 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x5 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xA755BEE123B19CFD95F30D3BED835AC8DAB8A08F893508AA86140D1B66C77E13 SWAP1 PUSH0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x77E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65642E204D616B652073757265206272696467 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6520697320617070726F76656420746F207370656E6420746F6B656E732E0000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x47A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE TIMESTAMP DUP2 DUP4 ADD DUP2 DUP2 MSTORE CHAINID PUSH1 0x60 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE CALLER PUSH1 0x80 DUP7 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP7 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0xC0 DUP9 ADD MSTORE DUP13 AND PUSH1 0xE0 DUP8 ADD MSTORE SWAP3 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD DUP12 SWAP1 MSTORE DUP7 MLOAD SWAP1 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP5 DUP4 ADD MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP5 SHL DUP2 AND DUP3 DUP6 ADD MSTORE PUSH1 0x74 DUP3 ADD DUP8 SWAP1 MSTORE DUP6 DUP5 SHL DUP2 AND PUSH1 0x94 DUP4 ADD MSTORE SWAP3 DUP9 SWAP1 SHL SWAP1 SWAP3 AND PUSH1 0xA8 DUP4 ADD MSTORE PUSH1 0xBC DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 PUSH0 SWAP1 PUSH1 0xDC ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 DUP5 MSTORE DUP5 DUP3 KECCAK256 DUP9 MLOAD DUP1 MLOAD DUP3 SSTORE DUP1 DUP7 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE SWAP6 DUP7 ADD MLOAD SWAP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0x4 DUP4 ADD DUP1 SLOAD DUP4 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA0 SWAP1 SWAP7 ADD MLOAD PUSH1 0x5 DUP3 ADD DUP1 SLOAD SWAP1 SWAP8 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP5 SSTORE SWAP2 DUP7 ADD MLOAD PUSH1 0x6 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SWAP3 POP DUP3 SWAP2 PUSH32 0x911623F001224D5D44BBA15E09F9764C38794E74D052085B3E24C04E05B7AED7 SWAP2 SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B2 DUP3 DUP3 PUSH2 0x1265 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9E0 PUSH32 0xE2B7FB3B832174769106DAEBCFD6D1970523240DDA11281102DB9363B83B0DC4 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA53 SWAP2 SWAP1 PUSH2 0x1896 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F207061796F757420746F6B656E73000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE DUP2 DUP6 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xAF2 JUMPI PUSH2 0xAF2 PUSH2 0x1635 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB03 JUMPI PUSH2 0xB03 PUSH2 0x1635 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH2 0xB2C SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB58 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBA3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB7A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBA3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB86 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH2 0xBBC SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBE8 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC33 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC0A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC33 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC16 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x5 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP2 SWAP3 POP AND PUSH2 0xC9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A590817DD1BDAD95B9251 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47A JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH4 0x44D17187 PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x44D17187 SWAP1 PUSH2 0xCDD SWAP1 CALLER SWAP1 DUP9 SWAP1 PUSH1 0x24 DUP2 ADD PUSH2 0x18B5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD06 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x80C5D77A092B389B97D2B4A5BC721315E540C267567756DF827F2EDAB66FACBA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP3 SWAP4 PUSH1 0xFF DUP1 DUP5 AND SWAP5 PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xD91 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDBD SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE08 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDDF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE08 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDEB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xE1D SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE49 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE94 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE6B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE94 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE77 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x5 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xEFE PUSH32 0xE2B7FB3B832174769106DAEBCFD6D1970523240DDA11281102DB9363B83B0DC4 PUSH2 0x11C9 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE DUP2 DUP6 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xF4E JUMPI PUSH2 0xF4E PUSH2 0x1635 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF5F JUMPI PUSH2 0xF5F PUSH2 0x1635 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH2 0xF88 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFB4 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFFF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFD6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFFF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFE2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH2 0x1018 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1044 SWAP1 PUSH2 0x1753 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x108F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1066 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x108F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1072 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x5 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP2 SWAP3 POP AND PUSH2 0x10F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A590817DD1BDAD95B9251 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x47A JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 DUP4 SWAP1 MSTORE PUSH4 0x3AC06C9 PUSH1 0xE5 SHL SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x7580D920 SWAP2 PUSH2 0x113A SWAP2 DUP8 SWAP2 DUP10 SWAP2 PUSH1 0x24 DUP2 ADD PUSH2 0x18DB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1151 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1163 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x7AEBC2282A0784072E43F12D40AFC658F82FDA3D0E830865D50DD7B0196DF7F1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x11BF DUP2 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x2CF DUP4 DUP4 PUSH2 0x1265 JUMP JUMPDEST PUSH2 0x11D3 DUP2 CALLER PUSH2 0x12CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x11E1 DUP4 DUP4 PUSH2 0xEAD JUMP JUMPDEST PUSH2 0x125E JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1216 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x3E3 JUMP JUMPDEST POP PUSH0 PUSH2 0x3E3 JUMP JUMPDEST PUSH0 PUSH2 0x1270 DUP4 DUP4 PUSH2 0xEAD JUMP JUMPDEST ISZERO PUSH2 0x125E JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x3E3 JUMP JUMPDEST PUSH2 0x12D8 DUP3 DUP3 PUSH2 0xEAD JUMP JUMPDEST PUSH2 0x1307 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x47A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x131B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1332 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1349 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x136F DUP2 PUSH2 0x1350 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1385 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1397 DUP2 PUSH2 0x1350 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1332 DUP2 PUSH2 0x1350 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x13F4 JUMPI PUSH2 0x13F4 PUSH2 0x13BD JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x136F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x136F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1427 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1442 JUMPI PUSH2 0x1442 PUSH2 0x13BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x146A JUMPI PUSH2 0x146A PUSH2 0x13BD JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1482 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x14C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0xE0 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x14DB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14E3 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x14EC DUP4 PUSH2 0x1364 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1504 PUSH1 0x40 DUP5 ADD PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1515 PUSH1 0x60 DUP5 ADD PUSH2 0x1408 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x152B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1537 DUP8 DUP3 DUP7 ADD PUSH2 0x1418 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x154E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x155A DUP8 DUP3 DUP7 ADD PUSH2 0x1418 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH2 0x156C PUSH1 0xC0 DUP5 ADD PUSH2 0x1364 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x158D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1598 DUP2 PUSH2 0x1350 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x15B6 DUP2 PUSH2 0x1350 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x15E5 DUP2 PUSH2 0x1350 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x15F5 DUP2 PUSH2 0x1350 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1612 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1624 DUP2 PUSH2 0x1350 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x166D JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1651 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP9 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x2 DUP9 LT PUSH2 0x16BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP8 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xFF DUP8 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xE0 PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x16E1 PUSH1 0xE0 DUP5 ADD DUP8 PUSH2 0x1649 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x16F3 DUP2 DUP8 PUSH2 0x1649 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP5 AND PUSH1 0xC0 DUP5 ADD MSTORE POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x171D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1649 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x172F DUP2 DUP6 PUSH2 0x1649 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1748 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1332 DUP2 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1767 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1785 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9B2 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x17B0 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17CF JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x17BC JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17F0 JUMPI PUSH2 0x17F0 PUSH2 0x13BD JUMP JUMPDEST PUSH2 0x1804 DUP2 PUSH2 0x17FE DUP5 SLOAD PUSH2 0x1753 JUMP JUMPDEST DUP5 PUSH2 0x178B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1837 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1820 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x188E JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1865 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1846 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1882 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1332 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x172F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP3 ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH0 PUSH2 0x1909 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1649 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D POP LOG3 0xCB PUSH12 0xE2BFD34FA0D0A6D24A244216 0xEF PUSH2 0x4DE 0x27 0xE1 PUSH7 0xABCDC003A835A1 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "350:4372:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:11;;463:22;445:41;;433:2;418:18;2565:202:0;;;;;;;;624:56:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;624:56:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;945:13:11;;927:32;;1015:4;1003:17;;;997:24;975:20;;;968:54;1057:17;;;1051:24;-1:-1:-1;;;;;1151:21:11;;;1129:20;;;1122:51;;;;1229:4;1217:17;;;1211:24;1189:20;;;1182:54;1296:4;1284:17;;;1278:24;1274:33;;1252:20;;;1245:63;1102:3;1356:17;;;1350:24;1346:33;;;1324:20;;;1317:63;;;;1411:3;1396:19;;1389:35;914:3;899:19;624:56:7;682:748:11;3810:120:0;;;;;;:::i;:::-;3875:7;3901:12;;;;;;;;;;:22;;;;3810:120;;;;1581:25:11;;;1569:2;1554:18;3810:120:0;1435:177:11;4226:136:0;;;;;;:::i;:::-;;:::i;:::-;;4502:218:7;;;;;;:::i;:::-;;:::i;1077:667::-;;;;;;:::i;:::-;;:::i;1750:1109::-;;;;;;:::i;:::-;;:::i;5328:245:0:-;;;;;;:::i;:::-;;:::i;2865:139:7:-;;;;;;:::i;:::-;4330:25:0::1;4226:136:::0;;;;4210:212:7;;;;;;:::i;:::-;;:::i;3010:497::-;;;;;;:::i;:::-;;:::i;509:58::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;2854:136:0:-;;;;;;:::i;:::-;;:::i;398:64:7:-;;437:25;398:64;;3590:533;;;;;;:::i;:::-;;:::i;2187:49:0:-;;2232:4;2187:49;;4642:138;;;;;;:::i;:::-;;:::i;735:33:7:-;;;;;-1:-1:-1;;;;;735:33:7;;;;;;-1:-1:-1;;;;;8128:32:11;;;8110:51;;8098:2;8083:18;735:33:7;7942:225:11;2565:202:0;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;861:40:5;;;2724:36:0;2666:94;2565:202;-1:-1:-1;;2565:202:0:o;4226:136::-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;4502:218:7:-:0;942:30;2232:4:0;942:10:7;:30::i;:::-;-1:-1:-1;;;;;4593:36:7;::::1;4585:90;;;::::0;-1:-1:-1;;;4585:90:7;;8374:2:11;4585:90:7::1;::::0;::::1;8356:21:11::0;8413:2;8393:18;;;8386:30;8452:34;8432:18;;;8425:62;-1:-1:-1;;;8503:18:11;;;8496:39;8552:19;;4585:90:7::1;;;;;;;;;4685:12;:28:::0;;-1:-1:-1;;;;;;4685:28:7::1;-1:-1:-1::0;;;;;4685:28:7;;;::::1;::::0;;;::::1;::::0;;4502:218::o;1077:667::-;942:30;2232:4:0;942:10:7;:30::i;:::-;1164:24:::1;::::0;1203:11:::1;:21;;;:43;;;;;;;;:::i;:::-;::::0;1199:271:::1;;1281:12;::::0;1308:16:::1;::::0;::::1;::::0;1326:18:::1;::::0;::::1;::::0;1281:64:::1;::::0;-1:-1:-1;;;1281:64:7;;-1:-1:-1;;;;;1281:12:7;;::::1;::::0;:26:::1;::::0;:64:::1;::::0;1308:16;;1281:64:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1262:83;;1199:271;;;1395:12;::::0;1422:16:::1;::::0;::::1;::::0;1440:18:::1;::::0;::::1;::::0;1395:64:::1;::::0;-1:-1:-1;;;1395:64:7;;-1:-1:-1;;;;;1395:12:7;;::::1;::::0;:26:::1;::::0;:64:::1;::::0;1422:16;;1395:64:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1376:83;;1199:271;-1:-1:-1::0;;;;;1480:50:7;::::1;:31;::::0;::::1;:50:::0;1591:24;;1617:22:::1;::::0;;::::1;::::0;1574:66:::1;::::0;1540:21:::1;::::0;1574:66:::1;::::0;1591:24;;1617:22;1574:66:::1;9403:2:11::0;9399:15;;;;-1:-1:-1;;9395:53:11;9383:66;;9474:2;9465:12;;9458:28;9511:2;9502:12;;9226:294;1574:66:7::1;;::::0;;;;::::1;-1:-1:-1::0;;1574:66:7;;;;;;1564:77;;1574:66:::1;1564:77:::0;;::::1;::::0;1651:29:::1;::::0;;;:14:::1;:29:::0;;;;;;;:43;;;;-1:-1:-1;;;;;;1651:43:7::1;-1:-1:-1::0;;;;;1651:43:7;;::::1;;::::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;;1564:77;;-1:-1:-1;1651:43:7;;:29;:43;;;;-1:-1:-1;;1651:43:7;;::::1;::::0;;;;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;1651:43:7::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;1651:43:7;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;1651:43:7::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;1651:43:7::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;1651:43:7::1;-1:-1:-1::0;;;;;1651:43:7;;::::1;::::0;;;::::1;::::0;;1709:28:::1;::::0;1723:13;;1709:28:::1;::::0;-1:-1:-1;;1709:28:7::1;1154:590;;1077:667:::0;:::o;1750:1109::-;2056:63;;-1:-1:-1;;;2056:63:7;;2084:10;2056:63;;;12320:34:11;2104:4:7;12370:18:11;;;12363:43;12422:18;;;12415:34;;;2041:12:7;;-1:-1:-1;;;;;2056:27:7;;;;;12255:18:11;;2056:63:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2041:78;;2137:7;2129:82;;;;-1:-1:-1;;;2129:82:7;;12944:2:11;2129:82:7;;;12926:21:11;12983:2;12963:18;;;12956:30;13022:34;13002:18;;;12995:62;13093:32;13073:18;;;13066:60;13143:19;;2129:82:7;12742:426:11;2129:82:7;2296:261;;;2323:203;;;;;2358:15;2296:261;;;2323:203;;;2391:13;2323:203;;;;;;;2422:10;2323:203;;;;;;;;;;;;-1:-1:-1;;;;;2323:203:7;;;;;;;;;;;;;2296:261;;;2323:203;2296:261;;;;;;2599:97;;;;;13470:19:11;;;;13505:12;;;13498:28;-1:-1:-1;;13610:15:11;;;13606:24;;13592:12;;;13585:46;13647:12;;;13640:28;;;13703:15;;;13699:24;;13684:13;;;13677:47;13759:15;;;;13755:24;;;13740:13;;;13733:47;13796:13;;;13789:29;;;2296:261:7;-1:-1:-1;;13834:13:11;;2599:97:7;;;;;;-1:-1:-1;;2599:97:7;;;;;;2589:108;;2599:97;2589:108;;;;2747:27;;;;:14;:27;;;;;;:39;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2747:39:7;;;-1:-1:-1;;;;;2747:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2589:108;;-1:-1:-1;2589:108:7;;2826:26;;2747:27;2826:26;1892:967;;;1750:1109;;;;:::o;5328:245:0:-;-1:-1:-1;;;;;5421:34:0;;735:10:4;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;4210:212:7:-;1029:24;437:25;1029:10;:24::i;:::-;4325:37:::1;::::0;-1:-1:-1;;;4325:37:7;;-1:-1:-1;;;;;14050:32:11;;;4325:37:7::1;::::0;::::1;14032:51:11::0;14099:18;;;14092:34;;;4310:12:7::1;::::0;4325:23;;::::1;::::0;::::1;::::0;14005:18:11;;4325:37:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4310:52;;4380:7;4372:43;;;::::0;-1:-1:-1;;;4372:43:7;;14339:2:11;4372:43:7::1;::::0;::::1;14321:21:11::0;14378:2;14358:18;;;14351:30;14417:25;14397:18;;;14390:53;14460:18;;4372:43:7::1;14137:347:11::0;3010:497:7;3136:37;3176:24;;;:14;:24;;;;;;;;3136:64;;;;;;;;;-1:-1:-1;;;;;3136:64:7;;;;;;;;;;;;;;;;;;;;3176:24;;3136:64;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3136:64:7;;;-1:-1:-1;;3136:64:7;;;;;;-1:-1:-1;;;;;3136:64:7;;;;;;;;;;;3218:26;;3136:64;;-1:-1:-1;3218:40:7;3210:69;;;;-1:-1:-1;;;3210:69:7;;14691:2:11;3210:69:7;;;14673:21:11;14730:2;14710:18;;;14703:30;-1:-1:-1;;;14749:18:11;;;14742:46;14805:18;;3210:69:7;14489:340:11;3210:69:7;3338:33;;;;3399:12;;;3409:1;3399:12;;;;;;;;;-1:-1:-1;;;3325:87:7;;;-1:-1:-1;;;;;3325:52:7;;;;;;:87;;3378:10;;3390:7;;3325:87;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3491:8;3486:3;-1:-1:-1;;;;;3459:41:7;3477:7;3459:41;;;;;;;;;;3093:414;3010:497;;;:::o;509:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;509:58:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;509:58:7;;;;;;;-1:-1:-1;;;;;;;509:58:7;;:::o;2854:136:0:-;2931:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;3590:533:7:-;1029:24;437:25;1029:10;:24::i;:::-;3736:37:::1;3776:24:::0;;;:14:::1;:24;::::0;;;;;;;3736:64;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;3736:64:7::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;3776:24;;3736:64;;;;::::1;;::::0;;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;;;;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;3736:64:7;;;-1:-1:-1;;3736:64:7::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;3736:64:7;;::::1;;::::0;;::::1;::::0;;;;3818:26;;3736:64;;-1:-1:-1;3818:40:7::1;3810:69;;;::::0;-1:-1:-1;;;3810:69:7;;14691:2:11;3810:69:7::1;::::0;::::1;14673:21:11::0;14730:2;14710:18;;;14703:30;-1:-1:-1;;;14749:18:11;;;14742:46;14805:18;;3810:69:7::1;14489:340:11::0;3810:69:7::1;3957:33;::::0;::::1;::::0;4018:12:::1;::::0;;4011:5:::1;4018:12:::0;;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3944:87:7;;;-1:-1:-1;;;;;3944:52:7;;::::1;::::0;::::1;::::0;:87:::1;::::0;3997:3;;4002:7;;3944:87;;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4107:8;4102:3;-1:-1:-1::0;;;;;4071:45:7::1;4093:7;4071:45;;;;;;;;;;3689:434;3590:533:::0;;;:::o;4642:138:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;3199:103::-:0;3265:30;3276:4;735:10:4;3265::0;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:4;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;6730:317;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:12;;;;;;;;;;;-1:-1:-1;;;;;6866:29:0;;;;;;;;;;:37;;-1:-1:-1;;6866:37:0;;;6922:40;735:10:4;;6866:12:0;;6922:40;;6898:5;6922:40;-1:-1:-1;6983:4:0;6976:11;;3432:197;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:0;;-1:-1:-1;;;;;14050:32:11;;3565:47:0;;;14032:51:11;14099:18;;;14092:34;;;14005:18;;3565:47:0;13858:274:11;3515:108:0;3432:197;;:::o;14:286:11:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:11;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:11:o;497:180::-;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;648:23:11;;497:180;-1:-1:-1;497:180:11:o;1617:131::-;-1:-1:-1;;;;;1692:31:11;;1682:42;;1672:70;;1738:1;1735;1728:12;1753:134;1821:20;;1850:31;1821:20;1850:31;:::i;:::-;1753:134;;;:::o;1892:315::-;1960:6;1968;2021:2;2009:9;2000:7;1996:23;1992:32;1989:52;;;2037:1;2034;2027:12;1989:52;2073:9;2060:23;2050:33;;2133:2;2122:9;2118:18;2105:32;2146:31;2171:5;2146:31;:::i;:::-;2196:5;2186:15;;;1892:315;;;;;:::o;2212:269::-;2293:6;2346:2;2334:9;2325:7;2321:23;2317:32;2314:52;;;2362:1;2359;2352:12;2314:52;2401:9;2388:23;2420:31;2445:5;2420:31;:::i;2486:127::-;2547:10;2542:3;2538:20;2535:1;2528:31;2578:4;2575:1;2568:15;2602:4;2599:1;2592:15;2618:248;2685:2;2679:9;2727:4;2715:17;;2762:18;2747:34;;2783:22;;;2744:62;2741:88;;;2809:18;;:::i;:::-;2845:2;2838:22;2618:248;:::o;2871:150::-;2946:20;;2995:1;2985:12;;2975:40;;3011:1;3008;3001:12;3026:156;3092:20;;3152:4;3141:16;;3131:27;;3121:55;;3172:1;3169;3162:12;3187:719;3230:5;3283:3;3276:4;3268:6;3264:17;3260:27;3250:55;;3301:1;3298;3291:12;3250:55;3337:6;3324:20;3363:18;3400:2;3396;3393:10;3390:36;;;3406:18;;:::i;:::-;3481:2;3475:9;3449:2;3535:13;;-1:-1:-1;;3531:22:11;;;3555:2;3527:31;3523:40;3511:53;;;3579:18;;;3599:22;;;3576:46;3573:72;;;3625:18;;:::i;:::-;3665:10;3661:2;3654:22;3700:2;3692:6;3685:18;3746:3;3739:4;3734:2;3726:6;3722:15;3718:26;3715:35;3712:55;;;3763:1;3760;3753:12;3712:55;3827:2;3820:4;3812:6;3808:17;3801:4;3793:6;3789:17;3776:54;3874:1;3867:4;3862:2;3854:6;3850:15;3846:26;3839:37;3894:6;3885:15;;;;;;3187:719;;;;:::o;3911:1111::-;4004:6;4057:2;4045:9;4036:7;4032:23;4028:32;4025:52;;;4073:1;4070;4063:12;4025:52;4113:9;4100:23;4142:18;4183:2;4175:6;4172:14;4169:34;;;4199:1;4196;4189:12;4169:34;4222:22;;;;4278:4;4260:16;;;4256:27;4253:47;;;4296:1;4293;4286:12;4253:47;4322:17;;:::i;:::-;4362:22;4381:2;4362:22;:::i;:::-;4355:5;4348:37;4438:2;4434;4430:11;4417:25;4412:2;4405:5;4401:14;4394:49;4475:38;4509:2;4505;4501:11;4475:38;:::i;:::-;4470:2;4463:5;4459:14;4452:62;4546:29;4571:2;4567;4563:11;4546:29;:::i;:::-;4541:2;4534:5;4530:14;4523:53;4622:3;4618:2;4614:12;4601:26;4652:2;4642:8;4639:16;4636:36;;;4668:1;4665;4658:12;4636:36;4705:45;4742:7;4731:8;4727:2;4723:17;4705:45;:::i;:::-;4699:3;4692:5;4688:15;4681:70;;4797:3;4793:2;4789:12;4776:26;4827:2;4817:8;4814:16;4811:36;;;4843:1;4840;4833:12;4811:36;4880:45;4917:7;4906:8;4902:2;4898:17;4880:45;:::i;:::-;4874:3;4867:5;4863:15;4856:70;;4959:32;4986:3;4982:2;4978:12;4959:32;:::i;:::-;4953:3;4942:15;;4935:57;4946:5;3911:1111;-1:-1:-1;;;;;3911:1111:11:o;5027:525::-;5113:6;5121;5129;5137;5190:3;5178:9;5169:7;5165:23;5161:33;5158:53;;;5207:1;5204;5197:12;5158:53;5246:9;5233:23;5265:31;5290:5;5265:31;:::i;:::-;5315:5;-1:-1:-1;5367:2:11;5352:18;;5339:32;;-1:-1:-1;5418:2:11;5403:18;;5390:32;;-1:-1:-1;5474:2:11;5459:18;;5446:32;5487:33;5446:32;5487:33;:::i;:::-;5027:525;;;;-1:-1:-1;5027:525:11;;-1:-1:-1;;5027:525:11:o;5557:456::-;5634:6;5642;5650;5703:2;5691:9;5682:7;5678:23;5674:32;5671:52;;;5719:1;5716;5709:12;5671:52;5755:9;5742:23;5732:33;;5815:2;5804:9;5800:18;5787:32;5828:31;5853:5;5828:31;:::i;:::-;5878:5;-1:-1:-1;5935:2:11;5920:18;;5907:32;5948:33;5907:32;5948:33;:::i;:::-;6000:7;5990:17;;;5557:456;;;;;:::o;6018:383::-;6095:6;6103;6111;6164:2;6152:9;6143:7;6139:23;6135:32;6132:52;;;6180:1;6177;6170:12;6132:52;6216:9;6203:23;6193:33;;6276:2;6265:9;6261:18;6248:32;6289:31;6314:5;6289:31;:::i;:::-;6018:383;;6339:5;;-1:-1:-1;;;6391:2:11;6376:18;;;;6363:32;;6018:383::o;6406:127::-;6467:10;6462:3;6458:20;6455:1;6448:31;6498:4;6495:1;6488:15;6522:4;6519:1;6512:15;6538:423;6580:3;6618:5;6612:12;6645:6;6640:3;6633:19;6670:1;6680:162;6694:6;6691:1;6688:13;6680:162;;;6756:4;6812:13;;;6808:22;;6802:29;6784:11;;;6780:20;;6773:59;6709:12;6680:162;;;6684:3;6887:1;6880:4;6871:6;6866:3;6862:16;6858:27;6851:38;6950:4;6943:2;6939:7;6934:2;6926:6;6922:15;6918:29;6913:3;6909:39;6905:50;6898:57;;;6538:423;;;;:::o;6966:971::-;-1:-1:-1;;;;;7349:15:11;;;7331:34;;7396:2;7381:18;;7374:34;;;7274:4;;7438:1;7427:13;;7417:144;;7483:10;7478:3;7474:20;7471:1;7464:31;7518:4;7515:1;7508:15;7546:4;7543:1;7536:15;7417:144;7597:6;7592:2;7581:9;7577:18;7570:34;7652:4;7644:6;7640:17;7635:2;7624:9;7620:18;7613:45;7695:3;7689;7678:9;7674:19;7667:32;7722:46;7763:3;7752:9;7748:19;7740:6;7722:46;:::i;:::-;7817:9;7809:6;7805:22;7799:3;7788:9;7784:19;7777:51;7845:33;7871:6;7863;7845:33;:::i;:::-;7837:41;;;7927:2;7919:6;7915:15;7909:3;7898:9;7894:19;7887:44;;6966:971;;;;;;;;;;:::o;8582:383::-;8779:2;8768:9;8761:21;8742:4;8805:45;8846:2;8835:9;8831:18;8823:6;8805:45;:::i;:::-;8898:9;8890:6;8886:22;8881:2;8870:9;8866:18;8859:50;8926:33;8952:6;8944;8926:33;:::i;:::-;8918:41;8582:383;-1:-1:-1;;;;;8582:383:11:o;8970:251::-;9040:6;9093:2;9081:9;9072:7;9068:23;9064:32;9061:52;;;9109:1;9106;9099:12;9061:52;9141:9;9135:16;9160:31;9185:5;9160:31;:::i;9525:380::-;9604:1;9600:12;;;;9647;;;9668:61;;9722:4;9714:6;9710:17;9700:27;;9668:61;9775:2;9767:6;9764:14;9744:18;9741:38;9738:161;;9821:10;9816:3;9812:20;9809:1;9802:31;9856:4;9853:1;9846:15;9884:4;9881:1;9874:15;9738:161;;9525:380;;;:::o;10036:518::-;10138:2;10133:3;10130:11;10127:421;;;10174:5;10171:1;10164:16;10218:4;10215:1;10205:18;10288:2;10276:10;10272:19;10269:1;10265:27;10259:4;10255:38;10324:4;10312:10;10309:20;10306:47;;;-1:-1:-1;10347:4:11;10306:47;10402:2;10397:3;10393:12;10390:1;10386:20;10380:4;10376:31;10366:41;;10457:81;10475:2;10468:5;10465:13;10457:81;;;10534:1;10520:16;;10501:1;10490:13;10457:81;;;10461:3;;10036:518;;;:::o;10730:1345::-;10856:3;10850:10;10883:18;10875:6;10872:30;10869:56;;;10905:18;;:::i;:::-;10934:97;11024:6;10984:38;11016:4;11010:11;10984:38;:::i;:::-;10978:4;10934:97;:::i;:::-;11086:4;;11143:2;11132:14;;11160:1;11155:663;;;;11862:1;11879:6;11876:89;;;-1:-1:-1;11931:19:11;;;11925:26;11876:89;-1:-1:-1;;10687:1:11;10683:11;;;10679:24;10675:29;10665:40;10711:1;10707:11;;;10662:57;11978:81;;11125:944;;11155:663;9983:1;9976:14;;;10020:4;10007:18;;-1:-1:-1;;11191:20:11;;;11309:236;11323:7;11320:1;11317:14;11309:236;;;11412:19;;;11406:26;11391:42;;11504:27;;;;11472:1;11460:14;;;;11339:19;;11309:236;;;11313:3;11573:6;11564:7;11561:19;11558:201;;;11634:19;;;11628:26;-1:-1:-1;;11717:1:11;11713:14;;;11729:3;11709:24;11705:37;11701:42;11686:58;11671:74;;11558:201;;;11805:1;11796:6;11793:1;11789:14;11785:22;11779:4;11772:36;11125:944;;;;;10730:1345;;:::o;12460:277::-;12527:6;12580:2;12568:9;12559:7;12555:23;12551:32;12548:52;;;12596:1;12593;12586:12;12548:52;12628:9;12622:16;12681:5;12674:13;12667:21;12660:5;12657:32;12647:60;;12703:1;12700;12693:12;14834:386;15066:1;15062;15057:3;15053:11;15049:19;15041:6;15037:32;15026:9;15019:51;15106:6;15101:2;15090:9;15086:18;15079:34;15149:2;15144;15133:9;15129:18;15122:30;15000:4;15169:45;15210:2;15199:9;15195:18;15187:6;15169:45;:::i;15225:469::-;15479:1;15475;15470:3;15466:11;15462:19;15454:6;15450:32;15439:9;15432:51;15519:6;15514:2;15503:9;15499:18;15492:34;15576:6;15569:14;15562:22;15557:2;15546:9;15542:18;15535:50;15621:3;15616:2;15605:9;15601:18;15594:31;15413:4;15642:46;15683:3;15672:9;15668:19;15660:6;15642:46;:::i;:::-;15634:54;15225:469;-1:-1:-1;;;;;;15225:469:11:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1294600",
								"executionCost": "39168",
								"totalCost": "1333768"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "237",
								"RELAYER_ROLE()": "305",
								"attestToken((address,uint256,uint8,uint8,string,string,address))": "infinite",
								"attestedTokens(bytes32)": "infinite",
								"bridgeNonFungibleTokens(address,uint256,uint256,address)": "infinite",
								"bridgeNonFungibleTokensBack()": "251",
								"bridgeTokens(address,uint256,uint256,address)": "infinite",
								"bridgeTokensBack(uint256,address,bytes32)": "infinite",
								"getRoleAdmin(bytes32)": "2512",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2736",
								"releaseNonFungibleTokens()": "230",
								"releaseTokens(uint256,address,address)": "infinite",
								"releaseWrappedNonFungibleTokens()": "229",
								"releaseWrappedTokens(uint256,address,bytes32)": "infinite",
								"renounceRole(bytes32,address)": "29084",
								"revokeRole(bytes32,address)": "infinite",
								"setTokenFactory(address)": "infinite",
								"supportsInterface(bytes4)": "447",
								"tokenFactory()": "2424",
								"tokenTransfers(bytes32)": "15534"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 350,
									"end": 4722,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 350,
									"end": 4722,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 350,
									"end": 4722,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 775,
									"end": 905,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 775,
									"end": 905,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 775,
									"end": 905,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 775,
									"end": 905,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 775,
									"end": 905,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 775,
									"end": 905,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 775,
									"end": 905,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 775,
									"end": 905,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 775,
									"end": 905,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 775,
									"end": 905,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 799,
									"end": 841,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 830,
									"end": 840,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 799,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 799,
									"end": 841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 799,
									"end": 841,
									"name": "tag",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 799,
									"end": 841,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 851,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 437,
									"end": 462,
									"name": "PUSH",
									"source": 7,
									"value": "E2B7FB3B832174769106DAEBCFD6D1970523240DDA11281102DB9363B83B0DC4"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 851,
									"end": 864,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 851,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 851,
									"end": 898,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 851,
									"end": 898,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 350,
									"end": 4722,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 350,
									"end": 4722,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5781,
									"end": 5806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5837,
									"end": 5871,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "PUSH",
									"source": 0,
									"value": "BD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF"
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5781,
									"end": 5806,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5886,
									"end": 5938,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 5771,
									"end": 5945,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5698,
									"end": 5945,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5698,
									"end": 5945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 350,
									"end": 4722,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 350,
									"end": 4722,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 350,
									"end": 4722,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 350,
									"end": 4722,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 350,
									"end": 4722,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 350,
									"end": 4722,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 4722,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 350,
									"end": 4722,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 4722,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d50a3cb6be2bfd34fa0d0a6d24a244216ef6104de27e166abcdc003a835a13164736f6c63430008160033",
									".code": [
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "62A00971"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "9A67E7F9"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "9A67E7F9"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "A217FDDF"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "D547741F"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "E77772FE"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "EAC213CE"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "F86DA945"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "62A00971"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "63A4E95F"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "7F7B0109"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "91D14854"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "926D7D7F"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "31BA1648"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "31BA1648"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "33B15AAD"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "36568ABE"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "39578521"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "4C597F8A"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A7"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "1385C670"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "248A9CA3"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "2F2FF15D"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "2F73A9F8"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 350,
											"end": 4722,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 624,
											"end": 680,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 624,
											"end": 680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 680,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 624,
											"end": 680,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 945,
											"end": 958,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 945,
											"end": 958,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 927,
											"end": 959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 927,
											"end": 959,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1019,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1003,
											"end": 1020,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1003,
											"end": 1020,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1003,
											"end": 1020,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 975,
											"end": 995,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 975,
											"end": 995,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 975,
											"end": 995,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 968,
											"end": 1022,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1057,
											"end": 1074,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1057,
											"end": 1074,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1057,
											"end": 1074,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1075,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1129,
											"end": 1149,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1129,
											"end": 1149,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1129,
											"end": 1149,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1122,
											"end": 1173,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1122,
											"end": 1173,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1122,
											"end": 1173,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1122,
											"end": 1173,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1229,
											"end": 1233,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1217,
											"end": 1234,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1217,
											"end": 1234,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1217,
											"end": 1234,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1211,
											"end": 1235,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1209,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1209,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1209,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1236,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1300,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1278,
											"end": 1302,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1307,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1307,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1272,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1272,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1252,
											"end": 1272,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 1308,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1102,
											"end": 1105,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 1356,
											"end": 1373,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1373,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1373,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1346,
											"end": 1379,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1344,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1344,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1344,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1317,
											"end": 1380,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1317,
											"end": 1380,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1317,
											"end": 1380,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1317,
											"end": 1380,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1411,
											"end": 1414,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 1396,
											"end": 1415,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1396,
											"end": 1415,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1424,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 914,
											"end": 917,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 899,
											"end": 918,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 624,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 682,
											"end": 1430,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1606,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1581,
											"end": 1606,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1581,
											"end": 1606,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1571,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1554,
											"end": 1572,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1435,
											"end": 1612,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4502,
											"end": 4720,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4502,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4502,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4502,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4502,
											"end": 4720,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4502,
											"end": 4720,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4502,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 4502,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4502,
											"end": 4720,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4502,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4502,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4502,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1744,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1077,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1077,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1077,
											"end": 1744,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1744,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1077,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1744,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1077,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1077,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2859,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1750,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1750,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1750,
											"end": 2859,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2859,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1750,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1750,
											"end": 2859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2859,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1750,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1750,
											"end": 2859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 3004,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2865,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2865,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2865,
											"end": 3004,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 3004,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2865,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 3004,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2865,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4210,
											"end": 4422,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 4210,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4210,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4210,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4210,
											"end": 4422,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4210,
											"end": 4422,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4210,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4210,
											"end": 4422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4210,
											"end": 4422,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4210,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4210,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4210,
											"end": 4422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3010,
											"end": 3507,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 3010,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3010,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3010,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 3010,
											"end": 3507,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3010,
											"end": 3507,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3010,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3010,
											"end": 3507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3010,
											"end": 3507,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 3010,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3010,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3010,
											"end": 3507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 509,
											"end": 567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 509,
											"end": 567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 509,
											"end": 567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 398,
											"end": 462,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 398,
											"end": 462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 398,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 437,
											"end": 462,
											"name": "PUSH",
											"source": 7,
											"value": "E2B7FB3B832174769106DAEBCFD6D1970523240DDA11281102DB9363B83B0DC4"
										},
										{
											"begin": 398,
											"end": 462,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 398,
											"end": 462,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 4123,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 3590,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3590,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 3590,
											"end": 4123,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 4123,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3590,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3590,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 4123,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 3590,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 3590,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 735,
											"end": 768,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 735,
											"end": 768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 768,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 735,
											"end": 768,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 735,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 735,
											"end": 768,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 735,
											"end": 768,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 735,
											"end": 768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 735,
											"end": 768,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 735,
											"end": 768,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 735,
											"end": 768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 768,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 735,
											"end": 768,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8128,
											"end": 8160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8128,
											"end": 8160,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8128,
											"end": 8160,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8110,
											"end": 8161,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8110,
											"end": 8161,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8098,
											"end": 8100,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8083,
											"end": 8101,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 735,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 7942,
											"end": 8167,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4502,
											"end": 4720,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4502,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 942,
											"end": 972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 972,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 942,
											"end": 972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4593,
											"end": 4629,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4593,
											"end": 4629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4585,
											"end": 4675,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4675,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4585,
											"end": 4675,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4675,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8374,
											"end": 8376,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4585,
											"end": 4675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4585,
											"end": 4675,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4675,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8377,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8413,
											"end": 8415,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 8393,
											"end": 8411,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8393,
											"end": 8411,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8393,
											"end": 8411,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8386,
											"end": 8416,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8452,
											"end": 8486,
											"name": "PUSH",
											"source": 11,
											"value": "43616E277420736574204C535020466163746F727920746F20746865207A6572"
										},
										{
											"begin": 8432,
											"end": 8450,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8432,
											"end": 8450,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8432,
											"end": 8450,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8425,
											"end": 8487,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8503,
											"end": 8521,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8503,
											"end": 8521,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8503,
											"end": 8521,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8496,
											"end": 8535,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8552,
											"end": 8571,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 8552,
											"end": 8571,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 4585,
											"end": 4675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4675,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4675,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4675,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4675,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4675,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4585,
											"end": 4675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4685,
											"end": 4697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4685,
											"end": 4713,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4685,
											"end": 4713,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4685,
											"end": 4713,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4685,
											"end": 4713,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4685,
											"end": 4713,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4685,
											"end": 4713,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4685,
											"end": 4713,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4685,
											"end": 4713,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4685,
											"end": 4713,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4685,
											"end": 4713,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4685,
											"end": 4713,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4685,
											"end": 4713,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4685,
											"end": 4713,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4502,
											"end": 4720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1744,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1077,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 942,
											"end": 972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 972,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 942,
											"end": 972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1164,
											"end": 1188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1188,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1214,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1224,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1224,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1203,
											"end": 1246,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1246,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1246,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1203,
											"end": 1246,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1203,
											"end": 1246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1203,
											"end": 1246,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1246,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1203,
											"end": 1246,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1246,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1199,
											"end": 1470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1199,
											"end": 1470,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1281,
											"end": 1293,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 1308,
											"end": 1324,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1324,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1324,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1344,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8FE59807"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1281,
											"end": 1293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1293,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1293,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1293,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8FE59807"
										},
										{
											"begin": 1281,
											"end": 1307,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1324,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1281,
											"end": 1345,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1345,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1281,
											"end": 1345,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1281,
											"end": 1345,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1262,
											"end": 1345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1262,
											"end": 1345,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1199,
											"end": 1470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1199,
											"end": 1470,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1199,
											"end": 1470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1199,
											"end": 1470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1395,
											"end": 1407,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 1422,
											"end": 1438,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1438,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1438,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1458,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1459,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C2C2B31F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1395,
											"end": 1459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1395,
											"end": 1407,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1407,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1407,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1407,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "C2C2B31F"
										},
										{
											"begin": 1395,
											"end": 1421,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1395,
											"end": 1459,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1438,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1438,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1395,
											"end": 1459,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1459,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1395,
											"end": 1459,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1395,
											"end": 1459,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1376,
											"end": 1459,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1376,
											"end": 1459,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1199,
											"end": 1470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1199,
											"end": 1470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1480,
											"end": 1530,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1480,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 1480,
											"end": 1511,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1480,
											"end": 1511,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1615,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1615,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1617,
											"end": 1639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1617,
											"end": 1639,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1617,
											"end": 1639,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1617,
											"end": 1639,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1617,
											"end": 1639,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1640,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1561,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1640,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1574,
											"end": 1640,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1615,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1615,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1617,
											"end": 1639,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1640,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9403,
											"end": 9405,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9399,
											"end": 9414,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9399,
											"end": 9414,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9399,
											"end": 9414,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9399,
											"end": 9414,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9395,
											"end": 9448,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9383,
											"end": 9449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9383,
											"end": 9449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9474,
											"end": 9476,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 9465,
											"end": 9477,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9465,
											"end": 9477,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9458,
											"end": 9486,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9511,
											"end": 9513,
											"name": "PUSH",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 9502,
											"end": 9514,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9502,
											"end": 9514,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9226,
											"end": 9520,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1574,
											"end": 1640,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1574,
											"end": 1640,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1640,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1640,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1640,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1640,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1640,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1640,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1574,
											"end": 1640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1641,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1641,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1680,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1651,
											"end": 1694,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 1651,
											"end": 1694,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 1651,
											"end": 1694,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1709,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1736,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1709,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A755BEE123B19CFD95F30D3BED835AC8DAB8A08F893508AA86140D1B66C77E13"
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1709,
											"end": 1737,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1154,
											"end": 1744,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1154,
											"end": 1744,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2859,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1750,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2094,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12320,
											"end": 12354,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2108,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 12370,
											"end": 12388,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12370,
											"end": 12388,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12370,
											"end": 12388,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12363,
											"end": 12406,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12422,
											"end": 12440,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 12422,
											"end": 12440,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12422,
											"end": 12440,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12415,
											"end": 12449,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12415,
											"end": 12449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12415,
											"end": 12449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2056,
											"end": 2083,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2083,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2083,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2083,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 2056,
											"end": 2083,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12255,
											"end": 12273,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 12255,
											"end": 12273,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2056,
											"end": 2119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2056,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2144,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2129,
											"end": 2211,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2211,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2129,
											"end": 2211,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2129,
											"end": 2211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12944,
											"end": 12946,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2129,
											"end": 2211,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2129,
											"end": 2211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2211,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12926,
											"end": 12947,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12983,
											"end": 12985,
											"name": "PUSH",
											"source": 11,
											"value": "3E"
										},
										{
											"begin": 12963,
											"end": 12981,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12963,
											"end": 12981,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12963,
											"end": 12981,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12956,
											"end": 12986,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13022,
											"end": 13056,
											"name": "PUSH",
											"source": 11,
											"value": "5472616E73666572206661696C65642E204D616B652073757265206272696467"
										},
										{
											"begin": 13002,
											"end": 13020,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 13002,
											"end": 13020,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13002,
											"end": 13020,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12995,
											"end": 13057,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13093,
											"end": 13125,
											"name": "PUSH",
											"source": 11,
											"value": "6520697320617070726F76656420746F207370656E6420746F6B656E732E0000"
										},
										{
											"begin": 13073,
											"end": 13091,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 13073,
											"end": 13091,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13073,
											"end": 13091,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13066,
											"end": 13126,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13143,
											"end": 13162,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 13143,
											"end": 13162,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 12742,
											"end": 13168,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2211,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2129,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2557,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2373,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2557,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2557,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2404,
											"name": "CHAINID",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2432,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2557,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2557,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2557,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2526,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2296,
											"end": 2557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2557,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2557,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2557,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13470,
											"end": 13489,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 13470,
											"end": 13489,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13470,
											"end": 13489,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 13470,
											"end": 13489,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13505,
											"end": 13517,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 13505,
											"end": 13517,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13505,
											"end": 13517,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13498,
											"end": 13526,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 13606,
											"end": 13630,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13606,
											"end": 13630,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13592,
											"end": 13604,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13592,
											"end": 13604,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13592,
											"end": 13604,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13585,
											"end": 13631,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13647,
											"end": 13659,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 13647,
											"end": 13659,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13647,
											"end": 13659,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13640,
											"end": 13668,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 13640,
											"end": 13668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13640,
											"end": 13668,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13703,
											"end": 13718,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13703,
											"end": 13718,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13703,
											"end": 13718,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 13699,
											"end": 13723,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13699,
											"end": 13723,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13684,
											"end": 13697,
											"name": "PUSH",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 13684,
											"end": 13697,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13684,
											"end": 13697,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13677,
											"end": 13724,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13759,
											"end": 13774,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13759,
											"end": 13774,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 13759,
											"end": 13774,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13759,
											"end": 13774,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 13755,
											"end": 13779,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13755,
											"end": 13779,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13755,
											"end": 13779,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13740,
											"end": 13753,
											"name": "PUSH",
											"source": 11,
											"value": "A8"
										},
										{
											"begin": 13740,
											"end": 13753,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13740,
											"end": 13753,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13733,
											"end": 13780,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13796,
											"end": 13809,
											"name": "PUSH",
											"source": 11,
											"value": "BC"
										},
										{
											"begin": 13796,
											"end": 13809,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13796,
											"end": 13809,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13789,
											"end": 13818,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13789,
											"end": 13818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13789,
											"end": 13818,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2296,
											"end": 2557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 13834,
											"end": 13847,
											"name": "PUSH",
											"source": 11,
											"value": "DC"
										},
										{
											"begin": 13834,
											"end": 13847,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2697,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2697,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2696,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2697,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2697,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2697,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2774,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2774,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2774,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2761,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2747,
											"end": 2774,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2774,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2774,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2774,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2774,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2774,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2786,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2697,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2589,
											"end": 2697,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2697,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2852,
											"name": "PUSH",
											"source": 7,
											"value": "911623F001224D5D44BBA15E09F9764C38794E74D052085B3E24C04E05B7AED7"
										},
										{
											"begin": 2826,
											"end": 2852,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2774,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2852,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 2859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 2859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 2859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1750,
											"end": 2859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4210,
											"end": 4422,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 4210,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1029,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 437,
											"end": 462,
											"name": "PUSH",
											"source": 7,
											"value": "E2B7FB3B832174769106DAEBCFD6D1970523240DDA11281102DB9363B83B0DC4"
										},
										{
											"begin": 1029,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1029,
											"end": 1053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1029,
											"end": 1053,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1029,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4325,
											"end": 4362,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4325,
											"end": 4362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14050,
											"end": 14082,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14050,
											"end": 14082,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14050,
											"end": 14082,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4325,
											"end": 4362,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14032,
											"end": 14083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14099,
											"end": 14117,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14099,
											"end": 14117,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14099,
											"end": 14117,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14092,
											"end": 14126,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14092,
											"end": 14126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14092,
											"end": 14126,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4310,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4348,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4348,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 4325,
											"end": 4348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14005,
											"end": 14023,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 14005,
											"end": 14023,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4362,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4325,
											"end": 4362,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 4325,
											"end": 4362,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4310,
											"end": 4362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4310,
											"end": 4362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4387,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4372,
											"end": 4415,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4372,
											"end": 4415,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4372,
											"end": 4415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14339,
											"end": 14341,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4372,
											"end": 4415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4372,
											"end": 4415,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4415,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14321,
											"end": 14342,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14378,
											"end": 14380,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 14358,
											"end": 14376,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14358,
											"end": 14376,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14358,
											"end": 14376,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14351,
											"end": 14381,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14417,
											"end": 14442,
											"name": "PUSH",
											"source": 11,
											"value": "4661696C656420746F207061796F757420746F6B656E73000000000000000000"
										},
										{
											"begin": 14397,
											"end": 14415,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 14397,
											"end": 14415,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14397,
											"end": 14415,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14390,
											"end": 14443,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14460,
											"end": 14478,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 14460,
											"end": 14478,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4372,
											"end": 4415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 14137,
											"end": 14484,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3507,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3010,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3173,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3176,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3176,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3176,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3200,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3200,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3200,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 3136,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 3136,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3136,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3136,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3136,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3136,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3200,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3218,
											"end": 3258,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3210,
											"end": 3279,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3279,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3210,
											"end": 3279,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3210,
											"end": 3279,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3279,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14691,
											"end": 14693,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3210,
											"end": 3279,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3210,
											"end": 3279,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3279,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14673,
											"end": 14694,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14730,
											"end": 14732,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14703,
											"end": 14733,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A590817DD1BDAD95B9251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14749,
											"end": 14767,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 14749,
											"end": 14767,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14749,
											"end": 14767,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14742,
											"end": 14788,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14805,
											"end": 14823,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 14805,
											"end": 14823,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 14489,
											"end": 14829,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3279,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3210,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3371,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 3338,
											"end": 3371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3409,
											"end": 3410,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "44D17187"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3377,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3377,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3377,
											"name": "PUSH",
											"source": 7,
											"value": "44D17187"
										},
										{
											"begin": 3325,
											"end": 3377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3388,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3397,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3397,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3325,
											"end": 3412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3491,
											"end": 3499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3486,
											"end": 3489,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3459,
											"end": 3500,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "80C5D77A092B389B97D2B4A5BC721315E540C267567756DF827F2EDAB66FACBA"
										},
										{
											"begin": 3459,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3459,
											"end": 3500,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3459,
											"end": 3500,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3500,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3500,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3500,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3010,
											"end": 3507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3010,
											"end": 3507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3010,
											"end": 3507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3010,
											"end": 3507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 509,
											"end": 567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 509,
											"end": 567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 509,
											"end": 567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 509,
											"end": 567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 509,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 509,
											"end": 567,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 509,
											"end": 567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3590,
											"end": 4123,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 3590,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1029,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 437,
											"end": 462,
											"name": "PUSH",
											"source": 7,
											"value": "E2B7FB3B832174769106DAEBCFD6D1970523240DDA11281102DB9363B83B0DC4"
										},
										{
											"begin": 1029,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1029,
											"end": 1053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1029,
											"end": 1053,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1029,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3776,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3800,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3800,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3800,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3800,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3800,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 3736,
											"end": 3800,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 3736,
											"end": 3800,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3736,
											"end": 3800,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3736,
											"end": 3800,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3736,
											"end": 3800,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3736,
											"end": 3800,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3844,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3800,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3818,
											"end": 3858,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3810,
											"end": 3879,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3879,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3810,
											"end": 3879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14691,
											"end": 14693,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3810,
											"end": 3879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3879,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14673,
											"end": 14694,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14730,
											"end": 14732,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14703,
											"end": 14733,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A590817DD1BDAD95B9251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14749,
											"end": 14767,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 14749,
											"end": 14767,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14749,
											"end": 14767,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14742,
											"end": 14788,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14805,
											"end": 14823,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 14805,
											"end": 14823,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 14489,
											"end": 14829,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3879,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3810,
											"end": 3879,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3957,
											"end": 3990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 3957,
											"end": 3990,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3957,
											"end": 3990,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3957,
											"end": 3990,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4018,
											"end": 4030,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4030,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4030,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4030,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4030,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4018,
											"end": 4030,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4030,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4030,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4030,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4030,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4030,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3AC06C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3944,
											"end": 4031,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3944,
											"end": 3996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 3996,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 3996,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 3996,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 3996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7580D920"
										},
										{
											"begin": 3944,
											"end": 3996,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 3944,
											"end": 4031,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3997,
											"end": 4000,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3997,
											"end": 4000,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4009,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4009,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3944,
											"end": 4031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 3944,
											"end": 4031,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 4031,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 4031,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4031,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4105,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4116,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4100,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7AEBC2282A0784072E43F12D40AFC658F82FDA3D0E830865D50DD7B0196DF7F1"
										},
										{
											"begin": 4071,
											"end": 4116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4116,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4116,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4116,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4116,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4116,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4116,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4116,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 4123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 4123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 4123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 4123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 4123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14050,
											"end": 14082,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14050,
											"end": 14082,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14032,
											"end": 14083,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14099,
											"end": 14117,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14099,
											"end": 14117,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14099,
											"end": 14117,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14092,
											"end": 14126,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14092,
											"end": 14126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14092,
											"end": 14126,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14005,
											"end": 14023,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 14005,
											"end": 14023,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 13858,
											"end": 14132,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 497,
											"end": 677,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 497,
											"end": 677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 556,
											"end": 562,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 611,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 606,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 588,
											"end": 595,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 584,
											"end": 607,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 577,
											"end": 629,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 577,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 625,
											"end": 626,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 615,
											"end": 627,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 577,
											"end": 629,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 648,
											"end": 671,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 648,
											"end": 671,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 497,
											"end": 677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 497,
											"end": 677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1748,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 1617,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1723,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1692,
											"end": 1723,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1724,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1724,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1672,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 1672,
											"end": 1742,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1739,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1740,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1887,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 1753,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1821,
											"end": 1841,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1821,
											"end": 1841,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1850,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 1821,
											"end": 1841,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1850,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 1850,
											"end": 1881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1850,
											"end": 1881,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 1850,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1887,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1887,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1887,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1753,
											"end": 1887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2207,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 1892,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 1974,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2021,
											"end": 2023,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2009,
											"end": 2018,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2000,
											"end": 2007,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1996,
											"end": 2019,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1992,
											"end": 2024,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1989,
											"end": 2041,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1989,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 1989,
											"end": 2041,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2037,
											"end": 2038,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2027,
											"end": 2039,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1989,
											"end": 2041,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 1989,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2073,
											"end": 2082,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2122,
											"end": 2131,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2105,
											"end": 2137,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2146,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 2171,
											"end": 2176,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2146,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 2146,
											"end": 2177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2146,
											"end": 2177,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 2146,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2196,
											"end": 2201,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2186,
											"end": 2201,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2186,
											"end": 2201,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2186,
											"end": 2201,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2207,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2207,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2207,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1892,
											"end": 2207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2481,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2212,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2299,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2348,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2349,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2314,
											"end": 2366,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2314,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 2314,
											"end": 2366,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2362,
											"end": 2363,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2360,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2352,
											"end": 2364,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2314,
											"end": 2366,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 2314,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2411,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2420,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 2445,
											"end": 2450,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2420,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 2420,
											"end": 2451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2486,
											"end": 2613,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 2486,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2557,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2538,
											"end": 2558,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2536,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2559,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2578,
											"end": 2582,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2575,
											"end": 2576,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2568,
											"end": 2583,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2599,
											"end": 2600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2607,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 2866,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 2618,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2685,
											"end": 2687,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 2688,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2727,
											"end": 2731,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2715,
											"end": 2732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2715,
											"end": 2732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2762,
											"end": 2780,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2747,
											"end": 2781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2747,
											"end": 2781,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2783,
											"end": 2805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2783,
											"end": 2805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2783,
											"end": 2805,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2744,
											"end": 2806,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2741,
											"end": 2829,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2741,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 2741,
											"end": 2829,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2809,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 2809,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 2809,
											"end": 2827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2809,
											"end": 2827,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 2809,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2845,
											"end": 2847,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2860,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 2866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 2866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2871,
											"end": 3021,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 2871,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2946,
											"end": 2966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2946,
											"end": 2966,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2985,
											"end": 2997,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2985,
											"end": 2997,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2975,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 2975,
											"end": 3015,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3011,
											"end": 3012,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3001,
											"end": 3013,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3026,
											"end": 3182,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 3026,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3112,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3112,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3152,
											"end": 3156,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3141,
											"end": 3157,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3141,
											"end": 3157,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3158,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3158,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3121,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 3121,
											"end": 3176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3173,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3170,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3174,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3187,
											"end": 3906,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 3187,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3230,
											"end": 3235,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3286,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3268,
											"end": 3274,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3281,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3287,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3301,
											"end": 3302,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3291,
											"end": 3303,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 3250,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3337,
											"end": 3343,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3324,
											"end": 3344,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3400,
											"end": 3402,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3398,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3403,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3390,
											"end": 3426,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3390,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 3390,
											"end": 3426,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3406,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 3406,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 3406,
											"end": 3424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3406,
											"end": 3424,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 3406,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3483,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3475,
											"end": 3484,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3449,
											"end": 3451,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3535,
											"end": 3548,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3548,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3531,
											"end": 3553,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3531,
											"end": 3553,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3531,
											"end": 3553,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3555,
											"end": 3557,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 3527,
											"end": 3558,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3523,
											"end": 3563,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3564,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3564,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3599,
											"end": 3621,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3599,
											"end": 3621,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3599,
											"end": 3621,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3576,
											"end": 3622,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3573,
											"end": 3645,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3573,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 3573,
											"end": 3645,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 3625,
											"end": 3643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3665,
											"end": 3675,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3661,
											"end": 3663,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3654,
											"end": 3676,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3700,
											"end": 3702,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3685,
											"end": 3703,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3746,
											"end": 3749,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3743,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3734,
											"end": 3736,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3726,
											"end": 3732,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 3737,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3744,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3715,
											"end": 3750,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3712,
											"end": 3767,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3712,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 3712,
											"end": 3767,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3764,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3761,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3753,
											"end": 3765,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3712,
											"end": 3767,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 3712,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3820,
											"end": 3824,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3812,
											"end": 3818,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3808,
											"end": 3825,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3805,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3793,
											"end": 3799,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3789,
											"end": 3806,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3776,
											"end": 3830,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 3874,
											"end": 3875,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3871,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3862,
											"end": 3864,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3854,
											"end": 3860,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3850,
											"end": 3865,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3846,
											"end": 3872,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3876,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3900,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3885,
											"end": 3900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3187,
											"end": 3906,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3187,
											"end": 3906,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3187,
											"end": 3906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3187,
											"end": 3906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3187,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3911,
											"end": 5022,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 3911,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4004,
											"end": 4010,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4059,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4036,
											"end": 4043,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4055,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4028,
											"end": 4060,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4070,
											"end": 4071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4063,
											"end": 4075,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4113,
											"end": 4122,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4123,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4142,
											"end": 4160,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4183,
											"end": 4185,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4175,
											"end": 4181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4172,
											"end": 4186,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4169,
											"end": 4203,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4169,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 4169,
											"end": 4203,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4200,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4197,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4169,
											"end": 4203,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 4169,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4222,
											"end": 4244,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4222,
											"end": 4244,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4222,
											"end": 4244,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4222,
											"end": 4244,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4282,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 4260,
											"end": 4276,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4276,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4276,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4283,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4253,
											"end": 4300,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4253,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 4253,
											"end": 4300,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4296,
											"end": 4297,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4294,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4286,
											"end": 4298,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4253,
											"end": 4300,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 4253,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 4322,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4322,
											"end": 4339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4339,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 4322,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 4381,
											"end": 4383,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 4362,
											"end": 4384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4348,
											"end": 4385,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4438,
											"end": 4440,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4434,
											"end": 4436,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4430,
											"end": 4441,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4417,
											"end": 4442,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4412,
											"end": 4414,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4405,
											"end": 4410,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4415,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4394,
											"end": 4443,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4475,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 4509,
											"end": 4511,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4505,
											"end": 4507,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4501,
											"end": 4512,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4475,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 4475,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4475,
											"end": 4513,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 4475,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4470,
											"end": 4472,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4463,
											"end": 4468,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4459,
											"end": 4473,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4452,
											"end": 4514,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4546,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 4571,
											"end": 4573,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4567,
											"end": 4569,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4574,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4546,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 4546,
											"end": 4575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4546,
											"end": 4575,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 4546,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4543,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4534,
											"end": 4539,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4530,
											"end": 4544,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4523,
											"end": 4576,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4622,
											"end": 4625,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 4618,
											"end": 4620,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4614,
											"end": 4626,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4601,
											"end": 4627,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 4654,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4650,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4639,
											"end": 4655,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4636,
											"end": 4672,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4636,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 4636,
											"end": 4672,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4668,
											"end": 4669,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4665,
											"end": 4666,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4658,
											"end": 4670,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4636,
											"end": 4672,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 4636,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4705,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 4742,
											"end": 4749,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4731,
											"end": 4739,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4727,
											"end": 4729,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4723,
											"end": 4740,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4705,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4705,
											"end": 4750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4705,
											"end": 4750,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 4705,
											"end": 4750,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4702,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 4692,
											"end": 4697,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4688,
											"end": 4703,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 4751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 4751,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4797,
											"end": 4800,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 4793,
											"end": 4795,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4789,
											"end": 4801,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4802,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4827,
											"end": 4829,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4817,
											"end": 4825,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4847,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 4811,
											"end": 4847,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4843,
											"end": 4844,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4840,
											"end": 4841,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4833,
											"end": 4845,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4811,
											"end": 4847,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 4811,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4880,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 4917,
											"end": 4924,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4906,
											"end": 4914,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4902,
											"end": 4904,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4898,
											"end": 4915,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4880,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4880,
											"end": 4925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4880,
											"end": 4925,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 4880,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4874,
											"end": 4877,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 4867,
											"end": 4872,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4863,
											"end": 4878,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4926,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4926,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4959,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 4986,
											"end": 4989,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4978,
											"end": 4990,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4959,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 4959,
											"end": 4991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4959,
											"end": 4991,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 4959,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4953,
											"end": 4956,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 4942,
											"end": 4957,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4957,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4992,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4946,
											"end": 4951,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3911,
											"end": 5022,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3911,
											"end": 5022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5027,
											"end": 5552,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 5027,
											"end": 5552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5121,
											"end": 5127,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5135,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5143,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5190,
											"end": 5193,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 5178,
											"end": 5187,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5176,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5165,
											"end": 5188,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5161,
											"end": 5194,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5211,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 5158,
											"end": 5211,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5208,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5204,
											"end": 5205,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5197,
											"end": 5209,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5211,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 5158,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5246,
											"end": 5255,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5256,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5265,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 5290,
											"end": 5295,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5265,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 5265,
											"end": 5296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5265,
											"end": 5296,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 5265,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5315,
											"end": 5320,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5367,
											"end": 5369,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5352,
											"end": 5370,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5352,
											"end": 5370,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5339,
											"end": 5371,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5339,
											"end": 5371,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5418,
											"end": 5420,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5403,
											"end": 5421,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5403,
											"end": 5421,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5422,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5422,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5474,
											"end": 5476,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5459,
											"end": 5477,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5459,
											"end": 5477,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5446,
											"end": 5478,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 5446,
											"end": 5478,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 5487,
											"end": 5520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5027,
											"end": 5552,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5027,
											"end": 5552,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 5027,
											"end": 5552,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5027,
											"end": 5552,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5027,
											"end": 5552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5027,
											"end": 5552,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5027,
											"end": 5552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5557,
											"end": 6013,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 5557,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5634,
											"end": 5640,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5648,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5650,
											"end": 5656,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5705,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5682,
											"end": 5689,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5678,
											"end": 5701,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5706,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5671,
											"end": 5723,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5671,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 5671,
											"end": 5723,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5719,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5716,
											"end": 5717,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5709,
											"end": 5721,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5671,
											"end": 5723,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 5671,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5765,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5732,
											"end": 5765,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5732,
											"end": 5765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5817,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5804,
											"end": 5813,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5800,
											"end": 5818,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5787,
											"end": 5819,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5828,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 5853,
											"end": 5858,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5828,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 5828,
											"end": 5859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5828,
											"end": 5859,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 5828,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5878,
											"end": 5883,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5935,
											"end": 5937,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5907,
											"end": 5939,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 5907,
											"end": 5939,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 5948,
											"end": 5981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5948,
											"end": 5981,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 5948,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6000,
											"end": 6007,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5990,
											"end": 6007,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5990,
											"end": 6007,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5990,
											"end": 6007,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5557,
											"end": 6013,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5557,
											"end": 6013,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5557,
											"end": 6013,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5557,
											"end": 6013,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5557,
											"end": 6013,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5557,
											"end": 6013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6018,
											"end": 6401,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 6018,
											"end": 6401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6095,
											"end": 6101,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6109,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6111,
											"end": 6117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6166,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6152,
											"end": 6161,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6143,
											"end": 6150,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6139,
											"end": 6162,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6135,
											"end": 6167,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6132,
											"end": 6184,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6132,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 6132,
											"end": 6184,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6178,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6132,
											"end": 6184,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 6132,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6216,
											"end": 6225,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6203,
											"end": 6226,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6193,
											"end": 6226,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6193,
											"end": 6226,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6278,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6265,
											"end": 6274,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6261,
											"end": 6279,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6248,
											"end": 6280,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 6314,
											"end": 6319,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 6289,
											"end": 6320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6289,
											"end": 6320,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 6289,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6018,
											"end": 6401,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6018,
											"end": 6401,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 6339,
											"end": 6344,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6339,
											"end": 6344,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6391,
											"end": 6393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6376,
											"end": 6394,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6376,
											"end": 6394,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6376,
											"end": 6394,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6376,
											"end": 6394,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6395,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6363,
											"end": 6395,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6018,
											"end": 6401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6406,
											"end": 6533,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 6406,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6467,
											"end": 6477,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 6462,
											"end": 6465,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 6458,
											"end": 6478,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6456,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6448,
											"end": 6479,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6498,
											"end": 6502,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 6495,
											"end": 6496,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6488,
											"end": 6503,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6522,
											"end": 6526,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6519,
											"end": 6520,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6527,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6961,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 6538,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6580,
											"end": 6583,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6623,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6612,
											"end": 6624,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6640,
											"end": 6643,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6633,
											"end": 6652,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6670,
											"end": 6671,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6680,
											"end": 6842,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 6680,
											"end": 6842,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6694,
											"end": 6700,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6691,
											"end": 6692,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6688,
											"end": 6701,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6842,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 6680,
											"end": 6842,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6756,
											"end": 6760,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6812,
											"end": 6825,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6812,
											"end": 6825,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6812,
											"end": 6825,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6808,
											"end": 6830,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6808,
											"end": 6830,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6802,
											"end": 6831,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6784,
											"end": 6795,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6784,
											"end": 6795,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6784,
											"end": 6795,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6780,
											"end": 6800,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6780,
											"end": 6800,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6773,
											"end": 6832,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6709,
											"end": 6721,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 6680,
											"end": 6842,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6842,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 6680,
											"end": 6842,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6687,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6887,
											"end": 6888,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6880,
											"end": 6884,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6871,
											"end": 6877,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6866,
											"end": 6869,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6862,
											"end": 6878,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6858,
											"end": 6885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6851,
											"end": 6889,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6950,
											"end": 6954,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6943,
											"end": 6945,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6939,
											"end": 6946,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6934,
											"end": 6936,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6926,
											"end": 6932,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6922,
											"end": 6937,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6918,
											"end": 6947,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6913,
											"end": 6916,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6909,
											"end": 6948,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6905,
											"end": 6955,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6898,
											"end": 6955,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6898,
											"end": 6955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6898,
											"end": 6955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6961,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6961,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6961,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6961,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6966,
											"end": 7937,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 6966,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7349,
											"end": 7364,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7349,
											"end": 7364,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7349,
											"end": 7364,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7331,
											"end": 7365,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7331,
											"end": 7365,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7396,
											"end": 7398,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7381,
											"end": 7399,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7381,
											"end": 7399,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7374,
											"end": 7408,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7374,
											"end": 7408,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7374,
											"end": 7408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7274,
											"end": 7278,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7274,
											"end": 7278,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7439,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 7427,
											"end": 7440,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7427,
											"end": 7440,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7417,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 7417,
											"end": 7561,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7483,
											"end": 7493,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 7478,
											"end": 7481,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 7474,
											"end": 7494,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 7471,
											"end": 7472,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7464,
											"end": 7495,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7518,
											"end": 7522,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 7515,
											"end": 7516,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7546,
											"end": 7550,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7543,
											"end": 7544,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7536,
											"end": 7551,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7417,
											"end": 7561,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 7417,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7597,
											"end": 7603,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7592,
											"end": 7594,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7577,
											"end": 7595,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7570,
											"end": 7604,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7652,
											"end": 7656,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7644,
											"end": 7650,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7640,
											"end": 7657,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7635,
											"end": 7637,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7624,
											"end": 7633,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7613,
											"end": 7658,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7695,
											"end": 7698,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 7689,
											"end": 7692,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 7678,
											"end": 7687,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7674,
											"end": 7693,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7667,
											"end": 7699,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7722,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 7763,
											"end": 7766,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 7752,
											"end": 7761,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7767,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7740,
											"end": 7746,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7722,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 7722,
											"end": 7768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7722,
											"end": 7768,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 7722,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7817,
											"end": 7826,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7809,
											"end": 7815,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7805,
											"end": 7827,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7799,
											"end": 7802,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 7788,
											"end": 7797,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7784,
											"end": 7803,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7777,
											"end": 7828,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 7871,
											"end": 7877,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7863,
											"end": 7869,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 7845,
											"end": 7878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7878,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 7845,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7837,
											"end": 7878,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7837,
											"end": 7878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7837,
											"end": 7878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7927,
											"end": 7929,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7919,
											"end": 7925,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7915,
											"end": 7930,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7909,
											"end": 7912,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 7898,
											"end": 7907,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7894,
											"end": 7913,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7887,
											"end": 7931,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7887,
											"end": 7931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6966,
											"end": 7937,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 6966,
											"end": 7937,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 6966,
											"end": 7937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6966,
											"end": 7937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6966,
											"end": 7937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6966,
											"end": 7937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6966,
											"end": 7937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6966,
											"end": 7937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6966,
											"end": 7937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6966,
											"end": 7937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6966,
											"end": 7937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8582,
											"end": 8965,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 8582,
											"end": 8965,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8779,
											"end": 8781,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8768,
											"end": 8777,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8761,
											"end": 8782,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8742,
											"end": 8746,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8805,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 8846,
											"end": 8848,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8835,
											"end": 8844,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8831,
											"end": 8849,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8823,
											"end": 8829,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8805,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 8805,
											"end": 8850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8805,
											"end": 8850,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 8805,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8898,
											"end": 8907,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8890,
											"end": 8896,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8886,
											"end": 8908,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8881,
											"end": 8883,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8870,
											"end": 8879,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8866,
											"end": 8884,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8859,
											"end": 8909,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8926,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 8952,
											"end": 8958,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8944,
											"end": 8950,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8926,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 8926,
											"end": 8959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8926,
											"end": 8959,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 8926,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8918,
											"end": 8959,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8582,
											"end": 8965,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8582,
											"end": 8965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8970,
											"end": 9221,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 8970,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9040,
											"end": 9046,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9093,
											"end": 9095,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9081,
											"end": 9090,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9072,
											"end": 9079,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9068,
											"end": 9091,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9064,
											"end": 9096,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9061,
											"end": 9113,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9061,
											"end": 9113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 9061,
											"end": 9113,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9109,
											"end": 9110,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9107,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9099,
											"end": 9111,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9061,
											"end": 9113,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 9061,
											"end": 9113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9141,
											"end": 9150,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9135,
											"end": 9151,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9160,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 9185,
											"end": 9190,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9160,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 9160,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9525,
											"end": 9905,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 9525,
											"end": 9905,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9604,
											"end": 9605,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9600,
											"end": 9612,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9600,
											"end": 9612,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9600,
											"end": 9612,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 9600,
											"end": 9612,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9647,
											"end": 9659,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9647,
											"end": 9659,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9647,
											"end": 9659,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9668,
											"end": 9729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 9668,
											"end": 9729,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9722,
											"end": 9726,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 9714,
											"end": 9720,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9710,
											"end": 9727,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9700,
											"end": 9727,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9700,
											"end": 9727,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9668,
											"end": 9729,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 9668,
											"end": 9729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9775,
											"end": 9777,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9767,
											"end": 9773,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9764,
											"end": 9778,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 9744,
											"end": 9762,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9741,
											"end": 9779,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9738,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 9738,
											"end": 9899,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9821,
											"end": 9831,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 9816,
											"end": 9819,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 9812,
											"end": 9832,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 9809,
											"end": 9810,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9802,
											"end": 9833,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9856,
											"end": 9860,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 9853,
											"end": 9854,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9846,
											"end": 9861,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9884,
											"end": 9888,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9881,
											"end": 9882,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9874,
											"end": 9889,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9738,
											"end": 9899,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 9738,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9738,
											"end": 9899,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9525,
											"end": 9905,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9525,
											"end": 9905,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9525,
											"end": 9905,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9525,
											"end": 9905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10036,
											"end": 10554,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 10036,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10138,
											"end": 10140,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 10133,
											"end": 10136,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10130,
											"end": 10141,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10127,
											"end": 10548,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10127,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 10127,
											"end": 10548,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10174,
											"end": 10179,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10171,
											"end": 10172,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10164,
											"end": 10180,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10218,
											"end": 10222,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10215,
											"end": 10216,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10205,
											"end": 10223,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10288,
											"end": 10290,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 10276,
											"end": 10286,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10272,
											"end": 10291,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10269,
											"end": 10270,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 10265,
											"end": 10292,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 10259,
											"end": 10263,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10255,
											"end": 10293,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10324,
											"end": 10328,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10312,
											"end": 10322,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10309,
											"end": 10329,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10306,
											"end": 10353,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10306,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 10306,
											"end": 10353,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10347,
											"end": 10351,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10306,
											"end": 10353,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 10306,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10402,
											"end": 10404,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 10397,
											"end": 10400,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10393,
											"end": 10405,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10390,
											"end": 10391,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 10386,
											"end": 10406,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 10380,
											"end": 10384,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10376,
											"end": 10407,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10366,
											"end": 10407,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10366,
											"end": 10407,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10457,
											"end": 10538,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 10457,
											"end": 10538,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10475,
											"end": 10477,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10468,
											"end": 10473,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10465,
											"end": 10478,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10457,
											"end": 10538,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10457,
											"end": 10538,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 10457,
											"end": 10538,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10534,
											"end": 10535,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10520,
											"end": 10536,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10536,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10501,
											"end": 10502,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10490,
											"end": 10503,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10457,
											"end": 10538,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 10457,
											"end": 10538,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10457,
											"end": 10538,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 10457,
											"end": 10538,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10461,
											"end": 10464,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10461,
											"end": 10464,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10036,
											"end": 10554,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10036,
											"end": 10554,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10036,
											"end": 10554,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10036,
											"end": 10554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10730,
											"end": 12075,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 10730,
											"end": 12075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10856,
											"end": 10859,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10850,
											"end": 10860,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10883,
											"end": 10901,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10875,
											"end": 10881,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10872,
											"end": 10902,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10869,
											"end": 10925,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10869,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 10869,
											"end": 10925,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10905,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 10905,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 10905,
											"end": 10923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10905,
											"end": 10923,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 10905,
											"end": 10923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10934,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 11024,
											"end": 11030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10984,
											"end": 11022,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 11016,
											"end": 11020,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11010,
											"end": 11021,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10984,
											"end": 11022,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 10984,
											"end": 11022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10984,
											"end": 11022,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 10984,
											"end": 11022,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10978,
											"end": 10982,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10934,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 10934,
											"end": 11031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10934,
											"end": 11031,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 10934,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11086,
											"end": 11090,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11086,
											"end": 11090,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11143,
											"end": 11145,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 11132,
											"end": 11146,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11132,
											"end": 11146,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11160,
											"end": 11161,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 11155,
											"end": 11818,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11155,
											"end": 11818,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 11155,
											"end": 11818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 11155,
											"end": 11818,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11862,
											"end": 11863,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11879,
											"end": 11885,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11876,
											"end": 11965,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11876,
											"end": 11965,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 11876,
											"end": 11965,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11931,
											"end": 11950,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11931,
											"end": 11950,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11931,
											"end": 11950,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11925,
											"end": 11951,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11876,
											"end": 11965,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 11876,
											"end": 11965,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10687,
											"end": 10688,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 10683,
											"end": 10694,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10683,
											"end": 10694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10683,
											"end": 10694,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 10679,
											"end": 10703,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 10675,
											"end": 10704,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 10665,
											"end": 10705,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10711,
											"end": 10712,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 10662,
											"end": 10719,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 11978,
											"end": 12059,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11978,
											"end": 12059,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11125,
											"end": 12069,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 11125,
											"end": 12069,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11155,
											"end": 11818,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 11155,
											"end": 11818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9976,
											"end": 9990,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9976,
											"end": 9990,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9976,
											"end": 9990,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10020,
											"end": 10024,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10007,
											"end": 10025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10025,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11191,
											"end": 11211,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11211,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11211,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11309,
											"end": 11545,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 11309,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11323,
											"end": 11330,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11320,
											"end": 11321,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11317,
											"end": 11331,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 11309,
											"end": 11545,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11309,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 11309,
											"end": 11545,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11412,
											"end": 11431,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 11412,
											"end": 11431,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11412,
											"end": 11431,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11406,
											"end": 11432,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11391,
											"end": 11433,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11391,
											"end": 11433,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11504,
											"end": 11531,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 11504,
											"end": 11531,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11504,
											"end": 11531,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11504,
											"end": 11531,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 11472,
											"end": 11473,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 11460,
											"end": 11474,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11460,
											"end": 11474,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11460,
											"end": 11474,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11460,
											"end": 11474,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11339,
											"end": 11358,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11339,
											"end": 11358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11309,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 11309,
											"end": 11545,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11309,
											"end": 11545,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 11309,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11313,
											"end": 11316,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11573,
											"end": 11579,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11564,
											"end": 11571,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11561,
											"end": 11580,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 11558,
											"end": 11759,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11558,
											"end": 11759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 11558,
											"end": 11759,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11653,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11653,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11653,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11628,
											"end": 11654,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11717,
											"end": 11718,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 11713,
											"end": 11727,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 11713,
											"end": 11727,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11713,
											"end": 11727,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 11729,
											"end": 11732,
											"name": "PUSH",
											"source": 11,
											"value": "F8"
										},
										{
											"begin": 11709,
											"end": 11733,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11705,
											"end": 11742,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 11701,
											"end": 11743,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 11686,
											"end": 11744,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11671,
											"end": 11745,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11671,
											"end": 11745,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11558,
											"end": 11759,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 11558,
											"end": 11759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11558,
											"end": 11759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11558,
											"end": 11759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11805,
											"end": 11806,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 11796,
											"end": 11802,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11793,
											"end": 11794,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 11789,
											"end": 11803,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 11785,
											"end": 11807,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11779,
											"end": 11783,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11772,
											"end": 11808,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11125,
											"end": 12069,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 11125,
											"end": 12069,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11125,
											"end": 12069,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11125,
											"end": 12069,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11125,
											"end": 12069,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11125,
											"end": 12069,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10730,
											"end": 12075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10730,
											"end": 12075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10730,
											"end": 12075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12460,
											"end": 12737,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 12460,
											"end": 12737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12527,
											"end": 12533,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12580,
											"end": 12582,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12568,
											"end": 12577,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12559,
											"end": 12566,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12555,
											"end": 12578,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12583,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 12548,
											"end": 12600,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12548,
											"end": 12600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 12548,
											"end": 12600,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12596,
											"end": 12597,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12593,
											"end": 12594,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12586,
											"end": 12598,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12548,
											"end": 12600,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 12548,
											"end": 12600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12628,
											"end": 12637,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12622,
											"end": 12638,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12681,
											"end": 12686,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12674,
											"end": 12687,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12667,
											"end": 12688,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12660,
											"end": 12665,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12657,
											"end": 12689,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 12647,
											"end": 12707,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12703,
											"end": 12704,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12700,
											"end": 12701,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12693,
											"end": 12705,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14834,
											"end": 15220,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 14834,
											"end": 15220,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15066,
											"end": 15067,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15062,
											"end": 15063,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15057,
											"end": 15060,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 15053,
											"end": 15064,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 15049,
											"end": 15068,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15041,
											"end": 15047,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15037,
											"end": 15069,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15026,
											"end": 15035,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15019,
											"end": 15070,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15106,
											"end": 15112,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15101,
											"end": 15103,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15090,
											"end": 15099,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15079,
											"end": 15113,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15149,
											"end": 15151,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 15144,
											"end": 15146,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15133,
											"end": 15142,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15129,
											"end": 15147,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15122,
											"end": 15152,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15000,
											"end": 15004,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15169,
											"end": 15214,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 15210,
											"end": 15212,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 15199,
											"end": 15208,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15195,
											"end": 15213,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15187,
											"end": 15193,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15169,
											"end": 15214,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 15169,
											"end": 15214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15225,
											"end": 15694,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 15225,
											"end": 15694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15479,
											"end": 15480,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15475,
											"end": 15476,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15470,
											"end": 15473,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 15466,
											"end": 15477,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 15462,
											"end": 15481,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15454,
											"end": 15460,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15450,
											"end": 15482,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15439,
											"end": 15448,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15432,
											"end": 15483,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15519,
											"end": 15525,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15514,
											"end": 15516,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15503,
											"end": 15512,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15499,
											"end": 15517,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15492,
											"end": 15526,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15576,
											"end": 15582,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15569,
											"end": 15583,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15562,
											"end": 15584,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15557,
											"end": 15559,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15546,
											"end": 15555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15542,
											"end": 15560,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15535,
											"end": 15585,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15621,
											"end": 15624,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 15616,
											"end": 15618,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 15605,
											"end": 15614,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15601,
											"end": 15619,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15594,
											"end": 15625,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15413,
											"end": 15417,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15642,
											"end": 15688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 15683,
											"end": 15686,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 15672,
											"end": 15681,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15668,
											"end": 15687,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15660,
											"end": 15666,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15642,
											"end": 15688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 15642,
											"end": 15688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15642,
											"end": 15688,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 15642,
											"end": 15688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15634,
											"end": 15688,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 15225,
											"end": 15694,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15225,
											"end": 15694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
								"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"src/Loopso.sol",
								"src/interfaces/ILSP7Bridged.sol",
								"src/interfaces/ILoopso.sol",
								"src/interfaces/ITokenFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"RELAYER_ROLE()": "926d7d7f",
							"attestToken((address,uint256,uint8,uint8,string,string,address))": "31ba1648",
							"attestedTokens(bytes32)": "7f7b0109",
							"bridgeNonFungibleTokens(address,uint256,uint256,address)": "39578521",
							"bridgeNonFungibleTokensBack()": "f86da945",
							"bridgeTokens(address,uint256,uint256,address)": "33b15aad",
							"bridgeTokensBack(uint256,address,bytes32)": "63a4e95f",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"releaseNonFungibleTokens()": "4c597f8a",
							"releaseTokens(uint256,address,address)": "62a00971",
							"releaseWrappedNonFungibleTokens()": "eac213ce",
							"releaseWrappedTokens(uint256,address,bytes32)": "9a67e7f9",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setTokenFactory(address)": "2f73a9f8",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenFactory()": "e77772fe",
							"tokenTransfers(bytes32)": "1385c670"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenID\",\"type\":\"bytes32\"}],\"name\":\"TokenAttested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"transferID\",\"type\":\"bytes32\"}],\"name\":\"TokensBridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenID\",\"type\":\"bytes32\"}],\"name\":\"TokensBridgedBack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokensReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenID\",\"type\":\"bytes32\"}],\"name\":\"WrappedTokensReleased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAYER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenChain\",\"type\":\"uint256\"},{\"internalType\":\"enum ILoopso.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedTokenAddress\",\"type\":\"address\"}],\"internalType\":\"struct ILoopso.TokenAttestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attestToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"attestedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenChain\",\"type\":\"uint256\"},{\"internalType\":\"enum ILoopso.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstChain\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"}],\"name\":\"bridgeNonFungibleTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridgeNonFungibleTokensBack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstChain\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"}],\"name\":\"bridgeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_tokenID\",\"type\":\"bytes32\"}],\"name\":\"bridgeTokensBack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseNonFungibleTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"releaseTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseWrappedNonFungibleTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_tokenID\",\"type\":\"bytes32\"}],\"name\":\"releaseWrappedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITokenFactory\",\"name\":\"_tokenFactory\",\"type\":\"address\"}],\"name\":\"setTokenFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenFactory\",\"outputs\":[{\"internalType\":\"contract ITokenFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"tokenTransfers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"srcChain\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"srcAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dstChain\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"internalType\":\"struct ILoopso.TokenTransferBase\",\"name\":\"tokenTransfer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TokenAttested(bytes32)\":{\"details\":\"Emitted by attestToken. Means a new token is supported by the bridge. \"},\"TokensBridged(bytes32)\":{\"details\":\"Emitted by bridgeTokens. transferID is used by the relayer as it helps locate the transfer details. \"},\"TokensBridgedBack(uint256,address,bytes32)\":{\"details\":\"Emitted by bridgeTokensBack. Relayer should use indexed params to release the tokens on the other chain. \"},\"TokensReleased(uint256,address,address)\":{\"details\":\"Emitted by releaseTokens. This means briding back wrapped tokens to the source chain was successful. \"},\"WrappedTokensReleased(uint256,address,bytes32)\":{\"details\":\"Emitted by releaseWrappedTokens. This briding tokens was succesful. \"}},\"kind\":\"dev\",\"methods\":{\"attestToken((address,uint256,uint8,uint8,string,string,address))\":{\"details\":\"Called by bridge admin on the destination chain to attest a token. Only attested tokens can be bridged.\",\"params\":{\"attestation\":\"Contains details that are used to identify a token from chain A on chain B.\"}},\"bridgeTokens(address,uint256,uint256,address)\":{\"details\":\"Called by users to bridge tokens from source chain to destination chain.\",\"params\":{\"_amount\":\"The amount of tokens to bridge.\",\"_dstAddress\":\"Address the wrapped tokens will be released to on the destination chain. \",\"_dstChain\":\"Chain ID where we are bridging to.\",\"_token\":\"The address of the token to bridge.\"}},\"bridgeTokensBack(uint256,address,bytes32)\":{\"details\":\"Burns _amount of locked tokens on the destination chain, emits an event that relayer picks up.\",\"params\":{\"_amount\":\"Amount of tokens to bridge back.\",\"_to\":\"Address the original tokens will be released to.\",\"_tokenID\":\"ID of the TokenAttestation struct we use to identify a chain A token on chain B.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"releaseTokens(uint256,address,address)\":{\"details\":\"Called by the relayer after it picks up a TokensBridgedBackEvent. It releases the bridged back tokens to the user.\",\"params\":{\"_amount\":\"The amount of tokens to release.\",\"_to\":\"The address to release the tokens to.\",\"_token\":\"The address of the token to release.\"}},\"releaseWrappedTokens(uint256,address,bytes32)\":{\"details\":\"Called by the relayer after it picks up a bridge event from the source chain. It mints wrapped tokens equivalent to the tokens locked up on the source chain.\",\"params\":{\"_amount\":\"Amount of wrapped tokens to mint.\",\"_to\":\"The address the wrapped tokens will be minted to.\",\"_tokenID\":\"The ID we use to identify a chain A token on chain B.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Loopso.sol\":\"Loopso\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@lukso/=lib/lukso-foundry/src/\",\":@openzeppelin-contracts-upgradeable/=lib/lukso-foundry/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/Loopso.sol\":{\"keccak256\":\"0xb94b4cda83a577df9231ef0b7238b5cb627ed0ca1bb4e2504b75df31ea5d2234\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ec8e48e1c15e63d1e4f085881f9f184832735d47e8c48db79335ac7707005fc\",\"dweb:/ipfs/QmeHYGuAwyVWQUdSoCLycaLWg6m6PdJV75WMpSW92nUvFC\"]},\"src/interfaces/ILSP7Bridged.sol\":{\"keccak256\":\"0x83c1681d5023f4403f59151416ace4aec7a8692f296a021127b511d79a8350d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a55298f5be85fdeb11e9d3b0cf6c8954e1de09363a5d2b9c21c212ff42a7eb7e\",\"dweb:/ipfs/QmfPRwZnS3fWp6Cb4eDpSFqAYenkVGducfmm8WVUEL42SQ\"]},\"src/interfaces/ILoopso.sol\":{\"keccak256\":\"0xf3acada6924505ab91182534e45e553b87d343c13e0ce1a86c459f0579b4b44b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c4efa8d14a9ca18b11a5887ea4ea9dc23222e6d8e59e468c7195814f782690d\",\"dweb:/ipfs/Qmaa3Xh9Xuk8mt52Yadta2D1HZKzHmCN8z1vKT6zdQmLoZ\"]},\"src/interfaces/ITokenFactory.sol\":{\"keccak256\":\"0x56b6f6f6e3c51b11fc0fbbc303942dfd65f4a7f674781289bf4c7702b716b49d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0f7fcfcdeac3986c454a656dd18989763d705e83f1f6e10e4391aa842723e6a\",\"dweb:/ipfs/QmZWXRDpdzxkh7BcZthqNV6vR37hq1ttyN4Lxb1hwJH3Yi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "src/Loopso.sol:Loopso",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 653,
								"contract": "src/Loopso.sol:Loopso",
								"label": "attestedTokens",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(TokenAttestation)1058_storage)"
							},
							{
								"astId": 658,
								"contract": "src/Loopso.sol:Loopso",
								"label": "tokenTransfers",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_bytes32,t_struct(TokenTransfer)1077_storage)"
							},
							{
								"astId": 661,
								"contract": "src/Loopso.sol:Loopso",
								"label": "tokenFactory",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(ITokenFactory)1207"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ITokenFactory)1207": {
								"encoding": "inplace",
								"label": "contract ITokenFactory",
								"numberOfBytes": "20"
							},
							"t_enum(TokenType)1042": {
								"encoding": "inplace",
								"label": "enum ILoopso.TokenType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_bytes32,t_struct(TokenAttestation)1058_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct ILoopso.TokenAttestation)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenAttestation)1058_storage"
							},
							"t_mapping(t_bytes32,t_struct(TokenTransfer)1077_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct ILoopso.TokenTransfer)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenTransfer)1077_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "src/Loopso.sol:Loopso",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "src/Loopso.sol:Loopso",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(TokenAttestation)1058_storage": {
								"encoding": "inplace",
								"label": "struct ILoopso.TokenAttestation",
								"members": [
									{
										"astId": 1044,
										"contract": "src/Loopso.sol:Loopso",
										"label": "tokenAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1046,
										"contract": "src/Loopso.sol:Loopso",
										"label": "tokenChain",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1049,
										"contract": "src/Loopso.sol:Loopso",
										"label": "tokenType",
										"offset": 0,
										"slot": "2",
										"type": "t_enum(TokenType)1042"
									},
									{
										"astId": 1051,
										"contract": "src/Loopso.sol:Loopso",
										"label": "decimals",
										"offset": 1,
										"slot": "2",
										"type": "t_uint8"
									},
									{
										"astId": 1053,
										"contract": "src/Loopso.sol:Loopso",
										"label": "symbol",
										"offset": 0,
										"slot": "3",
										"type": "t_string_storage"
									},
									{
										"astId": 1055,
										"contract": "src/Loopso.sol:Loopso",
										"label": "name",
										"offset": 0,
										"slot": "4",
										"type": "t_string_storage"
									},
									{
										"astId": 1057,
										"contract": "src/Loopso.sol:Loopso",
										"label": "wrappedTokenAddress",
										"offset": 0,
										"slot": "5",
										"type": "t_address"
									}
								],
								"numberOfBytes": "192"
							},
							"t_struct(TokenTransfer)1077_storage": {
								"encoding": "inplace",
								"label": "struct ILoopso.TokenTransfer",
								"members": [
									{
										"astId": 1074,
										"contract": "src/Loopso.sol:Loopso",
										"label": "tokenTransfer",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(TokenTransferBase)1071_storage"
									},
									{
										"astId": 1076,
										"contract": "src/Loopso.sol:Loopso",
										"label": "amount",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(TokenTransferBase)1071_storage": {
								"encoding": "inplace",
								"label": "struct ILoopso.TokenTransferBase",
								"members": [
									{
										"astId": 1060,
										"contract": "src/Loopso.sol:Loopso",
										"label": "timestamp",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1062,
										"contract": "src/Loopso.sol:Loopso",
										"label": "srcChain",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1064,
										"contract": "src/Loopso.sol:Loopso",
										"label": "srcAddress",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1066,
										"contract": "src/Loopso.sol:Loopso",
										"label": "dstChain",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1068,
										"contract": "src/Loopso.sol:Loopso",
										"label": "dstAddress",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 1070,
										"contract": "src/Loopso.sol:Loopso",
										"label": "tokenAddress",
										"offset": 0,
										"slot": "5",
										"type": "t_address"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/ILSP7Bridged.sol": {
				"ILSP7Bridged": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "force",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(address,uint256,bytes)": "44d17187",
							"mint(address,uint256,bool,bytes)": "7580d920"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ILSP7Bridged.sol\":\"ILSP7Bridged\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@lukso/=lib/lukso-foundry/src/\",\":@openzeppelin-contracts-upgradeable/=lib/lukso-foundry/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/ILSP7Bridged.sol\":{\"keccak256\":\"0x83c1681d5023f4403f59151416ace4aec7a8692f296a021127b511d79a8350d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a55298f5be85fdeb11e9d3b0cf6c8954e1de09363a5d2b9c21c212ff42a7eb7e\",\"dweb:/ipfs/QmfPRwZnS3fWp6Cb4eDpSFqAYenkVGducfmm8WVUEL42SQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/ILoopso.sol": {
				"ILoopso": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "tokenID",
									"type": "bytes32"
								}
							],
							"name": "TokenAttested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "transferID",
									"type": "bytes32"
								}
							],
							"name": "TokensBridged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "tokenID",
									"type": "bytes32"
								}
							],
							"name": "TokensBridgedBack",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "TokensReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "tokenID",
									"type": "bytes32"
								}
							],
							"name": "WrappedTokensReleased",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenChain",
											"type": "uint256"
										},
										{
											"internalType": "enum ILoopso.TokenType",
											"name": "tokenType",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "wrappedTokenAddress",
											"type": "address"
										}
									],
									"internalType": "struct ILoopso.TokenAttestation",
									"name": "attestation",
									"type": "tuple"
								}
							],
							"name": "attestToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_dstChain",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_dstAddress",
									"type": "address"
								}
							],
							"name": "bridgeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_tokenID",
									"type": "bytes32"
								}
							],
							"name": "bridgeTokensBack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "releaseTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_tokenID",
									"type": "bytes32"
								}
							],
							"name": "releaseWrappedTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"TokenAttested(bytes32)": {
								"details": "Emitted by attestToken. Means a new token is supported by the bridge. "
							},
							"TokensBridged(bytes32)": {
								"details": "Emitted by bridgeTokens. transferID is used by the relayer as it helps locate the transfer details. "
							},
							"TokensBridgedBack(uint256,address,bytes32)": {
								"details": "Emitted by bridgeTokensBack. Relayer should use indexed params to release the tokens on the other chain. "
							},
							"TokensReleased(uint256,address,address)": {
								"details": "Emitted by releaseTokens. This means briding back wrapped tokens to the source chain was successful. "
							},
							"WrappedTokensReleased(uint256,address,bytes32)": {
								"details": "Emitted by releaseWrappedTokens. This briding tokens was succesful. "
							}
						},
						"kind": "dev",
						"methods": {
							"attestToken((address,uint256,uint8,uint8,string,string,address))": {
								"details": "Called by bridge admin on the destination chain to attest a token. Only attested tokens can be bridged.",
								"params": {
									"attestation": "Contains details that are used to identify a token from chain A on chain B."
								}
							},
							"bridgeTokens(address,uint256,uint256,address)": {
								"details": "Called by users to bridge tokens from source chain to destination chain.",
								"params": {
									"_amount": "The amount of tokens to bridge.",
									"_dstAddress": "Address the wrapped tokens will be released to on the destination chain. ",
									"_dstChain": "Chain ID where we are bridging to.",
									"_token": "The address of the token to bridge."
								}
							},
							"bridgeTokensBack(uint256,address,bytes32)": {
								"details": "Burns _amount of locked tokens on the destination chain, emits an event that relayer picks up.",
								"params": {
									"_amount": "Amount of tokens to bridge back.",
									"_to": "Address the original tokens will be released to.",
									"_tokenID": "ID of the TokenAttestation struct we use to identify a chain A token on chain B."
								}
							},
							"releaseTokens(uint256,address,address)": {
								"details": "Called by the relayer after it picks up a TokensBridgedBackEvent. It releases the bridged back tokens to the user.",
								"params": {
									"_amount": "The amount of tokens to release.",
									"_to": "The address to release the tokens to.",
									"_token": "The address of the token to release."
								}
							},
							"releaseWrappedTokens(uint256,address,bytes32)": {
								"details": "Called by the relayer after it picks up a bridge event from the source chain. It mints wrapped tokens equivalent to the tokens locked up on the source chain.",
								"params": {
									"_amount": "Amount of wrapped tokens to mint.",
									"_to": "The address the wrapped tokens will be minted to.",
									"_tokenID": "The ID we use to identify a chain A token on chain B."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"attestToken((address,uint256,uint8,uint8,string,string,address))": "31ba1648",
							"bridgeTokens(address,uint256,uint256,address)": "33b15aad",
							"bridgeTokensBack(uint256,address,bytes32)": "63a4e95f",
							"releaseTokens(uint256,address,address)": "62a00971",
							"releaseWrappedTokens(uint256,address,bytes32)": "9a67e7f9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenID\",\"type\":\"bytes32\"}],\"name\":\"TokenAttested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"transferID\",\"type\":\"bytes32\"}],\"name\":\"TokensBridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenID\",\"type\":\"bytes32\"}],\"name\":\"TokensBridgedBack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokensReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenID\",\"type\":\"bytes32\"}],\"name\":\"WrappedTokensReleased\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenChain\",\"type\":\"uint256\"},{\"internalType\":\"enum ILoopso.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedTokenAddress\",\"type\":\"address\"}],\"internalType\":\"struct ILoopso.TokenAttestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attestToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstChain\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"}],\"name\":\"bridgeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_tokenID\",\"type\":\"bytes32\"}],\"name\":\"bridgeTokensBack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"releaseTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_tokenID\",\"type\":\"bytes32\"}],\"name\":\"releaseWrappedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TokenAttested(bytes32)\":{\"details\":\"Emitted by attestToken. Means a new token is supported by the bridge. \"},\"TokensBridged(bytes32)\":{\"details\":\"Emitted by bridgeTokens. transferID is used by the relayer as it helps locate the transfer details. \"},\"TokensBridgedBack(uint256,address,bytes32)\":{\"details\":\"Emitted by bridgeTokensBack. Relayer should use indexed params to release the tokens on the other chain. \"},\"TokensReleased(uint256,address,address)\":{\"details\":\"Emitted by releaseTokens. This means briding back wrapped tokens to the source chain was successful. \"},\"WrappedTokensReleased(uint256,address,bytes32)\":{\"details\":\"Emitted by releaseWrappedTokens. This briding tokens was succesful. \"}},\"kind\":\"dev\",\"methods\":{\"attestToken((address,uint256,uint8,uint8,string,string,address))\":{\"details\":\"Called by bridge admin on the destination chain to attest a token. Only attested tokens can be bridged.\",\"params\":{\"attestation\":\"Contains details that are used to identify a token from chain A on chain B.\"}},\"bridgeTokens(address,uint256,uint256,address)\":{\"details\":\"Called by users to bridge tokens from source chain to destination chain.\",\"params\":{\"_amount\":\"The amount of tokens to bridge.\",\"_dstAddress\":\"Address the wrapped tokens will be released to on the destination chain. \",\"_dstChain\":\"Chain ID where we are bridging to.\",\"_token\":\"The address of the token to bridge.\"}},\"bridgeTokensBack(uint256,address,bytes32)\":{\"details\":\"Burns _amount of locked tokens on the destination chain, emits an event that relayer picks up.\",\"params\":{\"_amount\":\"Amount of tokens to bridge back.\",\"_to\":\"Address the original tokens will be released to.\",\"_tokenID\":\"ID of the TokenAttestation struct we use to identify a chain A token on chain B.\"}},\"releaseTokens(uint256,address,address)\":{\"details\":\"Called by the relayer after it picks up a TokensBridgedBackEvent. It releases the bridged back tokens to the user.\",\"params\":{\"_amount\":\"The amount of tokens to release.\",\"_to\":\"The address to release the tokens to.\",\"_token\":\"The address of the token to release.\"}},\"releaseWrappedTokens(uint256,address,bytes32)\":{\"details\":\"Called by the relayer after it picks up a bridge event from the source chain. It mints wrapped tokens equivalent to the tokens locked up on the source chain.\",\"params\":{\"_amount\":\"Amount of wrapped tokens to mint.\",\"_to\":\"The address the wrapped tokens will be minted to.\",\"_tokenID\":\"The ID we use to identify a chain A token on chain B.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ILoopso.sol\":\"ILoopso\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@lukso/=lib/lukso-foundry/src/\",\":@openzeppelin-contracts-upgradeable/=lib/lukso-foundry/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/ILoopso.sol\":{\"keccak256\":\"0xf3acada6924505ab91182534e45e553b87d343c13e0ce1a86c459f0579b4b44b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c4efa8d14a9ca18b11a5887ea4ea9dc23222e6d8e59e468c7195814f782690d\",\"dweb:/ipfs/Qmaa3Xh9Xuk8mt52Yadta2D1HZKzHmCN8z1vKT6zdQmLoZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/ITokenFactory.sol": {
				"ITokenFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "masterLSP7",
									"type": "address"
								}
							],
							"name": "MasterLSP7Set",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "masterLSP8",
									"type": "address"
								}
							],
							"name": "MasterLSP8Set",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "NewLSP7",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "NewLSP8",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"name": "createNewLSP7",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"name": "createNewLSP8",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createNewLSP7(string,string)": "8fe59807",
							"createNewLSP8(string,string)": "c2c2b31f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"masterLSP7\",\"type\":\"address\"}],\"name\":\"MasterLSP7Set\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"masterLSP8\",\"type\":\"address\"}],\"name\":\"MasterLSP8Set\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"NewLSP7\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"NewLSP8\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"createNewLSP7\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"createNewLSP8\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ITokenFactory.sol\":\"ITokenFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@lukso/=lib/lukso-foundry/src/\",\":@openzeppelin-contracts-upgradeable/=lib/lukso-foundry/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/ITokenFactory.sol\":{\"keccak256\":\"0x56b6f6f6e3c51b11fc0fbbc303942dfd65f4a7f674781289bf4c7702b716b49d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0f7fcfcdeac3986c454a656dd18989763d705e83f1f6e10e4391aa842723e6a\",\"dweb:/ipfs/QmZWXRDpdzxkh7BcZthqNV6vR37hq1ttyN4Lxb1hwJH3Yi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							595
						],
						"ERC165": [
							619
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 596,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 595,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 620,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 619,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 595,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 619,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								619,
								631,
								378,
								595
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										618
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 618,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 585,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 585,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						]
					},
					"id": 457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 456,
							"linearizedBaseContracts": [
								456
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 390,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 399,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 456,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 456,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 456,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 456,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 456,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 456,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 457,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								390,
								399
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							631
						],
						"IERC721": [
							573
						]
					},
					"id": 574,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:3"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 460,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 574,
							"sourceUnit": 632,
							"src": "134:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 459,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 631,
										"src": "142:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 462,
										"name": "IERC165",
										"nameLocations": [
											"287:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 631,
										"src": "287:7:3"
									},
									"id": 463,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 461,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 573,
							"linearizedBaseContracts": [
								573,
								631
							],
							"name": "IERC721",
							"nameLocation": "276:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 472,
									"name": "Transfer",
									"nameLocation": "400:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "409:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "431:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "451:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:3"
									},
									"src": "394:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 481,
									"name": "Approval",
									"nameLocation": "587:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "596:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "619:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "645:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:3"
									},
									"src": "581:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 490,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "819:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "842:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "868:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:3"
									},
									"src": "798:85:3"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "989:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:3"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1027:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:3"
									},
									"scope": 573,
									"src": "970:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1203:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1243:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:3"
									},
									"scope": 573,
									"src": "1186:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1860:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1874:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1903:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:3"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:3"
									},
									"scope": 573,
									"src": "1834:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2701:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:3"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:3"
									},
									"scope": 573,
									"src": "2649:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3492:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3506:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:3"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:3"
									},
									"scope": 573,
									"src": "3470:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "4024:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "4036:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:3"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:3"
									},
									"scope": 573,
									"src": "4007:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4415:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4433:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:3"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:3"
									},
									"scope": 573,
									"src": "4388:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 562,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4628:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:3"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4668:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:3"
									},
									"scope": 573,
									"src": "4607:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4861:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4876:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:3"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4917:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:3"
									},
									"scope": 573,
									"src": "4835:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 574,
							"src": "266:4659:3",
							"usedErrors": [],
							"usedEvents": [
								472,
								481,
								490
							]
						}
					],
					"src": "108:4818:3"
				},
				"id": 3
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							595
						]
					},
					"id": 596,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 575,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 576,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 595,
							"linearizedBaseContracts": [
								595
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 581,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 580,
												"id": 583,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 595,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 590,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 589,
												"id": 592,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 595,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 596,
							"src": "624:235:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:4"
				},
				"id": 4
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							619
						],
						"IERC165": [
							631
						]
					},
					"id": 620,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 597,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:5"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 599,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 620,
							"sourceUnit": 632,
							"src": "140:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 598,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 631,
										"src": "148:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 601,
										"name": "IERC165",
										"nameLocations": [
											"687:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 631,
										"src": "687:7:5"
									},
									"id": 602,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:5"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 600,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 619,
							"linearizedBaseContracts": [
								619,
								631
							],
							"name": "ERC165",
							"nameLocation": "677:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "844:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 610,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "861:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 612,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "881:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$631_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$631_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 611,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$631",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 609,
												"id": 616,
												"nodeType": "Return",
												"src": "854:47:5"
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "789:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 604,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:5"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "838:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:5"
									},
									"scope": 619,
									"src": "762:146:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 620,
							"src": "659:251:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:5"
				},
				"id": 5
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							631
						]
					},
					"id": 632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 621,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 622,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 631,
							"linearizedBaseContracts": [
								631
							],
							"name": "IERC165",
							"nameLocation": "431:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "817:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 624,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:6"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "860:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:6"
									},
									"scope": 631,
									"src": "790:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 632,
							"src": "421:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:6"
				},
				"id": 6
			},
			"src/Loopso.sol": {
				"ast": {
					"absolutePath": "src/Loopso.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							595
						],
						"ERC165": [
							619
						],
						"IAccessControl": [
							378
						],
						"IERC165": [
							631
						],
						"IERC20": [
							456
						],
						"IERC721": [
							573
						],
						"ILSP7Bridged": [
							1037
						],
						"ILoopso": [
							1170
						],
						"ITokenFactory": [
							1207
						],
						"Loopso": [
							1014
						]
					},
					"id": 1015,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 633,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 634,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1015,
							"sourceUnit": 296,
							"src": "58:58:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1015,
							"sourceUnit": 457,
							"src": "117:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 636,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1015,
							"sourceUnit": 574,
							"src": "174:58:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/ILoopso.sol",
							"file": "./interfaces/ILoopso.sol",
							"id": 637,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1015,
							"sourceUnit": 1171,
							"src": "233:34:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/ITokenFactory.sol",
							"file": "./interfaces/ITokenFactory.sol",
							"id": 638,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1015,
							"sourceUnit": 1208,
							"src": "268:40:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/ILSP7Bridged.sol",
							"file": "./interfaces/ILSP7Bridged.sol",
							"id": 639,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1015,
							"sourceUnit": 1038,
							"src": "309:39:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 640,
										"name": "AccessControl",
										"nameLocations": [
											"369:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "369:13:7"
									},
									"id": 641,
									"nodeType": "InheritanceSpecifier",
									"src": "369:13:7"
								},
								{
									"baseName": {
										"id": 642,
										"name": "ILoopso",
										"nameLocations": [
											"384:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1170,
										"src": "384:7:7"
									},
									"id": 643,
									"nodeType": "InheritanceSpecifier",
									"src": "384:7:7"
								}
							],
							"canonicalName": "Loopso",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1014,
							"linearizedBaseContracts": [
								1014,
								1170,
								295,
								619,
								631,
								378,
								595
							],
							"name": "Loopso",
							"nameLocation": "359:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "926d7d7f",
									"id": 648,
									"mutability": "constant",
									"name": "RELAYER_ROLE",
									"nameLocation": "422:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "398:64:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 644,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "398:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "52454c415945525f524f4c45",
												"id": 646,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "447:14:7",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc4",
													"typeString": "literal_string \"RELAYER_ROLE\""
												},
												"value": "RELAYER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc4",
													"typeString": "literal_string \"RELAYER_ROLE\""
												}
											],
											"id": 645,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "437:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 647,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "437:25:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7f7b0109",
									"id": 653,
									"mutability": "mutable",
									"name": "attestedTokens",
									"nameLocation": "553:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "509:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenAttestation_$1058_storage_$",
										"typeString": "mapping(bytes32 => struct ILoopso.TokenAttestation)"
									},
									"typeName": {
										"id": 652,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 649,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "517:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "509:36:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenAttestation_$1058_storage_$",
											"typeString": "mapping(bytes32 => struct ILoopso.TokenAttestation)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 651,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 650,
												"name": "TokenAttestation",
												"nameLocations": [
													"528:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1058,
												"src": "528:16:7"
											},
											"referencedDeclaration": 1058,
											"src": "528:16:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenAttestation_$1058_storage_ptr",
												"typeString": "struct ILoopso.TokenAttestation"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1385c670",
									"id": 658,
									"mutability": "mutable",
									"name": "tokenTransfers",
									"nameLocation": "666:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "624:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenTransfer_$1077_storage_$",
										"typeString": "mapping(bytes32 => struct ILoopso.TokenTransfer)"
									},
									"typeName": {
										"id": 657,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 654,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "632:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "624:34:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenTransfer_$1077_storage_$",
											"typeString": "mapping(bytes32 => struct ILoopso.TokenTransfer)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 656,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 655,
												"name": "TokenTransfer",
												"nameLocations": [
													"644:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1077,
												"src": "644:13:7"
											},
											"referencedDeclaration": 1077,
											"src": "644:13:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenTransfer_$1077_storage_ptr",
												"typeString": "struct ILoopso.TokenTransfer"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e77772fe",
									"id": 661,
									"mutability": "mutable",
									"name": "tokenFactory",
									"nameLocation": "756:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "735:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITokenFactory_$1207",
										"typeString": "contract ITokenFactory"
									},
									"typeName": {
										"id": 660,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 659,
											"name": "ITokenFactory",
											"nameLocations": [
												"735:13:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1207,
											"src": "735:13:7"
										},
										"referencedDeclaration": 1207,
										"src": "735:13:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITokenFactory_$1207",
											"typeString": "contract ITokenFactory"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "789:116:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "810:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 666,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "830:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "834:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "830:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 664,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "799:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "799:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "799:42:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 671,
															"name": "RELAYER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "865:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 672,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "879:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 670,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "851:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "851:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "851:47:7"
											}
										]
									},
									"id": 676,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "786:2:7"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:0:7"
									},
									"scope": 1014,
									"src": "775:130:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "932:58:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 679,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "953:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 678,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "942:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "942:30:7"
											},
											{
												"id": 682,
												"nodeType": "PlaceholderStatement",
												"src": "982:1:7"
											}
										]
									},
									"id": 684,
									"name": "onlyAdmin",
									"nameLocation": "920:9:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "929:2:7"
									},
									"src": "911:79:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "1019:52:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 687,
															"name": "RELAYER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "1040:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 686,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "1029:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1029:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "1029:24:7"
											},
											{
												"id": 690,
												"nodeType": "PlaceholderStatement",
												"src": "1063:1:7"
											}
										]
									},
									"id": 692,
									"name": "onlyRelayer",
									"nameLocation": "1005:11:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:2:7"
									},
									"src": "996:75:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1127
									],
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "1154:590:7",
										"statements": [
											{
												"assignments": [
													701
												],
												"declarations": [
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "_newTokenAddress",
														"nameLocation": "1172:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 759,
														"src": "1164:24:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 700,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1164:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 702,
												"nodeType": "VariableDeclarationStatement",
												"src": "1164:24:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_TokenType_$1042",
														"typeString": "enum ILoopso.TokenType"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 703,
															"name": "attestation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "1203:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
																"typeString": "struct ILoopso.TokenAttestation memory"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1215:9:7",
														"memberName": "tokenType",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1049,
														"src": "1203:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_TokenType_$1042",
															"typeString": "enum ILoopso.TokenType"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 705,
															"name": "TokenType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "1228:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_TokenType_$1042_$",
																"typeString": "type(enum ILoopso.TokenType)"
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1238:8:7",
														"memberName": "Fungible",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1040,
														"src": "1228:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_TokenType_$1042",
															"typeString": "enum ILoopso.TokenType"
														}
													},
													"src": "1203:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 729,
													"nodeType": "Block",
													"src": "1362:108:7",
													"statements": [
														{
															"expression": {
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 719,
																	"name": "_newTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "1376:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 722,
																				"name": "attestation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 695,
																				"src": "1422:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
																					"typeString": "struct ILoopso.TokenAttestation memory"
																				}
																			},
																			"id": 723,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1434:4:7",
																			"memberName": "name",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1055,
																			"src": "1422:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		{
																			"expression": {
																				"id": 724,
																				"name": "attestation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 695,
																				"src": "1440:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
																					"typeString": "struct ILoopso.TokenAttestation memory"
																				}
																			},
																			"id": 725,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1452:6:7",
																			"memberName": "symbol",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1053,
																			"src": "1440:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			},
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"id": 720,
																			"name": "tokenFactory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 661,
																			"src": "1395:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ITokenFactory_$1207",
																				"typeString": "contract ITokenFactory"
																			}
																		},
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1408:13:7",
																		"memberName": "createNewLSP8",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1206,
																		"src": "1395:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_$",
																			"typeString": "function (string memory,string memory) external returns (address)"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1395:64:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1376:83:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 728,
															"nodeType": "ExpressionStatement",
															"src": "1376:83:7"
														}
													]
												},
												"id": 730,
												"nodeType": "IfStatement",
												"src": "1199:271:7",
												"trueBody": {
													"id": 718,
													"nodeType": "Block",
													"src": "1248:108:7",
													"statements": [
														{
															"expression": {
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 708,
																	"name": "_newTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "1262:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 711,
																				"name": "attestation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 695,
																				"src": "1308:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
																					"typeString": "struct ILoopso.TokenAttestation memory"
																				}
																			},
																			"id": 712,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1320:4:7",
																			"memberName": "name",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1055,
																			"src": "1308:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		{
																			"expression": {
																				"id": 713,
																				"name": "attestation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 695,
																				"src": "1326:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
																					"typeString": "struct ILoopso.TokenAttestation memory"
																				}
																			},
																			"id": 714,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1338:6:7",
																			"memberName": "symbol",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1053,
																			"src": "1326:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			},
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"id": 709,
																			"name": "tokenFactory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 661,
																			"src": "1281:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ITokenFactory_$1207",
																				"typeString": "contract ITokenFactory"
																			}
																		},
																		"id": 710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1294:13:7",
																		"memberName": "createNewLSP7",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1197,
																		"src": "1281:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_$",
																			"typeString": "function (string memory,string memory) external returns (address)"
																		}
																	},
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1281:64:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1262:83:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 717,
															"nodeType": "ExpressionStatement",
															"src": "1262:83:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 731,
															"name": "attestation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "1480:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
																"typeString": "struct ILoopso.TokenAttestation memory"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1492:19:7",
														"memberName": "wrappedTokenAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1057,
														"src": "1480:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 734,
														"name": "_newTokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "1514:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1480:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "1480:50:7"
											},
											{
												"assignments": [
													738
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "attestationID",
														"nameLocation": "1548:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 759,
														"src": "1540:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 737,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1540:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 748,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 742,
																		"name": "attestation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "1591:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
																			"typeString": "struct ILoopso.TokenAttestation memory"
																		}
																	},
																	"id": 743,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1603:12:7",
																	"memberName": "tokenAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1044,
																	"src": "1591:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 744,
																		"name": "attestation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "1617:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
																			"typeString": "struct ILoopso.TokenAttestation memory"
																		}
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1629:10:7",
																	"memberName": "tokenChain",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1046,
																	"src": "1617:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 740,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1574:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1578:12:7",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1574:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1574:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 739,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1564:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1564:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1540:101:7"
											},
											{
												"expression": {
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 749,
															"name": "attestedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "1651:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenAttestation_$1058_storage_$",
																"typeString": "mapping(bytes32 => struct ILoopso.TokenAttestation storage ref)"
															}
														},
														"id": 751,
														"indexExpression": {
															"id": 750,
															"name": "attestationID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "1666:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1651:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenAttestation_$1058_storage",
															"typeString": "struct ILoopso.TokenAttestation storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 752,
														"name": "attestation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "1683:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
															"typeString": "struct ILoopso.TokenAttestation memory"
														}
													},
													"src": "1651:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenAttestation_$1058_storage",
														"typeString": "struct ILoopso.TokenAttestation storage ref"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "1651:43:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 756,
															"name": "attestationID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "1723:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 755,
														"name": "TokenAttested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "1709:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1709:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "EmitStatement",
												"src": "1704:33:7"
											}
										]
									},
									"functionSelector": "31ba1648",
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 698,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 697,
												"name": "onlyAdmin",
												"nameLocations": [
													"1144:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 684,
												"src": "1144:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1144:9:7"
										}
									],
									"name": "attestToken",
									"nameLocation": "1086:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "attestation",
												"nameLocation": "1122:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "1098:35:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
													"typeString": "struct ILoopso.TokenAttestation"
												},
												"typeName": {
													"id": 694,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 693,
														"name": "TokenAttestation",
														"nameLocations": [
															"1098:16:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1058,
														"src": "1098:16:7"
													},
													"referencedDeclaration": 1058,
													"src": "1098:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenAttestation_$1058_storage_ptr",
														"typeString": "struct ILoopso.TokenAttestation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1097:37:7"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1154:0:7"
									},
									"scope": 1014,
									"src": "1077:667:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1139
									],
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "1892:967:7",
										"statements": [
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2046:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 837,
														"src": "2041:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 771,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2041:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 785,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 777,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2084:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2088:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2084:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 781,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2104:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Loopso_$1014",
																		"typeString": "contract Loopso"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Loopso_$1014",
																		"typeString": "contract Loopso"
																	}
																],
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2096:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 779,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2096:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "2111:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 774,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "2063:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 773,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "2056:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2056:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2071:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 455,
														"src": "2056:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2056:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2041:78:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 787,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "2137:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65642e204d616b6520737572652062726964676520697320617070726f76656420746f207370656e6420746f6b656e732e",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2146:64:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e4fa644555aceecc86bc3c42ad69ec29856b55b5e916527214a8175faefbe49",
																"typeString": "literal_string \"Transfer failed. Make sure bridge is approved to spend tokens.\""
															},
															"value": "Transfer failed. Make sure bridge is approved to spend tokens."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e4fa644555aceecc86bc3c42ad69ec29856b55b5e916527214a8175faefbe49",
																"typeString": "literal_string \"Transfer failed. Make sure bridge is approved to spend tokens.\""
															}
														],
														"id": 786,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2129:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2129:82:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "2129:82:7"
											},
											{
												"assignments": [
													793
												],
												"declarations": [
													{
														"constant": false,
														"id": 793,
														"mutability": "mutable",
														"name": "_transfer",
														"nameLocation": "2284:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 837,
														"src": "2263:30:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenTransfer_$1077_memory_ptr",
															"typeString": "struct ILoopso.TokenTransfer"
														},
														"typeName": {
															"id": 792,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 791,
																"name": "TokenTransfer",
																"nameLocations": [
																	"2263:13:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1077,
																"src": "2263:13:7"
															},
															"referencedDeclaration": 1077,
															"src": "2263:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenTransfer_$1077_storage_ptr",
																"typeString": "struct ILoopso.TokenTransfer"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 808,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 796,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2358:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2364:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2358:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 798,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2391:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2397:7:7",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "2391:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 800,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2422:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2426:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2422:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 802,
																	"name": "_dstChain",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "2450:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 803,
																	"name": "_dstAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "2477:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 804,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "2506:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 795,
																"name": "TokenTransferBase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "2323:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_TokenTransferBase_$1071_storage_ptr_$",
																	"typeString": "type(struct ILoopso.TokenTransferBase storage pointer)"
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2323:203:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenTransferBase_$1071_memory_ptr",
																"typeString": "struct ILoopso.TokenTransferBase memory"
															}
														},
														{
															"id": 806,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "2540:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TokenTransferBase_$1071_memory_ptr",
																"typeString": "struct ILoopso.TokenTransferBase memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"name": "TokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "2296:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_TokenTransfer_$1077_storage_ptr_$",
															"typeString": "type(struct ILoopso.TokenTransfer storage pointer)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2296:261:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenTransfer_$1077_memory_ptr",
														"typeString": "struct ILoopso.TokenTransfer memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2263:294:7"
											},
											{
												"assignments": [
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "_transferID",
														"nameLocation": "2575:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 837,
														"src": "2567:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 809,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2567:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 826,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 814,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2616:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2622:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2616:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 816,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2633:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2639:7:7",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "2633:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 818,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2648:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2652:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2648:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 820,
																	"name": "_dstChain",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "2659:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 821,
																	"name": "_dstAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "2669:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 822,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "2681:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 823,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "2688:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 812,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2599:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2603:12:7",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2599:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2599:97:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 811,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2589:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2589:108:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2567:130:7"
											},
											{
												"expression": {
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 827,
															"name": "tokenTransfers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "2747:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenTransfer_$1077_storage_$",
																"typeString": "mapping(bytes32 => struct ILoopso.TokenTransfer storage ref)"
															}
														},
														"id": 829,
														"indexExpression": {
															"id": 828,
															"name": "_transferID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "2762:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2747:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenTransfer_$1077_storage",
															"typeString": "struct ILoopso.TokenTransfer storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 830,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "2777:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenTransfer_$1077_memory_ptr",
															"typeString": "struct ILoopso.TokenTransfer memory"
														}
													},
													"src": "2747:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenTransfer_$1077_storage",
														"typeString": "struct ILoopso.TokenTransfer storage ref"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "2747:39:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 834,
															"name": "_transferID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "2840:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 833,
														"name": "TokensBridged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "2826:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2826:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "EmitStatement",
												"src": "2821:31:7"
											}
										]
									},
									"functionSelector": "33b15aad",
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeTokens",
									"nameLocation": "1759:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1789:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1781:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1813:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1805:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1805:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "_dstChain",
												"nameLocation": "1838:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1830:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "_dstAddress",
												"nameLocation": "1865:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1857:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1857:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:111:7"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1892:0:7"
									},
									"scope": 1014,
									"src": "1750:1109:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "2981:23:7",
										"statements": []
									},
									"functionSelector": "39578521",
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeNonFungibleTokens",
									"nameLocation": "2874:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2906:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "2898:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "2922:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "2914:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2914:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "_dstChain",
												"nameLocation": "2940:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "2932:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "_dstAddress",
												"nameLocation": "2959:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "2951:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2951:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2897:74:7"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2981:0:7"
									},
									"scope": 1014,
									"src": "2865:139:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1149
									],
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "3093:414:7",
										"statements": [
											{
												"assignments": [
													861
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "attestedToken",
														"nameLocation": "3160:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "3136:37:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
															"typeString": "struct ILoopso.TokenAttestation"
														},
														"typeName": {
															"id": 860,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 859,
																"name": "TokenAttestation",
																"nameLocations": [
																	"3136:16:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1058,
																"src": "3136:16:7"
															},
															"referencedDeclaration": 1058,
															"src": "3136:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenAttestation_$1058_storage_ptr",
																"typeString": "struct ILoopso.TokenAttestation"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 865,
												"initialValue": {
													"baseExpression": {
														"id": 862,
														"name": "attestedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "3176:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenAttestation_$1058_storage_$",
															"typeString": "mapping(bytes32 => struct ILoopso.TokenAttestation storage ref)"
														}
													},
													"id": 864,
													"indexExpression": {
														"id": 863,
														"name": "_tokenID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "3191:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3176:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenAttestation_$1058_storage",
														"typeString": "struct ILoopso.TokenAttestation storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3136:64:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 867,
																	"name": "attestedToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "3218:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
																		"typeString": "struct ILoopso.TokenAttestation memory"
																	}
																},
																"id": 868,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3232:12:7",
																"memberName": "tokenAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1044,
																"src": "3218:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3256:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3248:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 869,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3248:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3248:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3218:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964205f746f6b656e4944",
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3260:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_985b337fa2ec4100ef9944920998f9c5ef3f9d75b134cead835819dcecc21f86",
																"typeString": "literal_string \"Invalid _tokenID\""
															},
															"value": "Invalid _tokenID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_985b337fa2ec4100ef9944920998f9c5ef3f9d75b134cead835819dcecc21f86",
																"typeString": "literal_string \"Invalid _tokenID\""
															}
														],
														"id": 866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3210:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3210:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "3210:69:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 882,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3378:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3382:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3378:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "3390:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3409:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "3399:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 885,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3403:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3399:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 878,
																		"name": "attestedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "3338:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
																			"typeString": "struct ILoopso.TokenAttestation memory"
																		}
																	},
																	"id": 879,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3352:19:7",
																	"memberName": "wrappedTokenAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1057,
																	"src": "3338:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 877,
																"name": "ILSP7Bridged",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "3325:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ILSP7Bridged_$1037_$",
																	"typeString": "type(contract ILSP7Bridged)"
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3325:47:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILSP7Bridged_$1037",
																"typeString": "contract ILSP7Bridged"
															}
														},
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3373:4:7",
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1036,
														"src": "3325:52:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory) external"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "3325:87:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 892,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "3477:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 893,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "3486:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 894,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "3491:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 891,
														"name": "TokensBridgedBack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "3459:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$returns$__$",
															"typeString": "function (uint256,address,bytes32)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3459:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "EmitStatement",
												"src": "3454:46:7"
											}
										]
									},
									"functionSelector": "63a4e95f",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeTokensBack",
									"nameLocation": "3019:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3044:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "3036:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3036:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3061:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "3053:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3053:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "3074:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "3066:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 855,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3066:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3035:48:7"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3093:0:7"
									},
									"scope": 1014,
									"src": "3010:497:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "3561:23:7",
										"statements": []
									},
									"functionSelector": "f86da945",
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeNonFungibleTokensBack",
									"nameLocation": "3522:27:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3549:2:7"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3561:0:7"
									},
									"scope": 1014,
									"src": "3513:71:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1169
									],
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "3689:434:7",
										"statements": [
											{
												"assignments": [
													915
												],
												"declarations": [
													{
														"constant": false,
														"id": 915,
														"mutability": "mutable",
														"name": "attestedToken",
														"nameLocation": "3760:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 951,
														"src": "3736:37:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
															"typeString": "struct ILoopso.TokenAttestation"
														},
														"typeName": {
															"id": 914,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 913,
																"name": "TokenAttestation",
																"nameLocations": [
																	"3736:16:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1058,
																"src": "3736:16:7"
															},
															"referencedDeclaration": 1058,
															"src": "3736:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenAttestation_$1058_storage_ptr",
																"typeString": "struct ILoopso.TokenAttestation"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"baseExpression": {
														"id": 916,
														"name": "attestedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "3776:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenAttestation_$1058_storage_$",
															"typeString": "mapping(bytes32 => struct ILoopso.TokenAttestation storage ref)"
														}
													},
													"id": 918,
													"indexExpression": {
														"id": 917,
														"name": "_tokenID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "3791:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3776:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenAttestation_$1058_storage",
														"typeString": "struct ILoopso.TokenAttestation storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3736:64:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 921,
																	"name": "attestedToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "3818:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
																		"typeString": "struct ILoopso.TokenAttestation memory"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3832:12:7",
																"memberName": "tokenAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1044,
																"src": "3818:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3856:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3848:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 923,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3848:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3848:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3818:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964205f746f6b656e4944",
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3860:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_985b337fa2ec4100ef9944920998f9c5ef3f9d75b134cead835819dcecc21f86",
																"typeString": "literal_string \"Invalid _tokenID\""
															},
															"value": "Invalid _tokenID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_985b337fa2ec4100ef9944920998f9c5ef3f9d75b134cead835819dcecc21f86",
																"typeString": "literal_string \"Invalid _tokenID\""
															}
														],
														"id": 920,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3810:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3810:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "3810:69:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 936,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "3997:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "4002:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4011:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4028:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "4018:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 939,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "4022:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4018:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 932,
																		"name": "attestedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "3957:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
																			"typeString": "struct ILoopso.TokenAttestation memory"
																		}
																	},
																	"id": 933,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3971:19:7",
																	"memberName": "wrappedTokenAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1057,
																	"src": "3957:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 931,
																"name": "ILSP7Bridged",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "3944:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ILSP7Bridged_$1037_$",
																	"typeString": "type(contract ILSP7Bridged)"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3944:47:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILSP7Bridged_$1037",
																"typeString": "contract ILSP7Bridged"
															}
														},
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3992:4:7",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1027,
														"src": "3944:52:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bool,bytes memory) external"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3944:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "3944:87:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 946,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "4093:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 947,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "4102:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 948,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "4107:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 945,
														"name": "WrappedTokensReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "4071:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$returns$__$",
															"typeString": "function (uint256,address,bytes32)"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4071:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 950,
												"nodeType": "EmitStatement",
												"src": "4066:50:7"
											}
										]
									},
									"functionSelector": "9a67e7f9",
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 911,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 910,
												"name": "onlyRelayer",
												"nameLocations": [
													"3677:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 692,
												"src": "3677:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3677:11:7"
										}
									],
									"name": "releaseWrappedTokens",
									"nameLocation": "3599:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3628:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3620:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3620:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3645:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3637:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3637:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "3658:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3650:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 907,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3650:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3619:48:7"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3689:0:7"
									},
									"scope": 1014,
									"src": "3590:533:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "4181:23:7",
										"statements": []
									},
									"functionSelector": "eac213ce",
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releaseWrappedNonFungibleTokens",
									"nameLocation": "4138:31:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4169:2:7"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4181:0:7"
									},
									"scope": 1014,
									"src": "4129:75:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1159
									],
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "4300:122:7",
										"statements": [
											{
												"assignments": [
													968
												],
												"declarations": [
													{
														"constant": false,
														"id": 968,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4315:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 982,
														"src": "4310:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 967,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4310:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 976,
												"initialValue": {
													"arguments": [
														{
															"id": 973,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "4349:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "4354:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 970,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "4332:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 969,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "4325:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4325:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															}
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4340:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 423,
														"src": "4325:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4325:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4310:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 978,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "4380:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f207061796f757420746f6b656e73",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4389:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0784b270c7abab6ddd6bc02e668ead28238c8eafa86da10a4828b88780f16d0a",
																"typeString": "literal_string \"Failed to payout tokens\""
															},
															"value": "Failed to payout tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0784b270c7abab6ddd6bc02e668ead28238c8eafa86da10a4828b88780f16d0a",
																"typeString": "literal_string \"Failed to payout tokens\""
															}
														],
														"id": 977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4372:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4372:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "4372:43:7"
											}
										]
									},
									"functionSelector": "62a00971",
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 965,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 964,
												"name": "onlyRelayer",
												"nameLocations": [
													"4288:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 692,
												"src": "4288:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4288:11:7"
										}
									],
									"name": "releaseTokens",
									"nameLocation": "4219:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4241:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "4233:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4233:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4258:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "4250:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4250:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "4271:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "4263:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4263:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4232:46:7"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4300:0:7"
									},
									"scope": 1014,
									"src": "4210:212:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "4473:23:7",
										"statements": []
									},
									"functionSelector": "4c597f8a",
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releaseNonFungibleTokens",
									"nameLocation": "4437:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4461:2:7"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4473:0:7"
									},
									"scope": 1014,
									"src": "4428:68:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "4575:145:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 998,
																		"name": "_tokenFactory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "4601:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ITokenFactory_$1207",
																			"typeString": "contract ITokenFactory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ITokenFactory_$1207",
																			"typeString": "contract ITokenFactory"
																		}
																	],
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4593:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 996,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4593:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4593:22:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4627:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4619:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4619:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4619:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4593:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e277420736574204c535020466163746f727920746f20746865207a65726f2061646472657373",
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4631:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d817c94589f2fd2490c47157dd34f129e87dd08fd49c4442e508a9a375e06bb1",
																"typeString": "literal_string \"Can't set LSP Factory to the zero address\""
															},
															"value": "Can't set LSP Factory to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d817c94589f2fd2490c47157dd34f129e87dd08fd49c4442e508a9a375e06bb1",
																"typeString": "literal_string \"Can't set LSP Factory to the zero address\""
															}
														],
														"id": 995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4585:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4585:90:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "4585:90:7"
											},
											{
												"expression": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1008,
														"name": "tokenFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "4685:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenFactory_$1207",
															"typeString": "contract ITokenFactory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1009,
														"name": "_tokenFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "4700:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenFactory_$1207",
															"typeString": "contract ITokenFactory"
														}
													},
													"src": "4685:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenFactory_$1207",
														"typeString": "contract ITokenFactory"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "4685:28:7"
											}
										]
									},
									"functionSelector": "2f73a9f8",
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 993,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 992,
												"name": "onlyAdmin",
												"nameLocations": [
													"4565:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 684,
												"src": "4565:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4565:9:7"
										}
									],
									"name": "setTokenFactory",
									"nameLocation": "4511:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "_tokenFactory",
												"nameLocation": "4541:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "4527:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ITokenFactory_$1207",
													"typeString": "contract ITokenFactory"
												},
												"typeName": {
													"id": 989,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 988,
														"name": "ITokenFactory",
														"nameLocations": [
															"4527:13:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1207,
														"src": "4527:13:7"
													},
													"referencedDeclaration": 1207,
													"src": "4527:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenFactory_$1207",
														"typeString": "contract ITokenFactory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:29:7"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4575:0:7"
									},
									"scope": 1014,
									"src": "4502:218:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1015,
							"src": "350:4372:7",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335,
								1088,
								1093,
								1102,
								1111,
								1120
							]
						}
					],
					"src": "32:4691:7"
				},
				"id": 7
			},
			"src/interfaces/ILSP7Bridged.sol": {
				"ast": {
					"absolutePath": "src/interfaces/ILSP7Bridged.sol",
					"exportedSymbols": {
						"ILSP7Bridged": [
							1037
						]
					},
					"id": 1038,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1016,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILSP7Bridged",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1037,
							"linearizedBaseContracts": [
								1037
							],
							"name": "ILSP7Bridged",
							"nameLocation": "68:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "7580d920",
									"id": 1027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "96:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "109:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "101:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "101:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "121:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "113:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "force",
												"nameLocation": "134:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "129:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "129:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "154:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "141:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1023,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "141:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "100:59:8"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "168:0:8"
									},
									"scope": 1037,
									"src": "87:82:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "44d17187",
									"id": 1036,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "183:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "196:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "188:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "210:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "202:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "231:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "218:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1032,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "218:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "187:49:8"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "245:0:8"
									},
									"scope": 1037,
									"src": "174:72:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1038,
							"src": "58:190:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:217:8"
				},
				"id": 8
			},
			"src/interfaces/ILoopso.sol": {
				"ast": {
					"absolutePath": "src/interfaces/ILoopso.sol",
					"exportedSymbols": {
						"ILoopso": [
							1170
						]
					},
					"id": 1171,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1039,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILoopso",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1170,
							"linearizedBaseContracts": [
								1170
							],
							"name": "ILoopso",
							"nameLocation": "68:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ILoopso.TokenType",
									"id": 1042,
									"members": [
										{
											"id": 1040,
											"name": "Fungible",
											"nameLocation": "107:8:9",
											"nodeType": "EnumValue",
											"src": "107:8:9"
										},
										{
											"id": 1041,
											"name": "NonFungible",
											"nameLocation": "125:11:9",
											"nodeType": "EnumValue",
											"src": "125:11:9"
										}
									],
									"name": "TokenType",
									"nameLocation": "87:9:9",
									"nodeType": "EnumDefinition",
									"src": "82:60:9"
								},
								{
									"canonicalName": "ILoopso.TokenAttestation",
									"id": 1058,
									"members": [
										{
											"constant": false,
											"id": 1044,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "190:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1058,
											"src": "182:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1043,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "182:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1046,
											"mutability": "mutable",
											"name": "tokenChain",
											"nameLocation": "220:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1058,
											"src": "212:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1045,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "212:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1049,
											"mutability": "mutable",
											"name": "tokenType",
											"nameLocation": "250:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1058,
											"src": "240:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_TokenType_$1042",
												"typeString": "enum ILoopso.TokenType"
											},
											"typeName": {
												"id": 1048,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1047,
													"name": "TokenType",
													"nameLocations": [
														"240:9:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1042,
													"src": "240:9:9"
												},
												"referencedDeclaration": 1042,
												"src": "240:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_TokenType_$1042",
													"typeString": "enum ILoopso.TokenType"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1051,
											"mutability": "mutable",
											"name": "decimals",
											"nameLocation": "275:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1058,
											"src": "269:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1050,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "269:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1053,
											"mutability": "mutable",
											"name": "symbol",
											"nameLocation": "300:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1058,
											"src": "293:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1052,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "293:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1055,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "323:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 1058,
											"src": "316:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1054,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "316:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1057,
											"mutability": "mutable",
											"name": "wrappedTokenAddress",
											"nameLocation": "345:19:9",
											"nodeType": "VariableDeclaration",
											"scope": 1058,
											"src": "337:27:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1056,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "337:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenAttestation",
									"nameLocation": "155:16:9",
									"nodeType": "StructDefinition",
									"scope": 1170,
									"src": "148:223:9",
									"visibility": "public"
								},
								{
									"canonicalName": "ILoopso.TokenTransferBase",
									"id": 1071,
									"members": [
										{
											"constant": false,
											"id": 1060,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "420:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1071,
											"src": "412:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1059,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "412:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1062,
											"mutability": "mutable",
											"name": "srcChain",
											"nameLocation": "447:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1071,
											"src": "439:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1061,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "439:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1064,
											"mutability": "mutable",
											"name": "srcAddress",
											"nameLocation": "473:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1071,
											"src": "465:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1063,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "465:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1066,
											"mutability": "mutable",
											"name": "dstChain",
											"nameLocation": "501:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1071,
											"src": "493:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1065,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "493:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1068,
											"mutability": "mutable",
											"name": "dstAddress",
											"nameLocation": "527:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 1071,
											"src": "519:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1067,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "519:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1070,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "555:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1071,
											"src": "547:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1069,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "547:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenTransferBase",
									"nameLocation": "384:17:9",
									"nodeType": "StructDefinition",
									"scope": 1170,
									"src": "377:197:9",
									"visibility": "public"
								},
								{
									"canonicalName": "ILoopso.TokenTransfer",
									"id": 1077,
									"members": [
										{
											"constant": false,
											"id": 1074,
											"mutability": "mutable",
											"name": "tokenTransfer",
											"nameLocation": "629:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 1077,
											"src": "611:31:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenTransferBase_$1071_storage_ptr",
												"typeString": "struct ILoopso.TokenTransferBase"
											},
											"typeName": {
												"id": 1073,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1072,
													"name": "TokenTransferBase",
													"nameLocations": [
														"611:17:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1071,
													"src": "611:17:9"
												},
												"referencedDeclaration": 1071,
												"src": "611:17:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenTransferBase_$1071_storage_ptr",
													"typeString": "struct ILoopso.TokenTransferBase"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1076,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "660:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1077,
											"src": "652:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1075,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "652:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenTransfer",
									"nameLocation": "587:13:9",
									"nodeType": "StructDefinition",
									"scope": 1170,
									"src": "580:93:9",
									"visibility": "public"
								},
								{
									"canonicalName": "ILoopso.TokenTransferNonFungible",
									"id": 1083,
									"members": [
										{
											"constant": false,
											"id": 1080,
											"mutability": "mutable",
											"name": "tokenTransfer",
											"nameLocation": "739:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 1083,
											"src": "721:31:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenTransferBase_$1071_storage_ptr",
												"typeString": "struct ILoopso.TokenTransferBase"
											},
											"typeName": {
												"id": 1079,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1078,
													"name": "TokenTransferBase",
													"nameLocations": [
														"721:17:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1071,
													"src": "721:17:9"
												},
												"referencedDeclaration": 1071,
												"src": "721:17:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenTransferBase_$1071_storage_ptr",
													"typeString": "struct ILoopso.TokenTransferBase"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1082,
											"mutability": "mutable",
											"name": "tokenID",
											"nameLocation": "770:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1083,
											"src": "762:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1081,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "762:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenTransferNonFungible",
									"nameLocation": "686:24:9",
									"nodeType": "StructDefinition",
									"scope": 1170,
									"src": "679:105:9",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "790:81:9",
										"text": "@dev Emitted by attestToken. Means a new token is supported by the bridge. "
									},
									"eventSelector": "a755bee123b19cfd95f30d3bed835ac8dab8a08f893508aa86140d1b66c77e13",
									"id": 1088,
									"name": "TokenAttested",
									"nameLocation": "882:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "912:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "896:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1085,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "895:25:9"
									},
									"src": "876:45:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "927:111:9",
										"text": "@dev Emitted by bridgeTokens. transferID is used by the relayer as it helps locate the transfer details. "
									},
									"eventSelector": "911623f001224d5d44bba15e09f9764c38794e74d052085b3e24c04e05b7aed7",
									"id": 1093,
									"name": "TokensBridged",
									"nameLocation": "1049:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"indexed": true,
												"mutability": "mutable",
												"name": "transferID",
												"nameLocation": "1079:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "1063:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:28:9"
									},
									"src": "1043:48:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "1097:116:9",
										"text": "@dev Emitted by bridgeTokensBack. Relayer should use indexed params to release the tokens on the other chain. "
									},
									"eventSelector": "80c5d77a092b389b97d2b4a5bc721315e540c267567756df827f2edab66facba",
									"id": 1102,
									"name": "TokensBridgedBack",
									"nameLocation": "1224:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1258:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "1242:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1282:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "1266:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "1302:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "1286:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1099,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1241:69:9"
									},
									"src": "1218:93:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "1317:112:9",
										"text": "@dev Emitted by releaseTokens. This means briding back wrapped tokens to the source chain was successful. "
									},
									"eventSelector": "ac984453286939de6c31d3b8390199a972705a0d800108d513f2b825d23768fb",
									"id": 1111,
									"name": "TokensReleased",
									"nameLocation": "1440:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1471:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1455:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1495:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1479:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1479:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1515:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1499:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:67:9"
									},
									"src": "1434:88:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "1528:79:9",
										"text": "@dev Emitted by releaseWrappedTokens. This briding tokens was succesful. "
									},
									"eventSelector": "7aebc2282a0784072e43f12d40afc658f82fda3d0e830865d50dd7b0196df7f1",
									"id": 1120,
									"name": "WrappedTokensReleased",
									"nameLocation": "1618:21:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1656:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "1640:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "1664:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "1700:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "1684:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1639:69:9"
									},
									"src": "1612:97:9"
								},
								{
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "1715:227:9",
										"text": "@dev Called by bridge admin on the destination chain to attest a token.\nOnly attested tokens can be bridged.\n@param attestation Contains details that are used to identify a token from chain A on chain B."
									},
									"functionSelector": "31ba1648",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "attestToken",
									"nameLocation": "1956:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "attestation",
												"nameLocation": "1992:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1968:35:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenAttestation_$1058_memory_ptr",
													"typeString": "struct ILoopso.TokenAttestation"
												},
												"typeName": {
													"id": 1123,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1122,
														"name": "TokenAttestation",
														"nameLocations": [
															"1968:16:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1058,
														"src": "1968:16:9"
													},
													"referencedDeclaration": 1058,
													"src": "1968:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenAttestation_$1058_storage_ptr",
														"typeString": "struct ILoopso.TokenAttestation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:37:9"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2013:0:9"
									},
									"scope": 1170,
									"src": "1947:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "2020:351:9",
										"text": "@dev Called by users to bridge tokens from source chain to destination chain.\n@param _token The address of the token to bridge.\n@param _amount The amount of tokens to bridge.\n@param _dstChain Chain ID where we are bridging to.\n@param _dstAddress Address the wrapped tokens will be released to on the destination chain. "
									},
									"functionSelector": "33b15aad",
									"id": 1139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeTokens",
									"nameLocation": "2385:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2415:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2407:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2439:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2431:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "_dstChain",
												"nameLocation": "2464:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2456:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2456:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "_dstAddress",
												"nameLocation": "2491:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2483:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2483:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2397:111:9"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2517:0:9"
									},
									"scope": 1170,
									"src": "2376:142:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "2524:332:9",
										"text": "@dev Burns _amount of locked tokens on the destination chain, emits an event that relayer picks up.\n@param _amount Amount of tokens to bridge back.\n@param _to Address the original tokens will be released to.\n@param _tokenID ID of the TokenAttestation struct we use to identify a chain A token on chain B."
									},
									"functionSelector": "63a4e95f",
									"id": 1149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeTokensBack",
									"nameLocation": "2870:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2895:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2887:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2887:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2912:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2904:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2904:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "2925:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2917:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1145,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2917:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2886:48:9"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2943:0:9"
									},
									"scope": 1170,
									"src": "2861:83:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "2950:299:9",
										"text": "@dev Called by the relayer after it picks up a TokensBridgedBackEvent.\nIt releases the bridged back tokens to the user.\n@param _amount The amount of tokens to release.\n@param _to The address to release the tokens to.\n@param _token The address of the token to release."
									},
									"functionSelector": "62a00971",
									"id": 1159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "releaseTokens",
									"nameLocation": "3263:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3285:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "3277:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3277:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3302:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "3294:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3315:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "3307:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3307:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3276:46:9"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3331:0:9"
									},
									"scope": 1170,
									"src": "3254:78:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "3338:374:9",
										"text": "@dev Called by the relayer after it picks up a bridge event from the source chain.\nIt mints wrapped tokens equivalent to the tokens locked up on the source chain.\n@param _amount Amount of wrapped tokens to mint.\n@param _to The address the wrapped tokens will be minted to.\n@param _tokenID The ID we use to identify a chain A token on chain B."
									},
									"functionSelector": "9a67e7f9",
									"id": 1169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "releaseWrappedTokens",
									"nameLocation": "3726:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3755:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "3747:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3772:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "3764:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "3785:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "3777:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1165,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3746:48:9"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3803:0:9"
									},
									"scope": 1170,
									"src": "3717:87:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1171,
							"src": "58:3748:9",
							"usedErrors": [],
							"usedEvents": [
								1088,
								1093,
								1102,
								1111,
								1120
							]
						}
					],
					"src": "32:3775:9"
				},
				"id": 9
			},
			"src/interfaces/ITokenFactory.sol": {
				"ast": {
					"absolutePath": "src/interfaces/ITokenFactory.sol",
					"exportedSymbols": {
						"ITokenFactory": [
							1207
						]
					},
					"id": 1208,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1172,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITokenFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1207,
							"linearizedBaseContracts": [
								1207
							],
							"name": "ITokenFactory",
							"nameLocation": "68:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "b4c7ebb6db2dde95305f2d49e25ccff863340c1687fd8ffc286e54f407450b0e",
									"id": 1176,
									"name": "NewLSP7",
									"nameLocation": "94:7:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "118:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "102:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "101:30:10"
									},
									"src": "88:44:10"
								},
								{
									"anonymous": false,
									"eventSelector": "5f63d1bcb76d84bd0e95353742bd4750042dd92f6b3564329fc3835b534d81c5",
									"id": 1180,
									"name": "NewLSP8",
									"nameLocation": "143:7:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "167:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "151:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "150:30:10"
									},
									"src": "137:44:10"
								},
								{
									"anonymous": false,
									"eventSelector": "f698fc8844e369b3e9cfbaeeffa4b49f8dd37e5f7860d6c77ec547138b17a53a",
									"id": 1184,
									"name": "MasterLSP7Set",
									"nameLocation": "193:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"indexed": true,
												"mutability": "mutable",
												"name": "masterLSP7",
												"nameLocation": "223:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "207:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "206:28:10"
									},
									"src": "187:48:10"
								},
								{
									"anonymous": false,
									"eventSelector": "f66f787049205d43342024527dac5613b077dca9157438720fcd26fe6a301286",
									"id": 1188,
									"name": "MasterLSP8Set",
									"nameLocation": "246:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"indexed": true,
												"mutability": "mutable",
												"name": "masterLSP8",
												"nameLocation": "276:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "260:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "259:28:10"
									},
									"src": "240:48:10"
								},
								{
									"functionSelector": "8fe59807",
									"id": 1197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createNewLSP7",
									"nameLocation": "303:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "331:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "317:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1189,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "317:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "352:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "338:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "338:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "316:44:10"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "379:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:9:10"
									},
									"scope": 1207,
									"src": "294:94:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c2c2b31f",
									"id": 1206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createNewLSP8",
									"nameLocation": "403:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "431:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "417:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "452:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "438:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:44:10"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "479:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:9:10"
									},
									"scope": 1207,
									"src": "394:94:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1208,
							"src": "58:432:10",
							"usedErrors": [],
							"usedEvents": [
								1176,
								1180,
								1184,
								1188
							]
						}
					],
					"src": "32:458:10"
				},
				"id": 10
			}
		}
	}
}